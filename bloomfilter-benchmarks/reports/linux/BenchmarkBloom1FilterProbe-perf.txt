# JMH version: 1.19
# VM version: JDK 1.8.0_131, VM 25.131-b12
# VM invoker: /usr/lib/jvm/java-1.8.0-openjdk-1.8.0.131-3.b12.el7_3.x86_64/jre/bin/java
# VM options: -XX:AllocatePrefetchStyle=2
# Warmup: 5 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloom1FilterProbe.testProbe
# Parameters: (numEntries = 10000)

# Run progress: 0.00% complete, ETA 00:00:30
# Fork: 1 of 1
# Preparing profilers: LinuxPerfProfiler 
# Profilers consume stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 56.787 ns/op
# Warmup Iteration   2: 59.889 ns/op
# Warmup Iteration   3: 40.597 ns/op
# Warmup Iteration   4: 36.474 ns/op
# Warmup Iteration   5: 39.349 ns/op
Iteration   1: 48.000 ns/op
Iteration   2: 37.588 ns/op
Iteration   3: 32.277 ns/op
Iteration   4: 35.871 ns/op
Iteration   5: 32.805 ns/op
Iteration   6: 37.237 ns/op
Iteration   7: 54.060 ns/op
Iteration   8: 50.038 ns/op
Iteration   9: 51.516 ns/op
Iteration  10: 34.934 ns/op
# Processing profiler results: LinuxPerfProfiler 


Result "com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloom1FilterProbe.testProbe":
  41.433 ±(99.9%) 12.770 ns/op [Average]
  (min, avg, max) = (32.277, 41.433, 54.060), stdev = 8.447
  CI (99.9%): [28.662, 54.203] (assumes normal distribution)

Secondary result "com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloom1FilterProbe.testProbe:·perf":
Perf stats:
--------------------------------------------------

      17539.635739      task-clock (msec)         #    0.751 CPUs utilized          
             1,222      context-switches          #    0.070 K/sec                  
               645      cpu-migrations            #    0.037 K/sec                  
         1,297,310      page-faults               #    0.074 M/sec                  
    36,473,092,840      cycles                    #    2.079 GHz                      (26.90%)
    13,736,642,080      stalled-cycles-frontend   #   37.66% frontend cycles idle     (27.09%)
   <not supported>      stalled-cycles-backend   
    82,267,111,162      instructions              #    2.26  insns per cycle        
                                                  #    0.17  stalled cycles per insn  (33.88%)
     9,509,529,741      branches                  #  542.174 M/sec                    (34.02%)
         5,440,318      branch-misses             #    0.06% of all branches          (34.17%)
    18,041,923,177      L1-dcache-loads           # 1028.637 M/sec                    (26.63%)
       239,171,180      L1-dcache-load-misses     #    1.33% of all L1-dcache hits    (13.64%)
        44,342,914      LLC-loads                 #    2.528 M/sec                    (15.73%)
        14,247,973      LLC-load-misses           #   32.13% of all LL-cache hits     (30.08%)
   <not supported>      L1-icache-loads          
         5,266,550      L1-icache-load-misses     #    0.300 M/sec                    (40.04%)
    11,992,738,931      dTLB-loads                #  683.751 M/sec                    (39.84%)
        16,895,222      dTLB-load-misses          #    0.14% of all dTLB cache hits   (28.96%)
            23,295      iTLB-loads                #    0.001 M/sec                    (28.94%)
            58,449      iTLB-load-misses          #  250.91% of all iTLB cache hits   (45.82%)
   <not supported>      L1-dcache-prefetches     
        39,944,341      L1-dcache-prefetch-misses #    2.277 M/sec                    (61.04%)

      23.341693284 seconds time elapsed



# JMH version: 1.19
# VM version: JDK 1.8.0_131, VM 25.131-b12
# VM invoker: /usr/lib/jvm/java-1.8.0-openjdk-1.8.0.131-3.b12.el7_3.x86_64/jre/bin/java
# VM options: -XX:AllocatePrefetchStyle=2
# Warmup: 5 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloom1FilterProbe.testProbe
# Parameters: (numEntries = 10000000)

# Run progress: 50.00% complete, ETA 00:00:23
# Fork: 1 of 1
# Preparing profilers: LinuxPerfProfiler 
# Profilers consume stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 58.799 ns/op
# Warmup Iteration   2: 40.689 ns/op
# Warmup Iteration   3: 35.050 ns/op
# Warmup Iteration   4: 29.313 ns/op
# Warmup Iteration   5: 40.771 ns/op
Iteration   1: 51.521 ns/op
Iteration   2: 32.786 ns/op
Iteration   3: 28.523 ns/op
Iteration   4: 31.081 ns/op
Iteration   5: 32.122 ns/op
Iteration   6: 37.581 ns/op
Iteration   7: 51.018 ns/op
Iteration   8: 51.488 ns/op
Iteration   9: 51.492 ns/op
Iteration  10: 35.709 ns/op
# Processing profiler results: LinuxPerfProfiler 


Result "com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloom1FilterProbe.testProbe":
  40.332 ±(99.9%) 14.837 ns/op [Average]
  (min, avg, max) = (28.523, 40.332, 51.521), stdev = 9.813
  CI (99.9%): [25.496, 55.169] (assumes normal distribution)

Secondary result "com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloom1FilterProbe.testProbe:·perf":
Perf stats:
--------------------------------------------------

      16996.131564      task-clock (msec)         #    0.772 CPUs utilized          
             1,220      context-switches          #    0.072 K/sec                  
               530      cpu-migrations            #    0.031 K/sec                  
         1,055,753      page-faults               #    0.062 M/sec                  
    38,570,906,155      cycles                    #    2.269 GHz                      (26.64%)
    13,774,109,620      stalled-cycles-frontend   #   35.71% frontend cycles idle     (26.92%)
   <not supported>      stalled-cycles-backend   
    82,843,757,834      instructions              #    2.15  insns per cycle        
                                                  #    0.17  stalled cycles per insn  (33.80%)
     9,620,276,087      branches                  #  566.027 M/sec                    (33.93%)
         4,442,496      branch-misses             #    0.05% of all branches          (34.10%)
    18,081,163,441      L1-dcache-loads           # 1063.840 M/sec                    (26.41%)
       230,648,589      L1-dcache-load-misses     #    1.28% of all L1-dcache hits    (13.96%)
        46,329,995      LLC-loads                 #    2.726 M/sec                    (13.93%)
        19,321,000      LLC-load-misses           #   41.70% of all LL-cache hits     (20.71%)
   <not supported>      L1-icache-loads          
         7,530,658      L1-icache-load-misses     #    0.443 M/sec                    (27.42%)
    17,904,559,124      dTLB-loads                # 1053.449 M/sec                    (26.80%)
        34,696,609      dTLB-load-misses          #    0.19% of all dTLB cache hits   (13.66%)
           144,464      iTLB-loads                #    0.008 M/sec                    (13.95%)
           150,374      iTLB-load-misses          #  104.09% of all iTLB cache hits   (20.82%)
   <not supported>      L1-dcache-prefetches     
        87,505,594      L1-dcache-prefetch-misses #    5.149 M/sec                    (27.79%)

      22.003911335 seconds time elapsed



# Run complete. Total time: 00:00:45

Benchmark                                   (numEntries)  Mode  Cnt   Score    Error  Units
BenchmarkBloom1FilterProbe.testProbe               10000  avgt   10  41.433 ± 12.770  ns/op
BenchmarkBloom1FilterProbe.testProbe:·cpi          10000  avgt        0.443             CPI
BenchmarkBloom1FilterProbe.testProbe:·perf         10000  avgt          NaN             ---
BenchmarkBloom1FilterProbe.testProbe            10000000  avgt   10  40.332 ± 14.837  ns/op
BenchmarkBloom1FilterProbe.testProbe:·cpi       10000000  avgt        0.466             CPI
BenchmarkBloom1FilterProbe.testProbe:·perf      10000000  avgt          NaN             ---
