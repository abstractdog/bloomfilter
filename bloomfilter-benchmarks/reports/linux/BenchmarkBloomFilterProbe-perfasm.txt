# JMH version: 1.19
# VM version: JDK 1.8.0_131, VM 25.131-b12
# VM invoker: /usr/lib/jvm/java-1.8.0-openjdk-1.8.0.131-3.b12.el7_3.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe.testProbe1BloomFilter
# Parameters: (size = 10000)

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 225.606 ns/op
# Warmup Iteration   2: 196.380 ns/op
# Warmup Iteration   3: 125.620 ns/op
# Warmup Iteration   4: 120.822 ns/op
# Warmup Iteration   5: 119.545 ns/op
Iteration   1: 121.269 ns/op
Iteration   2: 148.120 ns/op
Iteration   3: 145.466 ns/op
Iteration   4: 118.012 ns/op
Iteration   5: 116.109 ns/op
# Processing profiler results: LinuxPerfAsmProfiler 


Result "com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe.testProbe1BloomFilter":
  129.795 ±(99.9%) 60.280 ns/op [Average]
  (min, avg, max) = (116.109, 129.795, 148.120), stdev = 15.654
  CI (99.9%): [69.515, 190.075] (assumes normal distribution)

Secondary result "com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe.testProbe1BloomFilter:·asm":
PrintAssembly processed: 190381 total address lines.
Perf output processed (skipped 11.554 seconds):
 Column 1: cycles (5418 events)
 Column 2: instructions (5440 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
C2, level 4, com.github.prasanthj.bloomfilter.benchmarks.generated.BenchmarkBloomFilterProbe_testProbe1BloomFilter_jmhTest::testProbe1BloomFilter_avgt_jmhStub, version 605 (796 bytes) 

                                                                               ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@34 (line 150)
                                                                               ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                                                                               ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe1BloomFilter@12 (line 62)
                                                                               ; - com.github.prasanthj.bloomfilter.benchmarks.generated.BenchmarkBloomFilterProbe_testProbe1BloomFilter_jmhTest::testProbe1BloomFilter_avgt_jmhStub@15 (line 232)
                                 0x00007fa20d49314c: jmp    0x00007fa20d4930e8  ;*iconst_1
                                                                               ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@79 (line 160)
                                                                               ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                                                                               ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe1BloomFilter@12 (line 62)
                                                                               ; - com.github.prasanthj.bloomfilter.benchmarks.generated.BenchmarkBloomFilterProbe_testProbe1BloomFilter_jmhTest::testProbe1BloomFilter_avgt_jmhStub@15 (line 232)
                    ↗       ↗    0x00007fa20d49314e: mov    0x10(%rsp),%r10d
  0.02%             │       │    0x00007fa20d493153: dec    %r10d              ;*iinc
                    │       │                                                  ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe1BloomFilter@16 (line 61)
                    │       │                                                  ; - com.github.prasanthj.bloomfilter.benchmarks.generated.BenchmarkBloomFilterProbe_testProbe1BloomFilter_jmhTest::testProbe1BloomFilter_avgt_jmhStub@15 (line 232)
  0.78%    0.96%    │       │    0x00007fa20d493156: cmp    $0xffffffffffffffff,%r10d
                  ╭ │       │    0x00007fa20d49315a: jle    0x00007fa20d493167  ;*iflt
                  │ │       │                                                  ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe1BloomFilter@3 (line 61)
                  │ │       │                                                  ; - com.github.prasanthj.bloomfilter.benchmarks.generated.BenchmarkBloomFilterProbe_testProbe1BloomFilter_jmhTest::testProbe1BloomFilter_avgt_jmhStub@15 (line 232)
                  │ │       │    0x00007fa20d49315c: mov    0x50(%rsp),%r8
                  │ │       │    0x00007fa20d493161: mov    (%rsp),%rbx
  0.04%           │╭│       │    0x00007fa20d493165: jmp    0x00007fa20d493191
                  ↘││       │    0x00007fa20d493167: mov    0x50(%rsp),%r8
                   ││       │    0x00007fa20d49316c: movzbl 0x94(%r8),%r10d    ;*getfield isDone
                   ││       │                                                  ; - com.github.prasanthj.bloomfilter.benchmarks.generated.BenchmarkBloomFilterProbe_testProbe1BloomFilter_jmhTest::testProbe1BloomFilter_avgt_jmhStub@25 (line 234)
  0.06%            ││       │    0x00007fa20d493174: mov    (%rsp),%rbx
  0.31%    0.37%   ││       │    0x00007fa20d493178: add    $0x1,%rbx          ; OopMap{r8=Oop [80]=Oop [88]=Oop [8]=Oop off=924}
                   ││       │                                                  ;*ifeq
                   ││       │                                                  ; - com.github.prasanthj.bloomfilter.benchmarks.generated.BenchmarkBloomFilterProbe_testProbe1BloomFilter_jmhTest::testProbe1BloomFilter_avgt_jmhStub@28 (line 234)
                   ││       │    0x00007fa20d49317c: test   %eax,0x16bf4e7e(%rip)        # 0x00007fa224088000
                   ││       │                                                  ;   {poll}
                   ││       │    0x00007fa20d493182: test   %r10d,%r10d
                   ││       │    0x00007fa20d493185: jne    0x00007fa20d4935fa  ;*aload
                   ││       │                                                  ; - com.github.prasanthj.bloomfilter.benchmarks.generated.BenchmarkBloomFilterProbe_testProbe1BloomFilter_jmhTest::testProbe1BloomFilter_avgt_jmhStub@13 (line 232)
  0.04%            ││       │    0x00007fa20d49318b: mov    $0x1,%r10d         ;*aload_0
                   ││       │                                                  ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe1BloomFilter@6 (line 62)
                   ││       │                                                  ; - com.github.prasanthj.bloomfilter.benchmarks.generated.BenchmarkBloomFilterProbe_testProbe1BloomFilter_jmhTest::testProbe1BloomFilter_avgt_jmhStub@15 (line 232)
  0.66%    0.94%   ↘│       │    0x00007fa20d493191: mov    0x8(%rsp),%r11
                    │       │    0x00007fa20d493196: mov    0x10(%r11),%ebp    ;*getfield bf
                    │       │                                                  ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe1BloomFilter@7 (line 62)
                    │       │                                                  ; - com.github.prasanthj.bloomfilter.benchmarks.generated.BenchmarkBloomFilterProbe_testProbe1BloomFilter_jmhTest::testProbe1BloomFilter_avgt_jmhStub@15 (line 232)
           0.02%    │       │    0x00007fa20d49319a: movslq %r10d,%rcx         ;*i2l  ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe1BloomFilter@11 (line 62)
                    │       │                                                  ; - com.github.prasanthj.bloomfilter.benchmarks.generated.BenchmarkBloomFilterProbe_testProbe1BloomFilter_jmhTest::testProbe1BloomFilter_avgt_jmhStub@15 (line 232)
  0.02%    0.02%    │       │    0x00007fa20d49319d: test   %ebp,%ebp
                    │       │    0x00007fa20d49319f: je     0x00007fa20d493561  ;*invokevirtual testLong
                    │       │                                                  ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe1BloomFilter@12 (line 62)
                    │       │                                                  ; - com.github.prasanthj.bloomfilter.benchmarks.generated.BenchmarkBloomFilterProbe_testProbe1BloomFilter_jmhTest::testProbe1BloomFilter_avgt_jmhStub@15 (line 232)
  0.59%    0.99%    │       │    0x00007fa20d4931a5: mov    0x60(%r15),%rax
                    │       │    0x00007fa20d4931a9: mov    %rax,%r9
                    │       │    0x00007fa20d4931ac: add    $0x18,%r9
  0.04%    0.04%    │       │    0x00007fa20d4931b0: lea    (%r12,%rbp,8),%rdi  ;*getfield bf
                    │       │                                                  ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe1BloomFilter@7 (line 62)
                    │       │                                                  ; - com.github.prasanthj.bloomfilter.benchmarks.generated.BenchmarkBloomFilterProbe_testProbe1BloomFilter_jmhTest::testProbe1BloomFilter_avgt_jmhStub@15 (line 232)
  0.72%    0.85%    │       │    0x00007fa20d4931b4: cmp    0x70(%r15),%r9
                    │       │    0x00007fa20d4931b8: jae    0x00007fa20d493482
                    │       │    0x00007fa20d4931be: mov    %r9,0x60(%r15)
           0.02%    │       │    0x00007fa20d4931c2: prefetchnta 0xc0(%r9)
  0.98%    0.31%    │       │    0x00007fa20d4931ca: movq   $0x1,(%rax)
  0.72%    1.07%    │       │    0x00007fa20d4931d1: prefetchnta 0x100(%r9)
  1.00%    0.04%    │       │    0x00007fa20d4931d9: movl   $0x768,0x8(%rax)   ;   {metadata({type array byte})}
  0.02%             │       │    0x00007fa20d4931e0: prefetchnta 0x140(%r9)
  1.38%    0.15%    │       │    0x00007fa20d4931e8: movl   $0x8,0xc(%rax)
  0.74%    0.57%    │       │    0x00007fa20d4931ef: prefetchnta 0x180(%r9)
  1.27%    0.15%    │       │    0x00007fa20d4931f7: movl   $0x0,0x10(%rax)
  0.07%             │       │    0x00007fa20d4931fe: movl   $0x0,0x14(%rax)
  0.02%    0.04%    │       │    0x00007fa20d493205: mov    %r8,0x50(%rsp)
  0.59%    0.63%    │       │    0x00007fa20d49320a: mov    %rbx,(%rsp)
           0.02%    │       │    0x00007fa20d49320e: mov    %ebp,0x60(%rsp)
  0.04%    0.02%    │       │    0x00007fa20d493212: mov    %rdi,0x18(%rsp)    ;*newarray
                    │       │                                                  ; - com.github.prasanthj.bloomfilter.BloomFilter::longToByteArrayLE@2 (line 195)
                    │       │                                                  ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@2 (line 176)
                    │       │                                                  ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe1BloomFilter@12 (line 62)
                    │       │                                                  ; - com.github.prasanthj.bloomfilter.benchmarks.generated.BenchmarkBloomFilterProbe_testProbe1BloomFilter_jmhTest::testProbe1BloomFilter_avgt_jmhStub@15 (line 232)
  0.02%    0.04%    │       │    0x00007fa20d493217: mov    %r10b,0x10(%rax)   ;*bastore
                    │       │                                                  ; - com.github.prasanthj.bloomfilter.BloomFilter::longToByteArrayLE@11 (line 195)
                    │       │                                                  ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@2 (line 176)
                    │       │                                                  ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe1BloomFilter@12 (line 62)
                    │       │                                                  ; - com.github.prasanthj.bloomfilter.benchmarks.generated.BenchmarkBloomFilterProbe_testProbe1BloomFilter_jmhTest::testProbe1BloomFilter_avgt_jmhStub@15 (line 232)
  0.65%    0.44%    │       │    0x00007fa20d49321b: mov    %r10d,0x10(%rsp)
  0.04%             │       │    0x00007fa20d493220: mov    %rcx,%r10
                    │       │    0x00007fa20d493223: sar    $0x30,%r10
                    │       │    0x00007fa20d493227: mov    %rcx,%rdi
  0.87%    0.88%    │       │    0x00007fa20d49322a: sar    $0x28,%rcx
  0.02%             │       │    0x00007fa20d49322e: mov    %r10d,%r11d
                    │       │    0x00007fa20d493231: mov    %ecx,%r10d
                    │       │    0x00007fa20d493234: mov    %rdi,%r8
  0.57%    0.83%    │       │    0x00007fa20d493237: sar    $0x20,%r8
  0.02%             │       │    0x00007fa20d49323b: mov    %rdi,%rcx
                    │       │    0x00007fa20d49323e: sar    $0x18,%rcx
  0.04%             │       │    0x00007fa20d493242: mov    %r8d,%r9d
  0.70%    0.59%    │       │    0x00007fa20d493245: mov    %ecx,%r8d
  0.02%    0.02%    │       │    0x00007fa20d493248: mov    %rdi,%rbx
                    │       │    0x00007fa20d49324b: sar    $0x10,%rbx
  0.02%             │       │    0x00007fa20d49324f: mov    %rdi,%rcx
  0.65%    0.24%    │       │    0x00007fa20d493252: sar    $0x8,%rcx
           0.02%    │       │    0x00007fa20d493256: mov    %ebx,%ebx
  0.02%    0.02%    │       │    0x00007fa20d493258: mov    %ecx,%ecx
  0.06%    0.04%    │       │    0x00007fa20d49325a: mov    %cl,0x11(%rax)     ;*bastore
                    │       │                                                  ; - com.github.prasanthj.bloomfilter.BloomFilter::longToByteArrayLE@20 (line 195)
                    │       │                                                  ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@2 (line 176)
                    │       │                                                  ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe1BloomFilter@12 (line 62)
                    │       │                                                  ; - com.github.prasanthj.bloomfilter.benchmarks.generated.BenchmarkBloomFilterProbe_testProbe1BloomFilter_jmhTest::testProbe1BloomFilter_avgt_jmhStub@15 (line 232)
  1.02%    0.15%    │       │    0x00007fa20d49325d: mov    %bl,0x12(%rax)     ;*bastore
                    │       │                                                  ; - com.github.prasanthj.bloomfilter.BloomFilter::longToByteArrayLE@29 (line 195)
                    │       │                                                  ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@2 (line 176)
                    │       │                                                  ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe1BloomFilter@12 (line 62)
                    │       │                                                  ; - com.github.prasanthj.bloomfilter.benchmarks.generated.BenchmarkBloomFilterProbe_testProbe1BloomFilter_jmhTest::testProbe1BloomFilter_avgt_jmhStub@15 (line 232)
  0.20%             │       │    0x00007fa20d493260: mov    %r8b,0x13(%rax)    ;*bastore
                    │       │                                                  ; - com.github.prasanthj.bloomfilter.BloomFilter::longToByteArrayLE@38 (line 195)
                    │       │                                                  ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@2 (line 176)
                    │       │                                                  ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe1BloomFilter@12 (line 62)
                    │       │                                                  ; - com.github.prasanthj.bloomfilter.benchmarks.generated.BenchmarkBloomFilterProbe_testProbe1BloomFilter_jmhTest::testProbe1BloomFilter_avgt_jmhStub@15 (line 232)
  0.07%    0.02%    │       │    0x00007fa20d493264: mov    %r9b,0x14(%rax)    ;*bastore
                    │       │                                                  ; - com.github.prasanthj.bloomfilter.BloomFilter::longToByteArrayLE@47 (line 195)
                    │       │                                                  ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@2 (line 176)
                    │       │                                                  ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe1BloomFilter@12 (line 62)
                    │       │                                                  ; - com.github.prasanthj.bloomfilter.benchmarks.generated.BenchmarkBloomFilterProbe_testProbe1BloomFilter_jmhTest::testProbe1BloomFilter_avgt_jmhStub@15 (line 232)
  0.07%    0.06%    │       │    0x00007fa20d493268: mov    %r10b,0x15(%rax)   ;*bastore
                    │       │                                                  ; - com.github.prasanthj.bloomfilter.BloomFilter::longToByteArrayLE@56 (line 195)
                    │       │                                                  ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@2 (line 176)
                    │       │                                                  ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe1BloomFilter@12 (line 62)
                    │       │                                                  ; - com.github.prasanthj.bloomfilter.benchmarks.generated.BenchmarkBloomFilterProbe_testProbe1BloomFilter_jmhTest::testProbe1BloomFilter_avgt_jmhStub@15 (line 232)
  0.78%    0.11%    │       │    0x00007fa20d49326c: mov    %r11b,0x16(%rax)   ;*bastore
                    │       │                                                  ; - com.github.prasanthj.bloomfilter.BloomFilter::longToByteArrayLE@66 (line 195)
                    │       │                                                  ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@2 (line 176)
                    │       │                                                  ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe1BloomFilter@12 (line 62)
                    │       │                                                  ; - com.github.prasanthj.bloomfilter.benchmarks.generated.BenchmarkBloomFilterProbe_testProbe1BloomFilter_jmhTest::testProbe1BloomFilter_avgt_jmhStub@15 (line 232)
  0.06%             │       │    0x00007fa20d493270: sar    $0x38,%rdi
                    │       │    0x00007fa20d493274: mov    %edi,%r11d
  0.02%    0.02%    │       │    0x00007fa20d493277: mov    %r11b,0x17(%rax)
  0.61%    1.05%    │       │    0x00007fa20d49327b: mov    %rax,%rsi          ;*synchronization entry
                    │       │                                                  ; - com.github.prasanthj.bloomfilter.Murmur3::hash64@-1 (line 118)
                    │       │                                                  ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@1 (line 145)
                    │       │                                                  ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                    │       │                                                  ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe1BloomFilter@12 (line 62)
                    │       │                                                  ; - com.github.prasanthj.bloomfilter.benchmarks.generated.BenchmarkBloomFilterProbe_testProbe1BloomFilter_jmhTest::testProbe1BloomFilter_avgt_jmhStub@15 (line 232)
  0.02%    0.02%    │       │    0x00007fa20d49327e: mov    $0x8,%edx
                    │       │    0x00007fa20d493283: xor    %ecx,%ecx
           0.02%    │       │    0x00007fa20d493285: xchg   %ax,%ax
  0.61%    1.45%    │       │    0x00007fa20d493287: callq  0x00007fa20d046160  ; OopMap{[80]=Oop [88]=Oop [96]=NarrowOop [8]=Oop [24]=Oop off=1196}
                    │       │                                                  ;*invokestatic hash64
                    │       │                                                  ; - com.github.prasanthj.bloomfilter.Murmur3::hash64@4 (line 118)
                    │       │                                                  ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@1 (line 145)
                    │       │                                                  ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                    │       │                                                  ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe1BloomFilter@12 (line 62)
                    │       │                                                  ; - com.github.prasanthj.bloomfilter.benchmarks.generated.BenchmarkBloomFilterProbe_testProbe1BloomFilter_jmhTest::testProbe1BloomFilter_avgt_jmhStub@15 (line 232)
                    │       │                                                  ;   {static_call}
                    │       │    0x00007fa20d49328c: mov    0x60(%rsp),%ebp
  0.11%    0.09%    │       │    0x00007fa20d493290: mov    0x20(%r12,%rbp,8),%r13d  ;*getfield k
                    │       │                                                  ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@22 (line 149)
                    │       │                                                  ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                    │       │                                                  ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe1BloomFilter@12 (line 62)
                    │       │                                                  ; - com.github.prasanthj.bloomfilter.benchmarks.generated.BenchmarkBloomFilterProbe_testProbe1BloomFilter_jmhTest::testProbe1BloomFilter_avgt_jmhStub@15 (line 232)
  0.54%    0.94%    │       │    0x00007fa20d493295: cmp    $0x1,%r13d
                    ╰       │    0x00007fa20d493299: jl     0x00007fa20d49314e  ;*if_icmpgt
                            │                                                  ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@25 (line 149)
                            │                                                  ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                            │                                                  ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe1BloomFilter@12 (line 62)
                            │                                                  ; - com.github.prasanthj.bloomfilter.benchmarks.generated.BenchmarkBloomFilterProbe_testProbe1BloomFilter_jmhTest::testProbe1BloomFilter_avgt_jmhStub@15 (line 232)
                            │    0x00007fa20d49329f: mov    0xc(%r12,%rbp,8),%r10d  ;*getfield m
                            │                                                  ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@52 (line 155)
                            │                                                  ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                            │                                                  ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe1BloomFilter@12 (line 62)
                            │                                                  ; - com.github.prasanthj.bloomfilter.benchmarks.generated.BenchmarkBloomFilterProbe_testProbe1BloomFilter_jmhTest::testProbe1BloomFilter_avgt_jmhStub@15 (line 232)
  0.02%    0.07%            │    0x00007fa20d4932a4: mov    %eax,%ebx          ;*l2i  ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@6 (line 146)
                            │                                                  ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                            │                                                  ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe1BloomFilter@12 (line 62)
                            │                                                  ; - com.github.prasanthj.bloomfilter.benchmarks.generated.BenchmarkBloomFilterProbe_testProbe1BloomFilter_jmhTest::testProbe1BloomFilter_avgt_jmhStub@15 (line 232)
                            │    0x00007fa20d4932a6: shr    $0x20,%rax
  0.66%    1.21%            │    0x00007fa20d4932aa: mov    %eax,%r9d          ;*l2i  ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@13 (line 147)
                            │                                                  ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                            │                                                  ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe1BloomFilter@12 (line 62)
                            │                                                  ; - com.github.prasanthj.bloomfilter.benchmarks.generated.BenchmarkBloomFilterProbe_testProbe1BloomFilter_jmhTest::testProbe1BloomFilter_avgt_jmhStub@15 (line 232)
                            │    0x00007fa20d4932ad: test   %r10d,%r10d
                            │    0x00007fa20d4932b0: je     0x00007fa20d493575  ;*iload
                            │                                                  ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@28 (line 150)
                            │                                                  ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                            │                                                  ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe1BloomFilter@12 (line 62)
                            │                                                  ; - com.github.prasanthj.bloomfilter.benchmarks.generated.BenchmarkBloomFilterProbe_testProbe1BloomFilter_jmhTest::testProbe1BloomFilter_avgt_jmhStub@15 (line 232)
  0.04%    0.13%            │    0x00007fa20d4932b6: mov    0x24(%r12,%rbp,8),%r8d  ;*getfield bitSet
                            │                                                  ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@59 (line 156)
                            │                                                  ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                            │                                                  ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe1BloomFilter@12 (line 62)
                            │                                                  ; - com.github.prasanthj.bloomfilter.benchmarks.generated.BenchmarkBloomFilterProbe_testProbe1BloomFilter_jmhTest::testProbe1BloomFilter_avgt_jmhStub@15 (line 232)
                            │    0x00007fa20d4932bb: mov    0xc(%r12,%r8,8),%r14d  ;*getfield data
                            │                                                  ; - com.github.prasanthj.bloomfilter.BloomFilter$BitSet::get@1 (line 296)
                            │                                                  ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@65 (line 156)
                            │                                                  ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                            │                                                  ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe1BloomFilter@12 (line 62)
                            │                                                  ; - com.github.prasanthj.bloomfilter.benchmarks.generated.BenchmarkBloomFilterProbe_testProbe1BloomFilter_jmhTest::testProbe1BloomFilter_avgt_jmhStub@15 (line 232)
                            │                                                  ; implicit exception: dispatches to 0x00007fa20d493575
  0.66%    1.07%            │    0x00007fa20d4932c0: vmovss 0x60(%rsp),%xmm1
                            │    0x00007fa20d4932c6: mov    0xc(%r12,%r14,8),%r8d  ;*laload
                            │                                                  ; - com.github.prasanthj.bloomfilter.BloomFilter$BitSet::get@9 (line 296)
                            │                                                  ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@65 (line 156)
                            │                                                  ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                            │                                                  ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe1BloomFilter@12 (line 62)
                            │                                                  ; - com.github.prasanthj.bloomfilter.benchmarks.generated.BenchmarkBloomFilterProbe_testProbe1BloomFilter_jmhTest::testProbe1BloomFilter_avgt_jmhStub@15 (line 232)
                            │                                                  ; implicit exception: dispatches to 0x00007fa20d493575
  0.07%    0.24%            │    0x00007fa20d4932cb: cmp    $0x7ffffffe,%r13d
                            │    0x00007fa20d4932d2: jg     0x00007fa20d49358d  ;*iload
                            │                                                  ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@28 (line 150)
                            │                                                  ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                            │                                                  ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe1BloomFilter@12 (line 62)
                            │                                                  ; - com.github.prasanthj.bloomfilter.benchmarks.generated.BenchmarkBloomFilterProbe_testProbe1BloomFilter_jmhTest::testProbe1BloomFilter_avgt_jmhStub@15 (line 232)
                            │    0x00007fa20d4932d8: mov    %ebx,%eax
  0.66%    1.58%            │    0x00007fa20d4932da: add    %r9d,%eax          ;*iadd
                            │                                                  ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@35 (line 150)
                            │                                                  ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                            │                                                  ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe1BloomFilter@12 (line 62)
                            │                                                  ; - com.github.prasanthj.bloomfilter.benchmarks.generated.BenchmarkBloomFilterProbe_testProbe1BloomFilter_jmhTest::testProbe1BloomFilter_avgt_jmhStub@15 (line 232)
                            │    0x00007fa20d4932dd: mov    %eax,%r11d
  0.06%    0.11%            │    0x00007fa20d4932e0: not    %r11d
                            │    0x00007fa20d4932e3: test   %eax,%eax
  0.66%    1.03%            │    0x00007fa20d4932e5: cmovl  %r11d,%eax
  0.42%    0.55%            │    0x00007fa20d4932e9: cmp    $0x80000000,%eax
                     ╭      │    0x00007fa20d4932ee: jne    0x00007fa20d4932f8
                     │      │    0x00007fa20d4932f0: xor    %edx,%edx
                     │      │    0x00007fa20d4932f2: cmp    $0xffffffffffffffff,%r10d
                     │╭     │    0x00007fa20d4932f6: je     0x00007fa20d4932fc
  0.54%    1.23%     ↘│     │    0x00007fa20d4932f8: cltd   
  0.02%    0.02%      │     │    0x00007fa20d4932f9: idiv   %r10d              ;*irem
                      │     │                                                  ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@55 (line 155)
                      │     │                                                  ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                      │     │                                                  ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe1BloomFilter@12 (line 62)
                      │     │                                                  ; - com.github.prasanthj.bloomfilter.benchmarks.generated.BenchmarkBloomFilterProbe_testProbe1BloomFilter_jmhTest::testProbe1BloomFilter_avgt_jmhStub@15 (line 232)
 15.50%   14.12%      ↘     │    0x00007fa20d4932fc: mov    %edx,%r11d
                            │    0x00007fa20d4932ff: movslq %edx,%rcx          ;*i2l  ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@64 (line 156)
                            │                                                  ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                            │                                                  ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe1BloomFilter@12 (line 62)
                            │                                                  ; - com.github.prasanthj.bloomfilter.benchmarks.generated.BenchmarkBloomFilterProbe_testProbe1BloomFilter_jmhTest::testProbe1BloomFilter_avgt_jmhStub@15 (line 232)
  0.85%                     │    0x00007fa20d493302: mov    %rcx,%rdi
                            │    0x00007fa20d493305: shr    $0x6,%rdi
  0.61%    0.04%            │    0x00007fa20d493309: mov    %edi,%edx          ;*l2i  ; - com.github.prasanthj.bloomfilter.BloomFilter$BitSet::get@8 (line 296)
                            │                                                  ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@65 (line 156)
                            │                                                  ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                            │                                                  ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe1BloomFilter@12 (line 62)
                            │                                                  ; - com.github.prasanthj.bloomfilter.benchmarks.generated.BenchmarkBloomFilterProbe_testProbe1BloomFilter_jmhTest::testProbe1BloomFilter_avgt_jmhStub@15 (line 232)
                            │    0x00007fa20d49330b: cmp    %r8d,%edx
                            │    0x00007fa20d49330e: jae    0x00007fa20d4935e1  ;*laload
                            │                                                  ; - com.github.prasanthj.bloomfilter.BloomFilter$BitSet::get@9 (line 296)
                            │                                                  ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@65 (line 156)
                            │                                                  ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                            │                                                  ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe1BloomFilter@12 (line 62)
                            │                                                  ; - com.github.prasanthj.bloomfilter.benchmarks.generated.BenchmarkBloomFilterProbe_testProbe1BloomFilter_jmhTest::testProbe1BloomFilter_avgt_jmhStub@15 (line 232)
  0.92%                     │    0x00007fa20d493314: mov    $0x1,%eax
                            │    0x00007fa20d493319: mov    %r11d,%ecx
  0.02%    0.02%            │    0x00007fa20d49331c: shl    %cl,%rax
  0.72%                     │    0x00007fa20d49331f: lea    (%r12,%r14,8),%rbp
                            │    0x00007fa20d493323: and    0x10(%rbp,%rdx,8),%rax  ;*land
                            │                                                  ; - com.github.prasanthj.bloomfilter.BloomFilter$BitSet::get@14 (line 296)
                            │                                                  ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@65 (line 156)
                            │                                                  ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                            │                                                  ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe1BloomFilter@12 (line 62)
                            │                                                  ; - com.github.prasanthj.bloomfilter.benchmarks.generated.BenchmarkBloomFilterProbe_testProbe1BloomFilter_jmhTest::testProbe1BloomFilter_avgt_jmhStub@15 (line 232)
  2.57%    0.06%            │    0x00007fa20d493328: test   %rax,%rax
                            │    0x00007fa20d49332b: je     0x00007fa20d493628  ;*ifeq
                            │                                                  ; - com.github.prasanthj.bloomfilter.BloomFilter$BitSet::get@17 (line 296)
                            │                                                  ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@65 (line 156)
                            │                                                  ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                            │                                                  ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe1BloomFilter@12 (line 62)
                            │                                                  ; - com.github.prasanthj.bloomfilter.benchmarks.generated.BenchmarkBloomFilterProbe_testProbe1BloomFilter_jmhTest::testProbe1BloomFilter_avgt_jmhStub@15 (line 232)
  0.76%                     │    0x00007fa20d493331: mov    %r13d,%r11d
                            │    0x00007fa20d493334: inc    %r11d
  0.02%    0.02%            │    0x00007fa20d493337: cmp    %r13d,%r11d
           0.02%            │    0x00007fa20d49333a: mov    $0x80000000,%ecx
  0.78%                     │    0x00007fa20d49333f: cmovl  %ecx,%r13d
  0.02%    0.04%            │    0x00007fa20d493343: mov    %r9d,%eax
                            │    0x00007fa20d493346: shl    %eax
  0.54%                     │    0x00007fa20d493348: cmp    $0x2,%r13d
                            │    0x00007fa20d49334c: jle    0x00007fa20d4935eb
                            │    0x00007fa20d493352: mov    $0x2,%edi
  0.04%    0.04%            │    0x00007fa20d493357: nopw   0x0(%rax,%rax,1)   ;*imul
                            │                                                  ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@34 (line 150)
                            │                                                  ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                            │                                                  ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe1BloomFilter@12 (line 62)
                            │                                                  ; - com.github.prasanthj.bloomfilter.benchmarks.generated.BenchmarkBloomFilterProbe_testProbe1BloomFilter_jmhTest::testProbe1BloomFilter_avgt_jmhStub@15 (line 232)
                           ↗│    0x00007fa20d493360: add    %ebx,%eax          ;*iadd
                           ││                                                  ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@35 (line 150)
                           ││                                                  ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                           ││                                                  ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe1BloomFilter@12 (line 62)
                           ││                                                  ; - com.github.prasanthj.bloomfilter.benchmarks.generated.BenchmarkBloomFilterProbe_testProbe1BloomFilter_jmhTest::testProbe1BloomFilter_avgt_jmhStub@15 (line 232)
  0.72%    0.02%           ││    0x00007fa20d493362: mov    %eax,%ecx
                           ││    0x00007fa20d493364: not    %ecx
  0.02%    0.06%           ││    0x00007fa20d493366: test   %eax,%eax
  0.02%                    ││    0x00007fa20d493368: cmovl  %ecx,%eax
  0.87%    0.02%           ││    0x00007fa20d49336b: cmp    $0x80000000,%eax
                       ╭   ││    0x00007fa20d493370: jne    0x00007fa20d49337a
                       │   ││    0x00007fa20d493372: xor    %edx,%edx
                       │   ││    0x00007fa20d493374: cmp    $0xffffffffffffffff,%r10d
                       │╭  ││    0x00007fa20d493378: je     0x00007fa20d49337e
  0.02%                ↘│  ││    0x00007fa20d49337a: cltd   
                        │  ││    0x00007fa20d49337b: idiv   %r10d              ;*irem
                        │  ││                                                  ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@55 (line 155)
                        │  ││                                                  ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                        │  ││                                                  ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe1BloomFilter@12 (line 62)
                        │  ││                                                  ; - com.github.prasanthj.bloomfilter.benchmarks.generated.BenchmarkBloomFilterProbe_testProbe1BloomFilter_jmhTest::testProbe1BloomFilter_avgt_jmhStub@15 (line 232)
  2.36%    0.88%        ↘  ││    0x00007fa20d49337e: mov    %edx,%esi
           0.06%           ││    0x00007fa20d493380: movslq %edx,%rcx          ;*i2l  ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@64 (line 156)
                           ││                                                  ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                           ││                                                  ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe1BloomFilter@12 (line 62)
                           ││                                                  ; - com.github.prasanthj.bloomfilter.benchmarks.generated.BenchmarkBloomFilterProbe_testProbe1BloomFilter_jmhTest::testProbe1BloomFilter_avgt_jmhStub@15 (line 232)
  0.02%                    ││    0x00007fa20d493383: mov    %rcx,%rdx
  0.63%    0.85%           ││    0x00007fa20d493386: shr    $0x6,%rdx
                           ││    0x00007fa20d49338a: mov    %edx,%edx          ;*l2i  ; - com.github.prasanthj.bloomfilter.BloomFilter$BitSet::get@8 (line 296)
                           ││                                                  ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@65 (line 156)
                           ││                                                  ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                           ││                                                  ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe1BloomFilter@12 (line 62)
                           ││                                                  ; - com.github.prasanthj.bloomfilter.benchmarks.generated.BenchmarkBloomFilterProbe_testProbe1BloomFilter_jmhTest::testProbe1BloomFilter_avgt_jmhStub@15 (line 232)
  0.06%    0.02%           ││    0x00007fa20d49338c: cmp    %r8d,%edx
                           ││    0x00007fa20d49338f: jae    0x00007fa20d4934bd  ;*laload
                           ││                                                  ; - com.github.prasanthj.bloomfilter.BloomFilter$BitSet::get@9 (line 296)
                           ││                                                  ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@65 (line 156)
                           ││                                                  ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                           ││                                                  ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe1BloomFilter@12 (line 62)
                           ││                                                  ; - com.github.prasanthj.bloomfilter.benchmarks.generated.BenchmarkBloomFilterProbe_testProbe1BloomFilter_jmhTest::testProbe1BloomFilter_avgt_jmhStub@15 (line 232)
  0.04%    0.04%           ││    0x00007fa20d493395: mov    $0x1,%eax
  0.72%    0.68%           ││    0x00007fa20d49339a: mov    %esi,%ecx
                           ││    0x00007fa20d49339c: shl    %cl,%rax
  0.02%                    ││    0x00007fa20d49339f: and    0x10(%rbp,%rdx,8),%rax  ;*land
                           ││                                                  ; - com.github.prasanthj.bloomfilter.BloomFilter$BitSet::get@14 (line 296)
                           ││                                                  ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@65 (line 156)
                           ││                                                  ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                           ││                                                  ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe1BloomFilter@12 (line 62)
                           ││                                                  ; - com.github.prasanthj.bloomfilter.benchmarks.generated.BenchmarkBloomFilterProbe_testProbe1BloomFilter_jmhTest::testProbe1BloomFilter_avgt_jmhStub@15 (line 232)
  0.79%    1.10%           ││    0x00007fa20d4933a4: test   %rax,%rax
                           ││    0x00007fa20d4933a7: je     0x00007fa20d493525  ;*ifeq
                           ││                                                  ; - com.github.prasanthj.bloomfilter.BloomFilter$BitSet::get@17 (line 296)
                           ││                                                  ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@65 (line 156)
                           ││                                                  ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                           ││                                                  ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe1BloomFilter@12 (line 62)
                           ││                                                  ; - com.github.prasanthj.bloomfilter.benchmarks.generated.BenchmarkBloomFilterProbe_testProbe1BloomFilter_jmhTest::testProbe1BloomFilter_avgt_jmhStub@15 (line 232)
  0.09%    0.11%           ││    0x00007fa20d4933ad: mov    %edi,%esi
                           ││    0x00007fa20d4933af: inc    %esi               ;*iinc
                           ││                                                  ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@73 (line 149)
                           ││                                                  ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                           ││                                                  ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe1BloomFilter@12 (line 62)
                           ││                                                  ; - com.github.prasanthj.bloomfilter.benchmarks.generated.BenchmarkBloomFilterProbe_testProbe1BloomFilter_jmhTest::testProbe1BloomFilter_avgt_jmhStub@15 (line 232)
  0.72%    0.70%           ││    0x00007fa20d4933b1: mov    %esi,%eax
                           ││    0x00007fa20d4933b3: imul   %r9d,%eax
  0.02%    0.04%           ││    0x00007fa20d4933b7: add    %ebx,%eax          ;*iadd
                           ││                                                  ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@35 (line 150)
                           ││                                                  ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                           ││                                                  ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe1BloomFilter@12 (line 62)
                           ││                                                  ; - com.github.prasanthj.bloomfilter.benchmarks.generated.BenchmarkBloomFilterProbe_testProbe1BloomFilter_jmhTest::testProbe1BloomFilter_avgt_jmhStub@15 (line 232)
                           ││    0x00007fa20d4933b9: mov    %eax,%edx
  0.59%                    ││    0x00007fa20d4933bb: not    %edx
                           ││    0x00007fa20d4933bd: test   %eax,%eax
  0.06%    0.02%           ││    0x00007fa20d4933bf: cmovl  %edx,%eax
  0.70%                    ││    0x00007fa20d4933c2: cmp    $0x80000000,%eax
                         ╭ ││    0x00007fa20d4933c7: jne    0x00007fa20d4933d1
                         │ ││    0x00007fa20d4933c9: xor    %edx,%edx
                         │ ││    0x00007fa20d4933cb: cmp    $0xffffffffffffffff,%r10d
                         │╭││    0x00007fa20d4933cf: je     0x00007fa20d4933d5
                         ↘│││    0x00007fa20d4933d1: cltd   
  0.17%    0.02%          │││    0x00007fa20d4933d2: idiv   %r10d              ;*irem
                          │││                                                  ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@55 (line 155)
                          │││                                                  ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                          │││                                                  ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe1BloomFilter@12 (line 62)
                          │││                                                  ; - com.github.prasanthj.bloomfilter.benchmarks.generated.BenchmarkBloomFilterProbe_testProbe1BloomFilter_jmhTest::testProbe1BloomFilter_avgt_jmhStub@15 (line 232)
  1.83%    1.34%          ↘││    0x00007fa20d4933d5: mov    %edx,0x60(%rsp)
  0.09%    0.24%           ││    0x00007fa20d4933d9: movslq %edx,%rcx          ;*i2l  ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@64 (line 156)
                           ││                                                  ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                           ││                                                  ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe1BloomFilter@12 (line 62)
                           ││                                                  ; - com.github.prasanthj.bloomfilter.benchmarks.generated.BenchmarkBloomFilterProbe_testProbe1BloomFilter_jmhTest::testProbe1BloomFilter_avgt_jmhStub@15 (line 232)
  0.06%    0.06%           ││    0x00007fa20d4933dc: mov    %rcx,%rdx
  0.04%                    ││    0x00007fa20d4933df: shr    $0x6,%rdx
  0.48%    0.70%           ││    0x00007fa20d4933e3: mov    %edx,%edx          ;*l2i  ; - com.github.prasanthj.bloomfilter.BloomFilter$BitSet::get@8 (line 296)
                           ││                                                  ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@65 (line 156)
                           ││                                                  ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                           ││                                                  ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe1BloomFilter@12 (line 62)
                           ││                                                  ; - com.github.prasanthj.bloomfilter.benchmarks.generated.BenchmarkBloomFilterProbe_testProbe1BloomFilter_jmhTest::testProbe1BloomFilter_avgt_jmhStub@15 (line 232)
  0.15%    0.13%           ││    0x00007fa20d4933e5: cmp    %r8d,%edx
                           ││    0x00007fa20d4933e8: jae    0x00007fa20d4934bf  ;*laload
                           ││                                                  ; - com.github.prasanthj.bloomfilter.BloomFilter$BitSet::get@9 (line 296)
                           ││                                                  ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@65 (line 156)
                           ││                                                  ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                           ││                                                  ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe1BloomFilter@12 (line 62)
                           ││                                                  ; - com.github.prasanthj.bloomfilter.benchmarks.generated.BenchmarkBloomFilterProbe_testProbe1BloomFilter_jmhTest::testProbe1BloomFilter_avgt_jmhStub@15 (line 232)
  0.11%    0.06%           ││    0x00007fa20d4933ee: mov    $0x1,%eax
  0.02%    0.04%           ││    0x00007fa20d4933f3: mov    0x60(%rsp),%ecx
  0.55%    1.14%           ││    0x00007fa20d4933f7: shl    %cl,%rax
  0.26%    0.28%           ││    0x00007fa20d4933fa: and    0x10(%rbp,%rdx,8),%rax  ;*land
                           ││                                                  ; - com.github.prasanthj.bloomfilter.BloomFilter$BitSet::get@14 (line 296)
                           ││                                                  ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@65 (line 156)
                           ││                                                  ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                           ││                                                  ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe1BloomFilter@12 (line 62)
                           ││                                                  ; - com.github.prasanthj.bloomfilter.benchmarks.generated.BenchmarkBloomFilterProbe_testProbe1BloomFilter_jmhTest::testProbe1BloomFilter_avgt_jmhStub@15 (line 232)
  0.63%    1.49%           ││    0x00007fa20d4933ff: test   %rax,%rax
                           ││    0x00007fa20d493402: je     0x00007fa20d493527  ;*ifeq
                           ││                                                  ; - com.github.prasanthj.bloomfilter.BloomFilter$BitSet::get@17 (line 296)
                           ││                                                  ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@65 (line 156)
                           ││                                                  ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                           ││                                                  ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe1BloomFilter@12 (line 62)
                           ││                                                  ; - com.github.prasanthj.bloomfilter.benchmarks.generated.BenchmarkBloomFilterProbe_testProbe1BloomFilter_jmhTest::testProbe1BloomFilter_avgt_jmhStub@15 (line 232)
  0.66%    0.59%           ││    0x00007fa20d493408: add    $0x2,%edi          ;*iinc
                           ││                                                  ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@73 (line 149)
                           ││                                                  ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                           ││                                                  ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe1BloomFilter@12 (line 62)
                           ││                                                  ; - com.github.prasanthj.bloomfilter.benchmarks.generated.BenchmarkBloomFilterProbe_testProbe1BloomFilter_jmhTest::testProbe1BloomFilter_avgt_jmhStub@15 (line 232)
           0.04%           ││    0x00007fa20d49340b: mov    %edi,%eax
                           ││    0x00007fa20d49340d: imul   %r9d,%eax          ;*imul
                           ││                                                  ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@34 (line 150)
                           ││                                                  ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                           ││                                                  ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe1BloomFilter@12 (line 62)
                           ││                                                  ; - com.github.prasanthj.bloomfilter.benchmarks.generated.BenchmarkBloomFilterProbe_testProbe1BloomFilter_jmhTest::testProbe1BloomFilter_avgt_jmhStub@15 (line 232)
  0.24%    0.31%           ││    0x00007fa20d493411: cmp    %r13d,%edi
                           ╰│    0x00007fa20d493414: jl     0x00007fa20d493360  ;*if_icmpgt
                            │                                                  ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@25 (line 149)
                            │                                                  ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                            │                                                  ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe1BloomFilter@12 (line 62)
                            │                                                  ; - com.github.prasanthj.bloomfilter.benchmarks.generated.BenchmarkBloomFilterProbe_testProbe1BloomFilter_jmhTest::testProbe1BloomFilter_avgt_jmhStub@15 (line 232)
  0.57%    0.09%            │    0x00007fa20d49341a: cmp    %r11d,%edi
                            ╰    0x00007fa20d49341d: jge    0x00007fa20d49314e
                                 0x00007fa20d493423: nop                       ;*iload
                                                                               ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@28 (line 150)
                                                                               ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                                                                               ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe1BloomFilter@12 (line 62)
                                                                               ; - com.github.prasanthj.bloomfilter.benchmarks.generated.BenchmarkBloomFilterProbe_testProbe1BloomFilter_jmhTest::testProbe1BloomFilter_avgt_jmhStub@15 (line 232)
                                 0x00007fa20d493424: add    %ebx,%eax          ;*iadd
                                                                               ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@35 (line 150)
                                                                               ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                                                                               ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe1BloomFilter@12 (line 62)
                                                                               ; - com.github.prasanthj.bloomfilter.benchmarks.generated.BenchmarkBloomFilterProbe_testProbe1BloomFilter_jmhTest::testProbe1BloomFilter_avgt_jmhStub@15 (line 232)
  0.24%                          0x00007fa20d493426: mov    %eax,%ecx
  0.48%    0.13%                 0x00007fa20d493428: not    %ecx
                                 0x00007fa20d49342a: test   %eax,%eax
                                 0x00007fa20d49342c: cmovl  %ecx,%eax
  0.74%    0.66%                 0x00007fa20d49342f: cmp    $0x80000000,%eax
                             ╭   0x00007fa20d493434: jne    0x00007fa20d49343e
                             │   0x00007fa20d493436: xor    %edx,%edx
                             │   0x00007fa20d493438: cmp    $0xffffffffffffffff,%r10d
                             │╭  0x00007fa20d49343c: je     0x00007fa20d493442
                             ↘│  0x00007fa20d49343e: cltd   
                              │  0x00007fa20d49343f: idiv   %r10d              ;*irem
                              │                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@55 (line 155)
                              │                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                              │                                                ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe1BloomFilter@12 (line 62)
                              │                                                ; - com.github.prasanthj.bloomfilter.benchmarks.generated.BenchmarkBloomFilterProbe_testProbe1BloomFilter_jmhTest::testProbe1BloomFilter_avgt_jmhStub@15 (line 232)
  2.03%    3.69%              ↘  0x00007fa20d493442: mov    %edx,%r13d
  0.06%    0.11%                 0x00007fa20d493445: movslq %edx,%rcx          ;*i2l  ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@64 (line 156)
                                                                               ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                                                                               ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe1BloomFilter@12 (line 62)
                                                                               ; - com.github.prasanthj.bloomfilter.benchmarks.generated.BenchmarkBloomFilterProbe_testProbe1BloomFilter_jmhTest::testProbe1BloomFilter_avgt_jmhStub@15 (line 232)
  0.11%    0.04%                 0x00007fa20d493448: mov    %rcx,%rdx
  0.09%    0.18%                 0x00007fa20d49344b: shr    $0x6,%rdx
  0.44%    0.64%                 0x00007fa20d49344f: mov    %edx,%edx          ;*l2i  ; - com.github.prasanthj.bloomfilter.BloomFilter$BitSet::get@8 (line 296)
                                                                               ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@65 (line 156)
                                                                               ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                                                                               ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe1BloomFilter@12 (line 62)
                                                                               ; - com.github.prasanthj.bloomfilter.benchmarks.generated.BenchmarkBloomFilterProbe_testProbe1BloomFilter_jmhTest::testProbe1BloomFilter_avgt_jmhStub@15 (line 232)
  0.09%    0.35%                 0x00007fa20d493451: cmp    %r8d,%edx
                                 0x00007fa20d493454: jae    0x00007fa20d4934c1  ;*laload
                                                                               ; - com.github.prasanthj.bloomfilter.BloomFilter$BitSet::get@9 (line 296)
                                                                               ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@65 (line 156)
                                                                               ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                                                                               ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe1BloomFilter@12 (line 62)
                                                                               ; - com.github.prasanthj.bloomfilter.benchmarks.generated.BenchmarkBloomFilterProbe_testProbe1BloomFilter_jmhTest::testProbe1BloomFilter_avgt_jmhStub@15 (line 232)
  0.33%    0.37%                 0x00007fa20d493456: mov    $0x1,%eax
  0.13%    0.06%                 0x00007fa20d49345b: mov    %r13d,%ecx
  0.24%    0.46%                 0x00007fa20d49345e: shl    %cl,%rax
  0.30%    0.44%                 0x00007fa20d493461: and    0x10(%rbp,%rdx,8),%rax  ;*land
                                                                               ; - com.github.prasanthj.bloomfilter.BloomFilter$BitSet::get@14 (line 296)
                                                                               ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@65 (line 156)
                                                                               ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                                                                               ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe1BloomFilter@12 (line 62)
                                                                               ; - com.github.prasanthj.bloomfilter.benchmarks.generated.BenchmarkBloomFilterProbe_testProbe1BloomFilter_jmhTest::testProbe1BloomFilter_avgt_jmhStub@15 (line 232)
  2.16%    2.06%                 0x00007fa20d493466: test   %rax,%rax
                                 0x00007fa20d493469: je     0x00007fa20d493529  ;*ifeq
                                                                               ; - com.github.prasanthj.bloomfilter.BloomFilter$BitSet::get@17 (line 296)
                                                                               ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@65 (line 156)
                                                                               ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                                                                               ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe1BloomFilter@12 (line 62)
                                                                               ; - com.github.prasanthj.bloomfilter.benchmarks.generated.BenchmarkBloomFilterProbe_testProbe1BloomFilter_jmhTest::testProbe1BloomFilter_avgt_jmhStub@15 (line 232)
  0.66%    0.81%                 0x00007fa20d49346f: inc    %edi               ;*iinc
                                                                               ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@73 (line 149)
                                                                               ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                                                                               ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe1BloomFilter@12 (line 62)
                                                                               ; - com.github.prasanthj.bloomfilter.benchmarks.generated.BenchmarkBloomFilterProbe_testProbe1BloomFilter_jmhTest::testProbe1BloomFilter_avgt_jmhStub@15 (line 232)
                                 0x00007fa20d493471: cmp    %r11d,%edi
....................................................................................................
 67.42%   56.86%  <total for region 1>

....[Hottest Region 2]..............................................................................
C2, level 4, com.github.prasanthj.bloomfilter.Murmur3::hash64, version 575 (292 bytes) 

                     Decoding compiled method 0x00007fa20d489450:
                     Code:
                     [Entry Point]
                     [Verified Entry Point]
                     [Constants]
                       # {method} {0x00007fa205be6a98} &apos;hash64&apos; &apos;([BII)J&apos; in &apos;com/github/prasanthj/bloomfilter/Murmur3&apos;
                       # parm0:    rsi:rsi   = &apos;[B&apos;
                       # parm1:    rdx       = int
                       # parm2:    rcx       = int
                       #           [sp+0x50]  (sp of caller)
  0.07%    0.02%       0x00007fa20d4895e0: mov    %eax,-0x14000(%rsp)
  0.72%    1.62%       0x00007fa20d4895e7: push   %rbp
                       0x00007fa20d4895e8: sub    $0x40,%rsp         ;*synchronization entry
                                                                     ; - com.github.prasanthj.bloomfilter.Murmur3::hash64@-1 (line 130)
  0.02%    0.02%       0x00007fa20d4895ec: mov    %edx,0x10(%rsp)
  0.65%    1.05%       0x00007fa20d4895f0: mov    %edx,%r10d
  0.04%                0x00007fa20d4895f3: sar    $0x3,%r10d         ;*ishr
                                                                     ; - com.github.prasanthj.bloomfilter.Murmur3::hash64@5 (line 131)
  0.02%                0x00007fa20d4895f7: movslq %ecx,%r11          ;*i2l  ; - com.github.prasanthj.bloomfilter.Murmur3::hash64@1 (line 130)
  0.06%    0.04%       0x00007fa20d4895fa: mov    $0x87c37b91114253d5,%rbx
  0.76%    1.38%       0x00007fa20d489604: test   %r10d,%r10d
                  ╭    0x00007fa20d489607: jle    0x00007fa20d4896f0  ;*if_icmpge
                  │                                                  ; - com.github.prasanthj.bloomfilter.Murmur3::hash64@15 (line 134)
  0.02%           │    0x00007fa20d48960d: mov    %rsi,%r9
  0.02%    0.02%  │    0x00007fa20d489610: mov    0xc(%rsi),%edi     ;*baload
                  │                                                  ; - com.github.prasanthj.bloomfilter.Murmur3::hash64@27 (line 136)
                  │                                                  ; implicit exception: dispatches to 0x00007fa20d489a79
  0.02%    0.04%  │    0x00007fa20d489613: xor    %r8d,%r8d
  0.72%    1.69%  │    0x00007fa20d489616: xor    %ecx,%ecx
           0.02%  │╭   0x00007fa20d489618: jmp    0x00007fa20d489630
                  ││   0x00007fa20d48961a: nopw   0x0(%rax,%rax,1)
                  ││↗  0x00007fa20d489620: shl    $0x3,%ecx
                  │││  0x00007fa20d489623: mov    %ecx,%r8d
                  │││  0x00007fa20d489626: add    $0x8,%r8d          ;*ishl
                  │││                                                ; - com.github.prasanthj.bloomfilter.Murmur3::hash64@21 (line 135)
                  │││  0x00007fa20d48962a: mov    %r9d,%ecx
                  │││  0x00007fa20d48962d: mov    %rsi,%r9           ;*iload
                  │││                                                ; - com.github.prasanthj.bloomfilter.Murmur3::hash64@18 (line 135)
  0.02%    0.02%  │↘│  0x00007fa20d489630: cmp    %edi,%r8d
                  │ │  0x00007fa20d489633: jae    0x00007fa20d4898ba  ;*baload
                  │ │                                                ; - com.github.prasanthj.bloomfilter.Murmur3::hash64@27 (line 136)
  0.02%    0.02%  │ │  0x00007fa20d489639: movzbq 0x10(%r9,%r8,1),%rdx  ;*land
                  │ │                                                ; - com.github.prasanthj.bloomfilter.Murmur3::hash64@32 (line 136)
  0.52%    1.27%  │ │  0x00007fa20d48963f: mov    %r8d,%esi
  0.04%           │ │  0x00007fa20d489642: add    $0x7,%esi
                  │ │  0x00007fa20d489645: cmp    %edi,%esi
                  │ │  0x00007fa20d489647: jae    0x00007fa20d4898f1  ;*baload
                  │ │                                                ; - com.github.prasanthj.bloomfilter.Murmur3::hash64@38 (line 136)
                  │ │  0x00007fa20d48964d: mov    %rdx,(%rsp)
  0.70%    1.25%  │ │  0x00007fa20d489651: movslq %r8d,%r8           ;*baload
                  │ │                                                ; - com.github.prasanthj.bloomfilter.Murmur3::hash64@130 (line 136)
  0.06%    0.02%  │ │  0x00007fa20d489654: movzbq 0x11(%r9,%r8,1),%rdx
           0.02%  │ │  0x00007fa20d48965a: movzbq 0x17(%r9,%r8,1),%rax
  0.02%    0.04%  │ │  0x00007fa20d489660: movzbq 0x12(%r9,%r8,1),%rbp
  0.46%    1.01%  │ │  0x00007fa20d489666: movzbq 0x13(%r9,%r8,1),%r13
  0.02%    0.06%  │ │  0x00007fa20d48966c: movzbq 0x14(%r9,%r8,1),%r14
                  │ │  0x00007fa20d489672: mov    %r9,%rsi
  0.02%    0.02%  │ │  0x00007fa20d489675: movzbq 0x15(%r9,%r8,1),%r9
  0.52%    1.25%  │ │  0x00007fa20d48967b: movzbq 0x16(%rsi,%r8,1),%r8
  0.02%    0.07%  │ │  0x00007fa20d489681: shl    $0x8,%rdx
                  │ │  0x00007fa20d489685: or     (%rsp),%rdx
  0.06%    0.02%  │ │  0x00007fa20d489689: shl    $0x30,%r8
  0.52%    0.94%  │ │  0x00007fa20d48968d: shl    $0x28,%r9
  0.04%    0.07%  │ │  0x00007fa20d489691: shl    $0x20,%r14
  0.02%    0.02%  │ │  0x00007fa20d489695: shl    $0x18,%r13
  0.04%    0.04%  │ │  0x00007fa20d489699: shl    $0x10,%rbp
  0.83%    0.90%  │ │  0x00007fa20d48969d: or     %rbp,%rdx
  0.04%    0.07%  │ │  0x00007fa20d4896a0: or     %r13,%rdx
                  │ │  0x00007fa20d4896a3: or     %r14,%rdx
  0.02%    0.04%  │ │  0x00007fa20d4896a6: or     %r9,%rdx
  0.74%    1.10%  │ │  0x00007fa20d4896a9: or     %r8,%rdx
  0.07%    0.04%  │ │  0x00007fa20d4896ac: shl    $0x38,%rax
                  │ │  0x00007fa20d4896b0: or     %rax,%rdx
           0.11%  │ │  0x00007fa20d4896b3: imul   %rbx,%rdx          ;*lmul
                  │ │                                                ; - com.github.prasanthj.bloomfilter.Murmur3::hash64@147 (line 146)
  0.87%    1.14%  │ │  0x00007fa20d4896b7: rol    $0x1f,%rdx
  0.02%    0.06%  │ │  0x00007fa20d4896bb: mov    $0x4cf5ad432745937f,%r8
                  │ │  0x00007fa20d4896c5: imul   %r8,%rdx
  0.06%    0.11%  │ │  0x00007fa20d4896c9: xor    %r11,%rdx          ;*lxor
                  │ │                                                ; - com.github.prasanthj.bloomfilter.Murmur3::hash64@170 (line 149)
  0.57%    0.92%  │ │  0x00007fa20d4896cc: rol    $0x1b,%rdx         ;*lor  ; - java.lang.Long::rotateLeft@7 (line 1500)
                  │ │                                                ; - com.github.prasanthj.bloomfilter.Murmur3::hash64@175 (line 150)
  0.02%    0.02%  │ │  0x00007fa20d4896d0: mov    %rdx,%r11
                  │ │  0x00007fa20d4896d3: shl    $0x2,%r11
  0.06%    0.17%  │ │  0x00007fa20d4896d7: add    %rdx,%r11
  0.59%    1.03%  │ │  0x00007fa20d4896da: add    $0x52dce729,%r11   ;*ladd
                  │ │                                                ; - com.github.prasanthj.bloomfilter.Murmur3::hash64@185 (line 150)
  0.17%    0.13%  │ │  0x00007fa20d4896e1: mov    %ecx,%r9d
                  │ │  0x00007fa20d4896e4: inc    %r9d               ;*iinc
                  │ │                                                ; - com.github.prasanthj.bloomfilter.Murmur3::hash64@187 (line 134)
  0.02%    0.02%  │ │  0x00007fa20d4896e7: cmp    %r10d,%r9d
                  │ ╰  0x00007fa20d4896ea: jl     0x00007fa20d489620  ;*if_icmpge
                  │                                                  ; - com.github.prasanthj.bloomfilter.Murmur3::hash64@15 (line 134)
  0.55%    0.88%  ↘    0x00007fa20d4896f0: mov    0x10(%rsp),%r10d
  0.20%    0.20%       0x00007fa20d4896f5: and    $0xfffffffffffffff8,%r10d
                                                                     ;*ishl
                                                                     ; - com.github.prasanthj.bloomfilter.Murmur3::hash64@199 (line 155)
                       0x00007fa20d4896f9: mov    0x10(%rsp),%r8d
           0.02%       0x00007fa20d4896fe: sub    %r10d,%r8d         ;*isub
                                                                     ; - com.github.prasanthj.bloomfilter.Murmur3::hash64@205 (line 156)
  0.44%    0.48%       0x00007fa20d489701: movslq %r10d,%rdi         ;*baload
                                                                     ; - com.github.prasanthj.bloomfilter.Murmur3::hash64@351 (line 168)
  0.18%    0.17%       0x00007fa20d489704: cmp    $0x4,%r8d
                       0x00007fa20d489708: je     0x00007fa20d48976b
                       0x00007fa20d48970a: cmp    $0x4,%r8d
                       0x00007fa20d48970e: jle    0x00007fa20d489735
                       0x00007fa20d489710: cmp    $0x7,%r8d
                       0x00007fa20d489714: je     0x00007fa20d489772
                       0x00007fa20d489716: cmp    $0x7,%r8d
                       0x00007fa20d48971a: jg     0x00007fa20d48986c
                       0x00007fa20d489720: cmp    $0x6,%r8d
                       0x00007fa20d489724: jne    0x00007fa20d48972e
....................................................................................................
 11.61%   19.60%  <total for region 2>

....[Hottest Regions]...............................................................................
 67.42%   56.86%         C2, level 4  com.github.prasanthj.bloomfilter.benchmarks.generated.BenchmarkBloomFilterProbe_testProbe1BloomFilter_jmhTest::testProbe1BloomFilter_avgt_jmhStub, version 605 (796 bytes) 
 11.61%   19.60%         C2, level 4  com.github.prasanthj.bloomfilter.Murmur3::hash64, version 575 (292 bytes) 
  7.60%   11.38%         C2, level 4  com.github.prasanthj.bloomfilter.Murmur3::hash64, version 575 (77 bytes) 
  3.25%    3.20%   [kernel.kallsyms]  native_write_msr_safe (0 bytes) 
  0.89%    1.10%         C2, level 4  com.github.prasanthj.bloomfilter.Murmur3::hash64, version 575 (17 bytes) 
  0.61%            [kernel.kallsyms]  page_fault (0 bytes) 
  0.48%    0.02%   [kernel.kallsyms]  do_numa_page (0 bytes) 
  0.20%    0.07%   [kernel.kallsyms]  mutex_unlock (0 bytes) 
  0.17%    0.26%           libjvm.so  JVM_CurrentThread (85 bytes) 
  0.15%    0.02%   [kernel.kallsyms]  __list_del_entry (5 bytes) 
  0.15%    0.07%   [kernel.kallsyms]  _raw_spin_lock (53 bytes) 
  0.13%    0.09%   [kernel.kallsyms]  do_sync_write (13 bytes) 
  0.13%    0.09%   [kernel.kallsyms]  mutex_lock (14 bytes) 
  0.11%    0.06%   [kernel.kallsyms]  change_protection_range (0 bytes) 
  0.11%    0.04%           libjvm.so  JVM_CurrentThread (54 bytes) 
  0.09%    0.24%   [kernel.kallsyms]  __srcu_read_lock (95 bytes) 
  0.09%            [kernel.kallsyms]  __wake_up_common (11 bytes) 
  0.09%    0.06%   [kernel.kallsyms]  __audit_syscall_entry (86 bytes) 
  0.09%    0.02%   [kernel.kallsyms]  system_call (29 bytes) 
  0.09%    0.15%           libjvm.so  [unknown] (151 bytes) 
  6.48%    6.65%  <...other 426 warm regions...>
....................................................................................................
 99.94%   99.96%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 67.42%   56.86%         C2, level 4  com.github.prasanthj.bloomfilter.benchmarks.generated.BenchmarkBloomFilterProbe_testProbe1BloomFilter_jmhTest::testProbe1BloomFilter_avgt_jmhStub, version 605 
 20.10%   32.08%         C2, level 4  com.github.prasanthj.bloomfilter.Murmur3::hash64, version 575 
  3.25%    3.20%   [kernel.kallsyms]  native_write_msr_safe 
  1.73%    2.13%           libjvm.so  JVM_CurrentThread 
  0.61%            [kernel.kallsyms]  page_fault 
  0.54%    0.59%           libjvm.so  [unknown] 
  0.50%    0.02%   [kernel.kallsyms]  do_numa_page 
  0.22%    0.29%        libc-2.17.so  vfprintf 
  0.20%    0.07%   [kernel.kallsyms]  mutex_unlock 
  0.17%    0.09%      hsdis-amd64.so  print_insn 
  0.17%    0.06%        libc-2.17.so  _IO_fwrite 
  0.17%    0.09%   [kernel.kallsyms]  do_sync_write 
  0.15%    0.07%   [kernel.kallsyms]  _raw_spin_lock 
  0.15%    0.02%   [kernel.kallsyms]  __list_del_entry 
  0.13%    0.09%   [kernel.kallsyms]  mutex_lock 
  0.13%    0.07%   [kernel.kallsyms]  change_protection_range 
  0.11%    0.07%   [kernel.kallsyms]  __audit_syscall_entry 
  0.11%            [kernel.kallsyms]  __wake_up_common 
  0.11%    0.02%   [kernel.kallsyms]  vfs_write 
  0.11%    0.02%   [kernel.kallsyms]  pipe_write 
  3.88%    2.79%  <...other 127 warm methods...>
....................................................................................................
 99.94%   98.64%  <totals>

....[Distribution by Source]........................................................................
 87.52%   88.93%         C2, level 4
  8.42%    6.93%   [kernel.kallsyms]
  2.29%    2.72%           libjvm.so
  1.00%    0.86%        libc-2.17.so
  0.30%    0.17%      hsdis-amd64.so
  0.11%    0.11%              [ext4]
  0.11%    0.06%              [jbd2]
  0.09%                  interpreter
  0.06%    0.18%  libpthread-2.17.so
  0.02%                             
  0.02%             Unknown, level 0
  0.02%                  C1, level 3
....................................................................................................
 99.94%   99.96%  <totals>



# JMH version: 1.19
# VM version: JDK 1.8.0_131, VM 25.131-b12
# VM invoker: /usr/lib/jvm/java-1.8.0-openjdk-1.8.0.131-3.b12.el7_3.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe.testProbe1BloomFilter
# Parameters: (size = 10000000)

# Run progress: 16.67% complete, ETA 00:01:40
# Fork: 1 of 1
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 215.448 ns/op
# Warmup Iteration   2: 144.253 ns/op
# Warmup Iteration   3: 120.360 ns/op
# Warmup Iteration   4: 143.774 ns/op
# Warmup Iteration   5: 117.584 ns/op
Iteration   1: 116.884 ns/op
Iteration   2: 116.941 ns/op
Iteration   3: 117.172 ns/op
Iteration   4: 117.394 ns/op
Iteration   5: 122.843 ns/op
# Processing profiler results: LinuxPerfAsmProfiler 


Result "com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe.testProbe1BloomFilter":
  118.247 ±(99.9%) 9.924 ns/op [Average]
  (min, avg, max) = (116.884, 118.247, 122.843), stdev = 2.577
  CI (99.9%): [108.322, 128.171] (assumes normal distribution)

Secondary result "com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe.testProbe1BloomFilter:·asm":
PrintAssembly processed: 189867 total address lines.
Perf output processed (skipped 12.884 seconds):
 Column 1: cycles (5871 events)
 Column 2: instructions (5858 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
C2, level 4, com.github.prasanthj.bloomfilter.benchmarks.generated.BenchmarkBloomFilterProbe_testProbe1BloomFilter_jmhTest::testProbe1BloomFilter_avgt_jmhStub, version 616 (759 bytes) 

                              0x00007f8c64e5259a: jle    0x00007f8c64e525a7  ;*iflt
                                                                            ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe1BloomFilter@3 (line 61)
                                                                            ; - com.github.prasanthj.bloomfilter.benchmarks.generated.BenchmarkBloomFilterProbe_testProbe1BloomFilter_jmhTest::testProbe1BloomFilter_avgt_jmhStub@15 (line 232)
                              0x00007f8c64e5259c: mov    0x50(%rsp),%r8
                              0x00007f8c64e525a1: mov    (%rsp),%rbx
                  ╭           0x00007f8c64e525a5: jmp    0x00007f8c64e525d1
                  │           0x00007f8c64e525a7: mov    0x50(%rsp),%r8
                  │           0x00007f8c64e525ac: movzbl 0x94(%r8),%r10d    ;*getfield isDone
                  │                                                         ; - com.github.prasanthj.bloomfilter.benchmarks.generated.BenchmarkBloomFilterProbe_testProbe1BloomFilter_jmhTest::testProbe1BloomFilter_avgt_jmhStub@25 (line 234)
                  │           0x00007f8c64e525b4: mov    (%rsp),%rbx
  0.41%    0.44%  │           0x00007f8c64e525b8: add    $0x1,%rbx          ; OopMap{r8=Oop [80]=Oop [88]=Oop [8]=Oop off=924}
                  │                                                         ;*ifeq
                  │                                                         ; - com.github.prasanthj.bloomfilter.benchmarks.generated.BenchmarkBloomFilterProbe_testProbe1BloomFilter_jmhTest::testProbe1BloomFilter_avgt_jmhStub@28 (line 234)
                  │           0x00007f8c64e525bc: test   %eax,0x159dca3e(%rip)        # 0x00007f8c7a82f000
                  │                                                         ;   {poll}
                  │           0x00007f8c64e525c2: test   %r10d,%r10d
                  │           0x00007f8c64e525c5: jne    0x00007f8c64e52a3a  ;*aload
                  │                                                         ; - com.github.prasanthj.bloomfilter.benchmarks.generated.BenchmarkBloomFilterProbe_testProbe1BloomFilter_jmhTest::testProbe1BloomFilter_avgt_jmhStub@13 (line 232)
           0.02%  │           0x00007f8c64e525cb: mov    $0x1,%r10d         ;*aload_0
                  │                                                         ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe1BloomFilter@6 (line 62)
                  │                                                         ; - com.github.prasanthj.bloomfilter.benchmarks.generated.BenchmarkBloomFilterProbe_testProbe1BloomFilter_jmhTest::testProbe1BloomFilter_avgt_jmhStub@15 (line 232)
  0.70%    0.92%  ↘           0x00007f8c64e525d1: mov    0x8(%rsp),%r11
                              0x00007f8c64e525d6: mov    0x10(%r11),%ebp    ;*getfield bf
                                                                            ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe1BloomFilter@7 (line 62)
                                                                            ; - com.github.prasanthj.bloomfilter.benchmarks.generated.BenchmarkBloomFilterProbe_testProbe1BloomFilter_jmhTest::testProbe1BloomFilter_avgt_jmhStub@15 (line 232)
                              0x00007f8c64e525da: movslq %r10d,%rcx         ;*i2l  ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe1BloomFilter@11 (line 62)
                                                                            ; - com.github.prasanthj.bloomfilter.benchmarks.generated.BenchmarkBloomFilterProbe_testProbe1BloomFilter_jmhTest::testProbe1BloomFilter_avgt_jmhStub@15 (line 232)
  0.05%    0.02%              0x00007f8c64e525dd: test   %ebp,%ebp
                              0x00007f8c64e525df: je     0x00007f8c64e529a1  ;*invokevirtual testLong
                                                                            ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe1BloomFilter@12 (line 62)
                                                                            ; - com.github.prasanthj.bloomfilter.benchmarks.generated.BenchmarkBloomFilterProbe_testProbe1BloomFilter_jmhTest::testProbe1BloomFilter_avgt_jmhStub@15 (line 232)
  0.65%    0.90%              0x00007f8c64e525e5: mov    0x60(%r15),%rax
           0.02%              0x00007f8c64e525e9: mov    %rax,%r9
                              0x00007f8c64e525ec: add    $0x18,%r9
                              0x00007f8c64e525f0: lea    (%r12,%rbp,8),%rdi  ;*getfield bf
                                                                            ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe1BloomFilter@7 (line 62)
                                                                            ; - com.github.prasanthj.bloomfilter.benchmarks.generated.BenchmarkBloomFilterProbe_testProbe1BloomFilter_jmhTest::testProbe1BloomFilter_avgt_jmhStub@15 (line 232)
  0.63%    0.90%              0x00007f8c64e525f4: cmp    0x70(%r15),%r9
                              0x00007f8c64e525f8: jae    0x00007f8c64e528c2
                              0x00007f8c64e525fe: mov    %r9,0x60(%r15)
                              0x00007f8c64e52602: prefetchnta 0xc0(%r9)
                              0x00007f8c64e5260a: movq   $0x1,(%rax)
  0.83%    0.58%              0x00007f8c64e52611: prefetchnta 0x100(%r9)
  0.02%                       0x00007f8c64e52619: movl   $0x768,0x8(%rax)   ;   {metadata({type array byte})}
                              0x00007f8c64e52620: prefetchnta 0x140(%r9)
  0.03%    0.03%              0x00007f8c64e52628: movl   $0x8,0xc(%rax)
  0.68%    0.55%              0x00007f8c64e5262f: prefetchnta 0x180(%r9)
                              0x00007f8c64e52637: movl   $0x0,0x10(%rax)
                              0x00007f8c64e5263e: movl   $0x0,0x14(%rax)
  0.02%    0.05%              0x00007f8c64e52645: mov    %r8,0x50(%rsp)
  0.73%    0.48%              0x00007f8c64e5264a: mov    %rbx,(%rsp)
  0.02%    0.02%              0x00007f8c64e5264e: mov    %ebp,0x60(%rsp)
                              0x00007f8c64e52652: mov    %rdi,0x18(%rsp)    ;*newarray
                                                                            ; - com.github.prasanthj.bloomfilter.BloomFilter::longToByteArrayLE@2 (line 195)
                                                                            ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@2 (line 176)
                                                                            ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe1BloomFilter@12 (line 62)
                                                                            ; - com.github.prasanthj.bloomfilter.benchmarks.generated.BenchmarkBloomFilterProbe_testProbe1BloomFilter_jmhTest::testProbe1BloomFilter_avgt_jmhStub@15 (line 232)
  0.03%                       0x00007f8c64e52657: mov    %r10b,0x10(%rax)   ;*bastore
                                                                            ; - com.github.prasanthj.bloomfilter.BloomFilter::longToByteArrayLE@11 (line 195)
                                                                            ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@2 (line 176)
                                                                            ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe1BloomFilter@12 (line 62)
                                                                            ; - com.github.prasanthj.bloomfilter.benchmarks.generated.BenchmarkBloomFilterProbe_testProbe1BloomFilter_jmhTest::testProbe1BloomFilter_avgt_jmhStub@15 (line 232)
  0.70%    0.56%              0x00007f8c64e5265b: mov    %r10d,0x10(%rsp)
           0.05%              0x00007f8c64e52660: mov    %rcx,%r10
                              0x00007f8c64e52663: sar    $0x30,%r10
  0.02%    0.02%              0x00007f8c64e52667: mov    %rcx,%rdi
  0.73%    0.73%              0x00007f8c64e5266a: sar    $0x28,%rcx
                              0x00007f8c64e5266e: mov    %r10d,%r11d
                              0x00007f8c64e52671: mov    %ecx,%r10d
  0.03%    0.03%              0x00007f8c64e52674: mov    %rdi,%r8
  0.85%    0.63%              0x00007f8c64e52677: sar    $0x20,%r8
  0.02%    0.02%              0x00007f8c64e5267b: mov    %rdi,%rcx
                              0x00007f8c64e5267e: sar    $0x18,%rcx
                              0x00007f8c64e52682: mov    %r8d,%r9d
  0.70%    0.27%              0x00007f8c64e52685: mov    %ecx,%r8d
           0.03%              0x00007f8c64e52688: mov    %rdi,%rbx
                              0x00007f8c64e5268b: sar    $0x10,%rbx
  0.03%                       0x00007f8c64e5268f: mov    %rdi,%rcx
  0.75%    0.07%              0x00007f8c64e52692: sar    $0x8,%rcx
  0.09%                       0x00007f8c64e52696: mov    %ebx,%ebx
  0.02%                       0x00007f8c64e52698: mov    %ecx,%ecx
           0.02%              0x00007f8c64e5269a: mov    %cl,0x11(%rax)     ;*bastore
                                                                            ; - com.github.prasanthj.bloomfilter.BloomFilter::longToByteArrayLE@20 (line 195)
                                                                            ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@2 (line 176)
                                                                            ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe1BloomFilter@12 (line 62)
                                                                            ; - com.github.prasanthj.bloomfilter.benchmarks.generated.BenchmarkBloomFilterProbe_testProbe1BloomFilter_jmhTest::testProbe1BloomFilter_avgt_jmhStub@15 (line 232)
  0.97%    0.07%              0x00007f8c64e5269d: mov    %bl,0x12(%rax)     ;*bastore
                                                                            ; - com.github.prasanthj.bloomfilter.BloomFilter::longToByteArrayLE@29 (line 195)
                                                                            ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@2 (line 176)
                                                                            ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe1BloomFilter@12 (line 62)
                                                                            ; - com.github.prasanthj.bloomfilter.benchmarks.generated.BenchmarkBloomFilterProbe_testProbe1BloomFilter_jmhTest::testProbe1BloomFilter_avgt_jmhStub@15 (line 232)
  0.02%                       0x00007f8c64e526a0: mov    %r8b,0x13(%rax)    ;*bastore
                                                                            ; - com.github.prasanthj.bloomfilter.BloomFilter::longToByteArrayLE@38 (line 195)
                                                                            ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@2 (line 176)
                                                                            ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe1BloomFilter@12 (line 62)
                                                                            ; - com.github.prasanthj.bloomfilter.benchmarks.generated.BenchmarkBloomFilterProbe_testProbe1BloomFilter_jmhTest::testProbe1BloomFilter_avgt_jmhStub@15 (line 232)
           0.02%              0x00007f8c64e526a4: mov    %r9b,0x14(%rax)    ;*bastore
                                                                            ; - com.github.prasanthj.bloomfilter.BloomFilter::longToByteArrayLE@47 (line 195)
                                                                            ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@2 (line 176)
                                                                            ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe1BloomFilter@12 (line 62)
                                                                            ; - com.github.prasanthj.bloomfilter.benchmarks.generated.BenchmarkBloomFilterProbe_testProbe1BloomFilter_jmhTest::testProbe1BloomFilter_avgt_jmhStub@15 (line 232)
                              0x00007f8c64e526a8: mov    %r10b,0x15(%rax)   ;*bastore
                                                                            ; - com.github.prasanthj.bloomfilter.BloomFilter::longToByteArrayLE@56 (line 195)
                                                                            ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@2 (line 176)
                                                                            ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe1BloomFilter@12 (line 62)
                                                                            ; - com.github.prasanthj.bloomfilter.benchmarks.generated.BenchmarkBloomFilterProbe_testProbe1BloomFilter_jmhTest::testProbe1BloomFilter_avgt_jmhStub@15 (line 232)
  0.77%    0.17%              0x00007f8c64e526ac: mov    %r11b,0x16(%rax)   ;*bastore
                                                                            ; - com.github.prasanthj.bloomfilter.BloomFilter::longToByteArrayLE@66 (line 195)
                                                                            ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@2 (line 176)
                                                                            ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe1BloomFilter@12 (line 62)
                                                                            ; - com.github.prasanthj.bloomfilter.benchmarks.generated.BenchmarkBloomFilterProbe_testProbe1BloomFilter_jmhTest::testProbe1BloomFilter_avgt_jmhStub@15 (line 232)
                              0x00007f8c64e526b0: sar    $0x38,%rdi
           0.02%              0x00007f8c64e526b4: mov    %edi,%r11d
           0.05%              0x00007f8c64e526b7: mov    %r11b,0x17(%rax)
  0.63%    0.87%              0x00007f8c64e526bb: mov    %rax,%rsi          ;*synchronization entry
                                                                            ; - com.github.prasanthj.bloomfilter.Murmur3::hash64@-1 (line 118)
                                                                            ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@1 (line 145)
                                                                            ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                                                                            ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe1BloomFilter@12 (line 62)
                                                                            ; - com.github.prasanthj.bloomfilter.benchmarks.generated.BenchmarkBloomFilterProbe_testProbe1BloomFilter_jmhTest::testProbe1BloomFilter_avgt_jmhStub@15 (line 232)
                              0x00007f8c64e526be: mov    $0x8,%edx
                              0x00007f8c64e526c3: xor    %ecx,%ecx
                              0x00007f8c64e526c5: xchg   %ax,%ax
  0.73%    1.21%              0x00007f8c64e526c7: callq  0x00007f8c649fe160  ; OopMap{[80]=Oop [88]=Oop [96]=NarrowOop [8]=Oop [24]=Oop off=1196}
                                                                            ;*invokestatic hash64
                                                                            ; - com.github.prasanthj.bloomfilter.Murmur3::hash64@4 (line 118)
                                                                            ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@1 (line 145)
                                                                            ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                                                                            ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe1BloomFilter@12 (line 62)
                                                                            ; - com.github.prasanthj.bloomfilter.benchmarks.generated.BenchmarkBloomFilterProbe_testProbe1BloomFilter_jmhTest::testProbe1BloomFilter_avgt_jmhStub@15 (line 232)
                                                                            ;   {static_call}
                              0x00007f8c64e526cc: mov    0x60(%rsp),%ebp
  0.09%    0.15%              0x00007f8c64e526d0: mov    0x20(%r12,%rbp,8),%r13d  ;*getfield k
                                                                            ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@22 (line 149)
                                                                            ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                                                                            ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe1BloomFilter@12 (line 62)
                                                                            ; - com.github.prasanthj.bloomfilter.benchmarks.generated.BenchmarkBloomFilterProbe_testProbe1BloomFilter_jmhTest::testProbe1BloomFilter_avgt_jmhStub@15 (line 232)
  0.55%    0.84%              0x00007f8c64e526d5: cmp    $0x1,%r13d
                              0x00007f8c64e526d9: jl     0x00007f8c64e5258e  ;*if_icmpgt
                                                                            ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@25 (line 149)
                                                                            ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                                                                            ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe1BloomFilter@12 (line 62)
                                                                            ; - com.github.prasanthj.bloomfilter.benchmarks.generated.BenchmarkBloomFilterProbe_testProbe1BloomFilter_jmhTest::testProbe1BloomFilter_avgt_jmhStub@15 (line 232)
  0.02%                       0x00007f8c64e526df: mov    0xc(%r12,%rbp,8),%r10d  ;*getfield m
                                                                            ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@52 (line 155)
                                                                            ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                                                                            ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe1BloomFilter@12 (line 62)
                                                                            ; - com.github.prasanthj.bloomfilter.benchmarks.generated.BenchmarkBloomFilterProbe_testProbe1BloomFilter_jmhTest::testProbe1BloomFilter_avgt_jmhStub@15 (line 232)
           0.02%              0x00007f8c64e526e4: mov    %eax,%ebx          ;*l2i  ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@6 (line 146)
                                                                            ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                                                                            ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe1BloomFilter@12 (line 62)
                                                                            ; - com.github.prasanthj.bloomfilter.benchmarks.generated.BenchmarkBloomFilterProbe_testProbe1BloomFilter_jmhTest::testProbe1BloomFilter_avgt_jmhStub@15 (line 232)
  0.07%    0.24%              0x00007f8c64e526e6: shr    $0x20,%rax
  0.60%    0.96%              0x00007f8c64e526ea: mov    %eax,%r9d          ;*l2i  ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@13 (line 147)
                                                                            ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                                                                            ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe1BloomFilter@12 (line 62)
                                                                            ; - com.github.prasanthj.bloomfilter.benchmarks.generated.BenchmarkBloomFilterProbe_testProbe1BloomFilter_jmhTest::testProbe1BloomFilter_avgt_jmhStub@15 (line 232)
                              0x00007f8c64e526ed: test   %r10d,%r10d
                              0x00007f8c64e526f0: je     0x00007f8c64e529b5  ;*iload
                                                                            ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@28 (line 150)
                                                                            ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                                                                            ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe1BloomFilter@12 (line 62)
                                                                            ; - com.github.prasanthj.bloomfilter.benchmarks.generated.BenchmarkBloomFilterProbe_testProbe1BloomFilter_jmhTest::testProbe1BloomFilter_avgt_jmhStub@15 (line 232)
                              0x00007f8c64e526f6: mov    0x24(%r12,%rbp,8),%r8d  ;*getfield bitSet
                                                                            ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@59 (line 156)
                                                                            ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                                                                            ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe1BloomFilter@12 (line 62)
                                                                            ; - com.github.prasanthj.bloomfilter.benchmarks.generated.BenchmarkBloomFilterProbe_testProbe1BloomFilter_jmhTest::testProbe1BloomFilter_avgt_jmhStub@15 (line 232)
  0.15%    0.20%              0x00007f8c64e526fb: mov    0xc(%r12,%r8,8),%r14d  ;*getfield data
                                                                            ; - com.github.prasanthj.bloomfilter.BloomFilter$BitSet::get@1 (line 296)
                                                                            ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@65 (line 156)
                                                                            ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                                                                            ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe1BloomFilter@12 (line 62)
                                                                            ; - com.github.prasanthj.bloomfilter.benchmarks.generated.BenchmarkBloomFilterProbe_testProbe1BloomFilter_jmhTest::testProbe1BloomFilter_avgt_jmhStub@15 (line 232)
                                                                            ; implicit exception: dispatches to 0x00007f8c64e529b5
  0.46%    0.79%              0x00007f8c64e52700: vmovss 0x60(%rsp),%xmm1
                              0x00007f8c64e52706: mov    0xc(%r12,%r14,8),%r8d  ;*laload
                                                                            ; - com.github.prasanthj.bloomfilter.BloomFilter$BitSet::get@9 (line 296)
                                                                            ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@65 (line 156)
                                                                            ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                                                                            ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe1BloomFilter@12 (line 62)
                                                                            ; - com.github.prasanthj.bloomfilter.benchmarks.generated.BenchmarkBloomFilterProbe_testProbe1BloomFilter_jmhTest::testProbe1BloomFilter_avgt_jmhStub@15 (line 232)
                                                                            ; implicit exception: dispatches to 0x00007f8c64e529b5
  0.34%    0.61%              0x00007f8c64e5270b: cmp    $0x7ffffffe,%r13d
                              0x00007f8c64e52712: jg     0x00007f8c64e529cd  ;*iload
                                                                            ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@28 (line 150)
                                                                            ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                                                                            ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe1BloomFilter@12 (line 62)
                                                                            ; - com.github.prasanthj.bloomfilter.benchmarks.generated.BenchmarkBloomFilterProbe_testProbe1BloomFilter_jmhTest::testProbe1BloomFilter_avgt_jmhStub@15 (line 232)
  0.07%    0.14%              0x00007f8c64e52718: mov    %ebx,%eax
  0.49%    0.73%              0x00007f8c64e5271a: add    %r9d,%eax          ;*iadd
                                                                            ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@35 (line 150)
                                                                            ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                                                                            ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe1BloomFilter@12 (line 62)
                                                                            ; - com.github.prasanthj.bloomfilter.benchmarks.generated.BenchmarkBloomFilterProbe_testProbe1BloomFilter_jmhTest::testProbe1BloomFilter_avgt_jmhStub@15 (line 232)
                              0x00007f8c64e5271d: mov    %eax,%r11d
  0.07%    0.17%              0x00007f8c64e52720: not    %r11d
  0.09%    0.19%              0x00007f8c64e52723: test   %eax,%eax
  0.61%    0.92%              0x00007f8c64e52725: cmovl  %r11d,%eax
  0.19%    0.31%              0x00007f8c64e52729: cmp    $0x80000000,%eax
                   ╭          0x00007f8c64e5272e: jne    0x00007f8c64e52738
                   │          0x00007f8c64e52730: xor    %edx,%edx
                   │          0x00007f8c64e52732: cmp    $0xffffffffffffffff,%r10d
                   │╭         0x00007f8c64e52736: je     0x00007f8c64e5273c
  0.58%    1.14%   ↘│         0x00007f8c64e52738: cltd   
  0.05%    0.10%    │         0x00007f8c64e52739: idiv   %r10d              ;*irem
                    │                                                       ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@55 (line 155)
                    │                                                       ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                    │                                                       ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe1BloomFilter@12 (line 62)
                    │                                                       ; - com.github.prasanthj.bloomfilter.benchmarks.generated.BenchmarkBloomFilterProbe_testProbe1BloomFilter_jmhTest::testProbe1BloomFilter_avgt_jmhStub@15 (line 232)
 15.50%   15.71%    ↘         0x00007f8c64e5273c: mov    %edx,%r11d
                              0x00007f8c64e5273f: movslq %edx,%rcx          ;*i2l  ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@64 (line 156)
                                                                            ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                                                                            ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe1BloomFilter@12 (line 62)
                                                                            ; - com.github.prasanthj.bloomfilter.benchmarks.generated.BenchmarkBloomFilterProbe_testProbe1BloomFilter_jmhTest::testProbe1BloomFilter_avgt_jmhStub@15 (line 232)
  0.58%                       0x00007f8c64e52742: mov    %rcx,%rdi
  0.03%                       0x00007f8c64e52745: shr    $0x6,%rdi
  0.58%                       0x00007f8c64e52749: mov    %edi,%edx          ;*l2i  ; - com.github.prasanthj.bloomfilter.BloomFilter$BitSet::get@8 (line 296)
                                                                            ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@65 (line 156)
                                                                            ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                                                                            ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe1BloomFilter@12 (line 62)
                                                                            ; - com.github.prasanthj.bloomfilter.benchmarks.generated.BenchmarkBloomFilterProbe_testProbe1BloomFilter_jmhTest::testProbe1BloomFilter_avgt_jmhStub@15 (line 232)
                              0x00007f8c64e5274b: cmp    %r8d,%edx
                              0x00007f8c64e5274e: jae    0x00007f8c64e52a21  ;*laload
                                                                            ; - com.github.prasanthj.bloomfilter.BloomFilter$BitSet::get@9 (line 296)
                                                                            ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@65 (line 156)
                                                                            ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                                                                            ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe1BloomFilter@12 (line 62)
                                                                            ; - com.github.prasanthj.bloomfilter.benchmarks.generated.BenchmarkBloomFilterProbe_testProbe1BloomFilter_jmhTest::testProbe1BloomFilter_avgt_jmhStub@15 (line 232)
  0.73%                       0x00007f8c64e52754: mov    $0x1,%eax
                              0x00007f8c64e52759: mov    %r11d,%ecx
                              0x00007f8c64e5275c: shl    %cl,%rax
  0.66%                       0x00007f8c64e5275f: lea    (%r12,%r14,8),%rbp
                              0x00007f8c64e52763: and    0x10(%rbp,%rdx,8),%rax  ;*land
                                                                            ; - com.github.prasanthj.bloomfilter.BloomFilter$BitSet::get@14 (line 296)
                                                                            ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@65 (line 156)
                                                                            ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                                                                            ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe1BloomFilter@12 (line 62)
                                                                            ; - com.github.prasanthj.bloomfilter.benchmarks.generated.BenchmarkBloomFilterProbe_testProbe1BloomFilter_jmhTest::testProbe1BloomFilter_avgt_jmhStub@15 (line 232)
  3.20%                       0x00007f8c64e52768: test   %rax,%rax
                              0x00007f8c64e5276b: je     0x00007f8c64e52a68  ;*ifeq
                                                                            ; - com.github.prasanthj.bloomfilter.BloomFilter$BitSet::get@17 (line 296)
                                                                            ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@65 (line 156)
                                                                            ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                                                                            ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe1BloomFilter@12 (line 62)
                                                                            ; - com.github.prasanthj.bloomfilter.benchmarks.generated.BenchmarkBloomFilterProbe_testProbe1BloomFilter_jmhTest::testProbe1BloomFilter_avgt_jmhStub@15 (line 232)
  0.56%                       0x00007f8c64e52771: mov    %r13d,%r11d
                              0x00007f8c64e52774: inc    %r11d
                              0x00007f8c64e52777: cmp    %r13d,%r11d
                              0x00007f8c64e5277a: mov    $0x80000000,%ecx
  0.72%    0.02%              0x00007f8c64e5277f: cmovl  %ecx,%r13d
                              0x00007f8c64e52783: mov    %r9d,%eax
                              0x00007f8c64e52786: shl    %eax
  0.48%    0.02%              0x00007f8c64e52788: cmp    $0x2,%r13d
                              0x00007f8c64e5278c: jle    0x00007f8c64e52a2b
                              0x00007f8c64e52792: mov    $0x2,%edi
                              0x00007f8c64e52797: nopw   0x0(%rax,%rax,1)   ;*imul
                                                                            ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@34 (line 150)
                                                                            ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                                                                            ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe1BloomFilter@12 (line 62)
                                                                            ; - com.github.prasanthj.bloomfilter.benchmarks.generated.BenchmarkBloomFilterProbe_testProbe1BloomFilter_jmhTest::testProbe1BloomFilter_avgt_jmhStub@15 (line 232)
                         ↗    0x00007f8c64e527a0: add    %ebx,%eax          ;*iadd
                         │                                                  ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@35 (line 150)
                         │                                                  ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                         │                                                  ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe1BloomFilter@12 (line 62)
                         │                                                  ; - com.github.prasanthj.bloomfilter.benchmarks.generated.BenchmarkBloomFilterProbe_testProbe1BloomFilter_jmhTest::testProbe1BloomFilter_avgt_jmhStub@15 (line 232)
  0.66%    0.02%         │    0x00007f8c64e527a2: mov    %eax,%ecx
                         │    0x00007f8c64e527a4: not    %ecx
                         │    0x00007f8c64e527a6: test   %eax,%eax
                         │    0x00007f8c64e527a8: cmovl  %ecx,%eax
  0.70%    0.02%         │    0x00007f8c64e527ab: cmp    $0x80000000,%eax
                     ╭   │    0x00007f8c64e527b0: jne    0x00007f8c64e527ba
                     │   │    0x00007f8c64e527b2: xor    %edx,%edx
                     │   │    0x00007f8c64e527b4: cmp    $0xffffffffffffffff,%r10d
                     │╭  │    0x00007f8c64e527b8: je     0x00007f8c64e527be
                     ↘│  │    0x00007f8c64e527ba: cltd   
                      │  │    0x00007f8c64e527bb: idiv   %r10d              ;*irem
                      │  │                                                  ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@55 (line 155)
                      │  │                                                  ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                      │  │                                                  ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe1BloomFilter@12 (line 62)
                      │  │                                                  ; - com.github.prasanthj.bloomfilter.benchmarks.generated.BenchmarkBloomFilterProbe_testProbe1BloomFilter_jmhTest::testProbe1BloomFilter_avgt_jmhStub@15 (line 232)
  1.99%    0.61%      ↘  │    0x00007f8c64e527be: mov    %edx,%esi
                         │    0x00007f8c64e527c0: movslq %edx,%rcx          ;*i2l  ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@64 (line 156)
                         │                                                  ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                         │                                                  ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe1BloomFilter@12 (line 62)
                         │                                                  ; - com.github.prasanthj.bloomfilter.benchmarks.generated.BenchmarkBloomFilterProbe_testProbe1BloomFilter_jmhTest::testProbe1BloomFilter_avgt_jmhStub@15 (line 232)
           0.02%         │    0x00007f8c64e527c3: mov    %rcx,%rdx
  0.73%    0.55%         │    0x00007f8c64e527c6: shr    $0x6,%rdx
                         │    0x00007f8c64e527ca: mov    %edx,%edx          ;*l2i  ; - com.github.prasanthj.bloomfilter.BloomFilter$BitSet::get@8 (line 296)
                         │                                                  ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@65 (line 156)
                         │                                                  ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                         │                                                  ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe1BloomFilter@12 (line 62)
                         │                                                  ; - com.github.prasanthj.bloomfilter.benchmarks.generated.BenchmarkBloomFilterProbe_testProbe1BloomFilter_jmhTest::testProbe1BloomFilter_avgt_jmhStub@15 (line 232)
  0.02%                  │    0x00007f8c64e527cc: cmp    %r8d,%edx
                         │    0x00007f8c64e527cf: jae    0x00007f8c64e528fd  ;*laload
                         │                                                  ; - com.github.prasanthj.bloomfilter.BloomFilter$BitSet::get@9 (line 296)
                         │                                                  ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@65 (line 156)
                         │                                                  ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                         │                                                  ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe1BloomFilter@12 (line 62)
                         │                                                  ; - com.github.prasanthj.bloomfilter.benchmarks.generated.BenchmarkBloomFilterProbe_testProbe1BloomFilter_jmhTest::testProbe1BloomFilter_avgt_jmhStub@15 (line 232)
                         │    0x00007f8c64e527d5: mov    $0x1,%eax
  0.56%    0.56%         │    0x00007f8c64e527da: mov    %esi,%ecx
                         │    0x00007f8c64e527dc: shl    %cl,%rax
  0.02%    0.02%         │    0x00007f8c64e527df: and    0x10(%rbp,%rdx,8),%rax  ;*land
                         │                                                  ; - com.github.prasanthj.bloomfilter.BloomFilter$BitSet::get@14 (line 296)
                         │                                                  ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@65 (line 156)
                         │                                                  ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                         │                                                  ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe1BloomFilter@12 (line 62)
                         │                                                  ; - com.github.prasanthj.bloomfilter.benchmarks.generated.BenchmarkBloomFilterProbe_testProbe1BloomFilter_jmhTest::testProbe1BloomFilter_avgt_jmhStub@15 (line 232)
  0.87%    1.13%         │    0x00007f8c64e527e4: test   %rax,%rax
                         │    0x00007f8c64e527e7: je     0x00007f8c64e52965  ;*ifeq
                         │                                                  ; - com.github.prasanthj.bloomfilter.BloomFilter$BitSet::get@17 (line 296)
                         │                                                  ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@65 (line 156)
                         │                                                  ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                         │                                                  ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe1BloomFilter@12 (line 62)
                         │                                                  ; - com.github.prasanthj.bloomfilter.benchmarks.generated.BenchmarkBloomFilterProbe_testProbe1BloomFilter_jmhTest::testProbe1BloomFilter_avgt_jmhStub@15 (line 232)
  0.09%    0.05%         │    0x00007f8c64e527ed: mov    %edi,%esi
                         │    0x00007f8c64e527ef: inc    %esi               ;*iinc
                         │                                                  ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@73 (line 149)
                         │                                                  ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                         │                                                  ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe1BloomFilter@12 (line 62)
                         │                                                  ; - com.github.prasanthj.bloomfilter.benchmarks.generated.BenchmarkBloomFilterProbe_testProbe1BloomFilter_jmhTest::testProbe1BloomFilter_avgt_jmhStub@15 (line 232)
  0.72%    0.41%         │    0x00007f8c64e527f1: mov    %esi,%eax
  0.03%    0.02%         │    0x00007f8c64e527f3: imul   %r9d,%eax
  0.03%                  │    0x00007f8c64e527f7: add    %ebx,%eax          ;*iadd
                         │                                                  ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@35 (line 150)
                         │                                                  ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                         │                                                  ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe1BloomFilter@12 (line 62)
                         │                                                  ; - com.github.prasanthj.bloomfilter.benchmarks.generated.BenchmarkBloomFilterProbe_testProbe1BloomFilter_jmhTest::testProbe1BloomFilter_avgt_jmhStub@15 (line 232)
                         │    0x00007f8c64e527f9: mov    %eax,%edx
  0.58%                  │    0x00007f8c64e527fb: not    %edx
  0.02%                  │    0x00007f8c64e527fd: test   %eax,%eax
  0.05%    0.02%         │    0x00007f8c64e527ff: cmovl  %edx,%eax
  0.58%                  │    0x00007f8c64e52802: cmp    $0x80000000,%eax
                       ╭ │    0x00007f8c64e52807: jne    0x00007f8c64e52811
                       │ │    0x00007f8c64e52809: xor    %edx,%edx
                       │ │    0x00007f8c64e5280b: cmp    $0xffffffffffffffff,%r10d
                       │╭│    0x00007f8c64e5280f: je     0x00007f8c64e52815
                       ↘││    0x00007f8c64e52811: cltd   
  0.05%                 ││    0x00007f8c64e52812: idiv   %r10d              ;*irem
                        ││                                                  ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@55 (line 155)
                        ││                                                  ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                        ││                                                  ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe1BloomFilter@12 (line 62)
                        ││                                                  ; - com.github.prasanthj.bloomfilter.benchmarks.generated.BenchmarkBloomFilterProbe_testProbe1BloomFilter_jmhTest::testProbe1BloomFilter_avgt_jmhStub@15 (line 232)
  2.30%    1.62%        ↘│    0x00007f8c64e52815: mov    %edx,0x60(%rsp)
  0.19%    0.26%         │    0x00007f8c64e52819: movslq %edx,%rcx          ;*i2l  ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@64 (line 156)
                         │                                                  ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                         │                                                  ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe1BloomFilter@12 (line 62)
                         │                                                  ; - com.github.prasanthj.bloomfilter.benchmarks.generated.BenchmarkBloomFilterProbe_testProbe1BloomFilter_jmhTest::testProbe1BloomFilter_avgt_jmhStub@15 (line 232)
  0.05%    0.03%         │    0x00007f8c64e5281c: mov    %rcx,%rdx
  0.02%    0.02%         │    0x00007f8c64e5281f: shr    $0x6,%rdx
  0.36%    0.63%         │    0x00007f8c64e52823: mov    %edx,%edx          ;*l2i  ; - com.github.prasanthj.bloomfilter.BloomFilter$BitSet::get@8 (line 296)
                         │                                                  ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@65 (line 156)
                         │                                                  ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                         │                                                  ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe1BloomFilter@12 (line 62)
                         │                                                  ; - com.github.prasanthj.bloomfilter.benchmarks.generated.BenchmarkBloomFilterProbe_testProbe1BloomFilter_jmhTest::testProbe1BloomFilter_avgt_jmhStub@15 (line 232)
  0.10%    0.07%         │    0x00007f8c64e52825: cmp    %r8d,%edx
                         │    0x00007f8c64e52828: jae    0x00007f8c64e528ff  ;*laload
                         │                                                  ; - com.github.prasanthj.bloomfilter.BloomFilter$BitSet::get@9 (line 296)
                         │                                                  ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@65 (line 156)
                         │                                                  ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                         │                                                  ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe1BloomFilter@12 (line 62)
                         │                                                  ; - com.github.prasanthj.bloomfilter.benchmarks.generated.BenchmarkBloomFilterProbe_testProbe1BloomFilter_jmhTest::testProbe1BloomFilter_avgt_jmhStub@15 (line 232)
  0.03%    0.22%         │    0x00007f8c64e5282e: mov    $0x1,%eax
           0.02%         │    0x00007f8c64e52833: mov    0x60(%rsp),%ecx
  0.55%    1.19%         │    0x00007f8c64e52837: shl    %cl,%rax
  0.31%    0.29%         │    0x00007f8c64e5283a: and    0x10(%rbp,%rdx,8),%rax  ;*land
                         │                                                  ; - com.github.prasanthj.bloomfilter.BloomFilter$BitSet::get@14 (line 296)
                         │                                                  ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@65 (line 156)
                         │                                                  ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                         │                                                  ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe1BloomFilter@12 (line 62)
                         │                                                  ; - com.github.prasanthj.bloomfilter.benchmarks.generated.BenchmarkBloomFilterProbe_testProbe1BloomFilter_jmhTest::testProbe1BloomFilter_avgt_jmhStub@15 (line 232)
  0.70%    1.14%         │    0x00007f8c64e5283f: test   %rax,%rax
                         │    0x00007f8c64e52842: je     0x00007f8c64e52967  ;*ifeq
                         │                                                  ; - com.github.prasanthj.bloomfilter.BloomFilter$BitSet::get@17 (line 296)
                         │                                                  ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@65 (line 156)
                         │                                                  ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                         │                                                  ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe1BloomFilter@12 (line 62)
                         │                                                  ; - com.github.prasanthj.bloomfilter.benchmarks.generated.BenchmarkBloomFilterProbe_testProbe1BloomFilter_jmhTest::testProbe1BloomFilter_avgt_jmhStub@15 (line 232)
  0.39%    0.60%         │    0x00007f8c64e52848: add    $0x2,%edi          ;*iinc
                         │                                                  ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@73 (line 149)
                         │                                                  ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                         │                                                  ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe1BloomFilter@12 (line 62)
                         │                                                  ; - com.github.prasanthj.bloomfilter.benchmarks.generated.BenchmarkBloomFilterProbe_testProbe1BloomFilter_jmhTest::testProbe1BloomFilter_avgt_jmhStub@15 (line 232)
           0.02%         │    0x00007f8c64e5284b: mov    %edi,%eax
                         │    0x00007f8c64e5284d: imul   %r9d,%eax          ;*imul
                         │                                                  ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@34 (line 150)
                         │                                                  ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                         │                                                  ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe1BloomFilter@12 (line 62)
                         │                                                  ; - com.github.prasanthj.bloomfilter.benchmarks.generated.BenchmarkBloomFilterProbe_testProbe1BloomFilter_jmhTest::testProbe1BloomFilter_avgt_jmhStub@15 (line 232)
  0.22%    0.36%         │    0x00007f8c64e52851: cmp    %r13d,%edi
                         ╰    0x00007f8c64e52854: jl     0x00007f8c64e527a0  ;*if_icmpgt
                                                                            ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@25 (line 149)
                                                                            ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                                                                            ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe1BloomFilter@12 (line 62)
                                                                            ; - com.github.prasanthj.bloomfilter.benchmarks.generated.BenchmarkBloomFilterProbe_testProbe1BloomFilter_jmhTest::testProbe1BloomFilter_avgt_jmhStub@15 (line 232)
  0.51%    0.07%              0x00007f8c64e5285a: cmp    %r11d,%edi
                              0x00007f8c64e5285d: jge    0x00007f8c64e5258e
  0.02%                       0x00007f8c64e52863: nop                       ;*iload
                                                                            ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@28 (line 150)
                                                                            ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                                                                            ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe1BloomFilter@12 (line 62)
                                                                            ; - com.github.prasanthj.bloomfilter.benchmarks.generated.BenchmarkBloomFilterProbe_testProbe1BloomFilter_jmhTest::testProbe1BloomFilter_avgt_jmhStub@15 (line 232)
                              0x00007f8c64e52864: add    %ebx,%eax          ;*iadd
                                                                            ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@35 (line 150)
                                                                            ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                                                                            ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe1BloomFilter@12 (line 62)
                                                                            ; - com.github.prasanthj.bloomfilter.benchmarks.generated.BenchmarkBloomFilterProbe_testProbe1BloomFilter_jmhTest::testProbe1BloomFilter_avgt_jmhStub@15 (line 232)
  0.20%    0.02%              0x00007f8c64e52866: mov    %eax,%ecx
  0.41%    0.09%              0x00007f8c64e52868: not    %ecx
  0.02%    0.02%              0x00007f8c64e5286a: test   %eax,%eax
                              0x00007f8c64e5286c: cmovl  %ecx,%eax
  0.65%    0.50%              0x00007f8c64e5286f: cmp    $0x80000000,%eax
                          ╭   0x00007f8c64e52874: jne    0x00007f8c64e5287e
                          │   0x00007f8c64e52876: xor    %edx,%edx
                          │   0x00007f8c64e52878: cmp    $0xffffffffffffffff,%r10d
                          │╭  0x00007f8c64e5287c: je     0x00007f8c64e52882
           0.02%          ↘│  0x00007f8c64e5287e: cltd   
                           │  0x00007f8c64e5287f: idiv   %r10d              ;*irem
                           │                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@55 (line 155)
                           │                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                           │                                                ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe1BloomFilter@12 (line 62)
                           │                                                ; - com.github.prasanthj.bloomfilter.benchmarks.generated.BenchmarkBloomFilterProbe_testProbe1BloomFilter_jmhTest::testProbe1BloomFilter_avgt_jmhStub@15 (line 232)
  2.49%    3.47%           ↘  0x00007f8c64e52882: mov    %edx,%r13d
  0.03%    0.02%              0x00007f8c64e52885: movslq %edx,%rcx          ;*i2l  ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@64 (line 156)
                                                                            ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                                                                            ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe1BloomFilter@12 (line 62)
                                                                            ; - com.github.prasanthj.bloomfilter.benchmarks.generated.BenchmarkBloomFilterProbe_testProbe1BloomFilter_jmhTest::testProbe1BloomFilter_avgt_jmhStub@15 (line 232)
  0.07%    0.20%              0x00007f8c64e52888: mov    %rcx,%rdx
  0.12%    0.24%              0x00007f8c64e5288b: shr    $0x6,%rdx
  0.56%    0.53%              0x00007f8c64e5288f: mov    %edx,%edx          ;*l2i  ; - com.github.prasanthj.bloomfilter.BloomFilter$BitSet::get@8 (line 296)
                                                                            ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@65 (line 156)
                                                                            ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                                                                            ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe1BloomFilter@12 (line 62)
                                                                            ; - com.github.prasanthj.bloomfilter.benchmarks.generated.BenchmarkBloomFilterProbe_testProbe1BloomFilter_jmhTest::testProbe1BloomFilter_avgt_jmhStub@15 (line 232)
  0.22%    0.41%              0x00007f8c64e52891: cmp    %r8d,%edx
                              0x00007f8c64e52894: jae    0x00007f8c64e52901  ;*laload
                                                                            ; - com.github.prasanthj.bloomfilter.BloomFilter$BitSet::get@9 (line 296)
                                                                            ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@65 (line 156)
                                                                            ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                                                                            ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe1BloomFilter@12 (line 62)
                                                                            ; - com.github.prasanthj.bloomfilter.benchmarks.generated.BenchmarkBloomFilterProbe_testProbe1BloomFilter_jmhTest::testProbe1BloomFilter_avgt_jmhStub@15 (line 232)
  0.53%    0.32%              0x00007f8c64e52896: mov    $0x1,%eax
  0.05%    0.09%              0x00007f8c64e5289b: mov    %r13d,%ecx
  0.20%    0.19%              0x00007f8c64e5289e: shl    %cl,%rax
  0.27%    0.29%              0x00007f8c64e528a1: and    0x10(%rbp,%rdx,8),%rax  ;*land
                                                                            ; - com.github.prasanthj.bloomfilter.BloomFilter$BitSet::get@14 (line 296)
                                                                            ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@65 (line 156)
                                                                            ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                                                                            ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe1BloomFilter@12 (line 62)
                                                                            ; - com.github.prasanthj.bloomfilter.benchmarks.generated.BenchmarkBloomFilterProbe_testProbe1BloomFilter_jmhTest::testProbe1BloomFilter_avgt_jmhStub@15 (line 232)
  2.71%    2.44%              0x00007f8c64e528a6: test   %rax,%rax
                              0x00007f8c64e528a9: je     0x00007f8c64e52969  ;*ifeq
                                                                            ; - com.github.prasanthj.bloomfilter.BloomFilter$BitSet::get@17 (line 296)
                                                                            ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@65 (line 156)
                                                                            ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                                                                            ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe1BloomFilter@12 (line 62)
                                                                            ; - com.github.prasanthj.bloomfilter.benchmarks.generated.BenchmarkBloomFilterProbe_testProbe1BloomFilter_jmhTest::testProbe1BloomFilter_avgt_jmhStub@15 (line 232)
  0.58%    0.90%              0x00007f8c64e528af: inc    %edi               ;*iinc
                                                                            ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@73 (line 149)
                                                                            ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                                                                            ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe1BloomFilter@12 (line 62)
                                                                            ; - com.github.prasanthj.bloomfilter.benchmarks.generated.BenchmarkBloomFilterProbe_testProbe1BloomFilter_jmhTest::testProbe1BloomFilter_avgt_jmhStub@15 (line 232)
                              0x00007f8c64e528b1: cmp    %r11d,%edi
....................................................................................................
 61.86%   52.71%  <total for region 1>

....[Hottest Region 2]..............................................................................
C2, level 4, com.github.prasanthj.bloomfilter.Murmur3::hash64, version 575 (288 bytes) 

                     Decoding compiled method 0x00007f8c64e369d0:
                     Code:
                     [Entry Point]
                     [Verified Entry Point]
                     [Constants]
                       # {method} {0x00007f8bc025ba98} &apos;hash64&apos; &apos;([BII)J&apos; in &apos;com/github/prasanthj/bloomfilter/Murmur3&apos;
                       # parm0:    rsi:rsi   = &apos;[B&apos;
                       # parm1:    rdx       = int
                       # parm2:    rcx       = int
                       #           [sp+0x50]  (sp of caller)
           0.07%       0x00007f8c64e36b60: mov    %eax,-0x14000(%rsp)
  0.82%    1.28%       0x00007f8c64e36b67: push   %rbp
  0.03%                0x00007f8c64e36b68: sub    $0x40,%rsp         ;*synchronization entry
                                                                     ; - com.github.prasanthj.bloomfilter.Murmur3::hash64@-1 (line 130)
  0.02%    0.02%       0x00007f8c64e36b6c: mov    %edx,0x8(%rsp)
  0.83%    0.89%       0x00007f8c64e36b70: mov    %edx,%ebx
                       0x00007f8c64e36b72: sar    $0x3,%ebx          ;*ishr
                                                                     ; - com.github.prasanthj.bloomfilter.Murmur3::hash64@5 (line 131)
                       0x00007f8c64e36b75: movslq %ecx,%r14          ;*i2l  ; - com.github.prasanthj.bloomfilter.Murmur3::hash64@1 (line 130)
  0.02%    0.03%       0x00007f8c64e36b78: mov    $0x87c37b91114253d5,%rdi
  0.55%    1.18%       0x00007f8c64e36b82: test   %ebx,%ebx
                  ╭    0x00007f8c64e36b84: jle    0x00007f8c64e36c6c  ;*if_icmpge
                  │                                                  ; - com.github.prasanthj.bloomfilter.Murmur3::hash64@15 (line 134)
  0.02%           │    0x00007f8c64e36b8a: mov    0xc(%rsi),%r10d    ;*baload
                  │                                                  ; - com.github.prasanthj.bloomfilter.Murmur3::hash64@27 (line 136)
                  │                                                  ; implicit exception: dispatches to 0x00007f8c64e36fd1
                  │    0x00007f8c64e36b8e: xor    %r9d,%r9d
           0.05%  │    0x00007f8c64e36b91: xor    %r8d,%r8d
  0.70%    1.26%  │    0x00007f8c64e36b94: nopl   0x0(%rax,%rax,1)
  0.02%           │    0x00007f8c64e36b9c: xchg   %ax,%ax            ;*iload
                  │                                                  ; - com.github.prasanthj.bloomfilter.Murmur3::hash64@18 (line 135)
  0.02%           │ ↗  0x00007f8c64e36ba0: cmp    %r10d,%r9d
                  │ │  0x00007f8c64e36ba3: jae    0x00007f8c64e36e1e  ;*baload
                  │ │                                                ; - com.github.prasanthj.bloomfilter.Murmur3::hash64@27 (line 136)
           0.02%  │ │  0x00007f8c64e36ba9: movzbq 0x10(%rsi,%r9,1),%rcx  ;*land
                  │ │                                                ; - com.github.prasanthj.bloomfilter.Murmur3::hash64@32 (line 136)
  0.82%    1.14%  │ │  0x00007f8c64e36baf: mov    %r9d,%r11d
  0.02%    0.03%  │ │  0x00007f8c64e36bb2: add    $0x7,%r11d
                  │ │  0x00007f8c64e36bb6: cmp    %r10d,%r11d
                  │ │  0x00007f8c64e36bb9: jae    0x00007f8c64e36e51  ;*baload
                  │ │                                                ; - com.github.prasanthj.bloomfilter.Murmur3::hash64@38 (line 136)
                  │ │  0x00007f8c64e36bbf: mov    %rcx,(%rsp)
  0.78%    0.82%  │ │  0x00007f8c64e36bc3: movslq %r9d,%r11          ;*baload
                  │ │                                                ; - com.github.prasanthj.bloomfilter.Murmur3::hash64@130 (line 136)
                  │ │  0x00007f8c64e36bc6: movzbq 0x11(%rsi,%r11,1),%r9
                  │ │  0x00007f8c64e36bcc: movzbq 0x17(%rsi,%r11,1),%rcx
                  │ │  0x00007f8c64e36bd2: movzbq 0x12(%rsi,%r11,1),%rdx
  0.72%    1.21%  │ │  0x00007f8c64e36bd8: movzbq 0x13(%rsi,%r11,1),%rax
           0.02%  │ │  0x00007f8c64e36bde: movzbq 0x14(%rsi,%r11,1),%rbp
  0.02%    0.05%  │ │  0x00007f8c64e36be4: movzbq 0x15(%rsi,%r11,1),%r13
  0.03%    0.03%  │ │  0x00007f8c64e36bea: movzbq 0x16(%rsi,%r11,1),%r11
  0.63%    1.06%  │ │  0x00007f8c64e36bf0: shl    $0x8,%r9
           0.02%  │ │  0x00007f8c64e36bf4: or     (%rsp),%r9
  0.02%           │ │  0x00007f8c64e36bf8: shl    $0x30,%r11
  0.02%    0.05%  │ │  0x00007f8c64e36bfc: shl    $0x28,%r13
  0.97%    0.94%  │ │  0x00007f8c64e36c00: shl    $0x20,%rbp
  0.02%           │ │  0x00007f8c64e36c04: shl    $0x18,%rax
                  │ │  0x00007f8c64e36c08: shl    $0x10,%rdx
                  │ │  0x00007f8c64e36c0c: or     %rdx,%r9
  0.65%    1.19%  │ │  0x00007f8c64e36c0f: or     %rax,%r9
                  │ │  0x00007f8c64e36c12: or     %rbp,%r9
                  │ │  0x00007f8c64e36c15: or     %r13,%r9
  0.07%           │ │  0x00007f8c64e36c18: or     %r11,%r9
  0.73%    1.16%  │ │  0x00007f8c64e36c1b: shl    $0x38,%rcx
           0.02%  │ │  0x00007f8c64e36c1f: or     %rcx,%r9
           0.03%  │ │  0x00007f8c64e36c22: imul   %rdi,%r9           ;*lmul
                  │ │                                                ; - com.github.prasanthj.bloomfilter.Murmur3::hash64@147 (line 146)
  0.03%    0.05%  │ │  0x00007f8c64e36c26: rol    $0x1f,%r9
  0.55%    0.94%  │ │  0x00007f8c64e36c2a: mov    $0x4cf5ad432745937f,%r11
           0.02%  │ │  0x00007f8c64e36c34: imul   %r11,%r9
  0.03%    0.07%  │ │  0x00007f8c64e36c38: xor    %r14,%r9           ;*lxor
                  │ │                                                ; - com.github.prasanthj.bloomfilter.Murmur3::hash64@170 (line 149)
  0.05%    0.03%  │ │  0x00007f8c64e36c3b: rol    $0x1b,%r9          ;*lor  ; - java.lang.Long::rotateLeft@7 (line 1500)
                  │ │                                                ; - com.github.prasanthj.bloomfilter.Murmur3::hash64@175 (line 150)
  0.56%    0.75%  │ │  0x00007f8c64e36c3f: mov    %r9,%r14
                  │ │  0x00007f8c64e36c42: shl    $0x2,%r14
  0.07%           │ │  0x00007f8c64e36c46: add    %r9,%r14
  0.02%    0.07%  │ │  0x00007f8c64e36c49: add    $0x52dce729,%r14   ;*ladd
                  │ │                                                ; - com.github.prasanthj.bloomfilter.Murmur3::hash64@185 (line 150)
  0.80%    1.19%  │ │  0x00007f8c64e36c50: mov    %r8d,%ecx
                  │ │  0x00007f8c64e36c53: inc    %ecx               ;*iinc
                  │ │                                                ; - com.github.prasanthj.bloomfilter.Murmur3::hash64@187 (line 134)
                  │ │  0x00007f8c64e36c55: cmp    %ebx,%ecx
                  │╭│  0x00007f8c64e36c57: jge    0x00007f8c64e36c6c  ;*if_icmpge
                  │││                                                ; - com.github.prasanthj.bloomfilter.Murmur3::hash64@15 (line 134)
                  │││  0x00007f8c64e36c59: shl    $0x3,%r8d
                  │││  0x00007f8c64e36c5d: mov    %r8d,%r9d
                  │││  0x00007f8c64e36c60: add    $0x8,%r9d          ;*ishl
                  │││                                                ; - com.github.prasanthj.bloomfilter.Murmur3::hash64@21 (line 135)
                  │││  0x00007f8c64e36c64: mov    %ecx,%r8d
                  ││╰  0x00007f8c64e36c67: jmpq   0x00007f8c64e36ba0  ;*if_icmpge
                  ││                                                 ; - com.github.prasanthj.bloomfilter.Murmur3::hash64@15 (line 134)
  0.02%    0.02%  ↘↘   0x00007f8c64e36c6c: mov    0x8(%rsp),%r8d
  0.72%    1.19%       0x00007f8c64e36c71: and    $0xfffffffffffffff8,%r8d  ;*ishl
                                                                     ; - com.github.prasanthj.bloomfilter.Murmur3::hash64@199 (line 155)
                       0x00007f8c64e36c75: mov    0x8(%rsp),%r10d
                       0x00007f8c64e36c7a: sub    %r8d,%r10d         ;*isub
                                                                     ; - com.github.prasanthj.bloomfilter.Murmur3::hash64@205 (line 156)
  0.03%                0x00007f8c64e36c7d: movslq %r8d,%r9           ;*baload
                                                                     ; - com.github.prasanthj.bloomfilter.Murmur3::hash64@351 (line 168)
  0.68%    0.53%       0x00007f8c64e36c80: xor    %ecx,%ecx
                       0x00007f8c64e36c82: cmp    $0x4,%r10d
                       0x00007f8c64e36c86: je     0x00007f8c64e36d2d
                       0x00007f8c64e36c8c: cmp    $0x4,%r10d
                       0x00007f8c64e36c90: jle    0x00007f8c64e36cad
                       0x00007f8c64e36c92: cmp    $0x7,%r10d
                       0x00007f8c64e36c96: je     0x00007f8c64e36cd0
                       0x00007f8c64e36c98: cmp    $0x7,%r10d
                       0x00007f8c64e36c9c: jg     0x00007f8c64e36dd0
                       0x00007f8c64e36ca2: cmp    $0x6,%r10d
....................................................................................................
 12.06%   17.45%  <total for region 2>

....[Hottest Regions]...............................................................................
 61.86%   52.71%         C2, level 4  com.github.prasanthj.bloomfilter.benchmarks.generated.BenchmarkBloomFilterProbe_testProbe1BloomFilter_jmhTest::testProbe1BloomFilter_avgt_jmhStub, version 616 (759 bytes) 
 12.06%   17.45%         C2, level 4  com.github.prasanthj.bloomfilter.Murmur3::hash64, version 575 (288 bytes) 
  5.84%    5.86%   [kernel.kallsyms]  native_write_msr_safe (2 bytes) 
  5.48%    9.37%         C2, level 4  com.github.prasanthj.bloomfilter.Murmur3::hash64, version 575 (77 bytes) 
  3.85%    3.21%           libjvm.so  [unknown] (9 bytes) 
  1.57%    1.83%           libjvm.so  [unknown] (37 bytes) 
  0.75%    0.77%         C2, level 4  com.github.prasanthj.bloomfilter.benchmarks.generated.BenchmarkBloomFilterProbe_testProbe1BloomFilter_jmhTest::testProbe1BloomFilter_avgt_jmhStub, version 616 (3 bytes) 
  0.72%    0.84%         C2, level 4  com.github.prasanthj.bloomfilter.Murmur3::hash64, version 575 (10 bytes) 
  0.55%    0.53%           libjvm.so  [unknown] (188 bytes) 
  0.19%    0.10%           libjvm.so  [unknown] (57 bytes) 
  0.14%    0.03%   [kernel.kallsyms]  __srcu_read_unlock (15 bytes) 
  0.14%    0.02%   [kernel.kallsyms]  mutex_unlock (6 bytes) 
  0.14%    0.03%           libjvm.so  [unknown] (105 bytes) 
  0.14%    0.43%           libjvm.so  [unknown] (99 bytes) 
  0.10%    0.03%   [kernel.kallsyms]  __sb_start_write (0 bytes) 
  0.10%    0.05%   [kernel.kallsyms]  avc_has_perm_flags (2 bytes) 
  0.10%    0.07%           libjvm.so  [unknown] (21 bytes) 
  0.10%    0.19%           libjvm.so  [unknown] (63 bytes) 
  0.10%    0.10%        libc-2.17.so  __memcpy_ssse3_back (75 bytes) 
  0.09%    0.14%           libjvm.so  [unknown] (128 bytes) 
  5.98%    6.25%  <...other 412 warm regions...>
....................................................................................................
 99.98%  100.00%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 62.61%   53.48%         C2, level 4  com.github.prasanthj.bloomfilter.benchmarks.generated.BenchmarkBloomFilterProbe_testProbe1BloomFilter_jmhTest::testProbe1BloomFilter_avgt_jmhStub, version 616 
 18.26%   27.65%         C2, level 4  com.github.prasanthj.bloomfilter.Murmur3::hash64, version 575 
  8.55%    8.47%           libjvm.so  [unknown] 
  5.84%    5.86%   [kernel.kallsyms]  native_write_msr_safe 
  0.22%    0.36%        libc-2.17.so  vfprintf 
  0.15%    0.19%        libc-2.17.so  __memcpy_ssse3_back 
  0.14%    0.02%   [kernel.kallsyms]  mutex_unlock 
  0.14%    0.03%   [kernel.kallsyms]  __srcu_read_unlock 
  0.14%    0.03%   [kernel.kallsyms]  pipe_write 
  0.12%    0.07%   [kernel.kallsyms]  avc_has_perm_flags 
  0.12%    0.12%   [kernel.kallsyms]  vfs_write 
  0.12%    0.03%   [kernel.kallsyms]  __sb_start_write 
  0.10%    0.07%        libc-2.17.so  _IO_fwrite 
  0.10%    0.03%   [kernel.kallsyms]  __audit_syscall_exit 
  0.09%    0.17%   [kernel.kallsyms]  do_sync_write 
  0.07%    0.03%   [kernel.kallsyms]  fput 
  0.07%    0.09%   [kernel.kallsyms]  selinux_file_permission 
  0.07%    0.03%   [kernel.kallsyms]  copy_user_enhanced_fast_string 
  0.07%    0.03%      hsdis-amd64.so  print_insn 
  0.07%            [kernel.kallsyms]  clear_page_c_e 
  2.95%    2.05%  <...other 122 warm methods...>
....................................................................................................
 99.98%   98.82%  <totals>

....[Distribution by Source]........................................................................
 80.87%   81.14%         C2, level 4
  8.82%    8.57%   [kernel.kallsyms]
  8.58%    8.47%           libjvm.so
  0.95%    1.25%        libc-2.17.so
  0.24%    0.22%  libpthread-2.17.so
  0.17%    0.03%      hsdis-amd64.so
  0.15%    0.10%              [jbd2]
  0.12%    0.19%              [ext4]
  0.07%    0.03%         interpreter
....................................................................................................
 99.98%  100.00%  <totals>



# JMH version: 1.19
# VM version: JDK 1.8.0_131, VM 25.131-b12
# VM invoker: /usr/lib/jvm/java-1.8.0-openjdk-1.8.0.131-3.b12.el7_3.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe.testProbe20KBloomFilter
# Parameters: (size = 10000)

# Run progress: 33.33% complete, ETA 00:01:22
# Fork: 1 of 1
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 105.533 ns/op
# Warmup Iteration   2: 87.800 ns/op
# Warmup Iteration   3: 68.001 ns/op
# Warmup Iteration   4: 60.814 ns/op
# Warmup Iteration   5: 69.767 ns/op
Iteration   1: 58.837 ns/op
Iteration   2: 58.867 ns/op
Iteration   3: 59.888 ns/op
Iteration   4: 58.739 ns/op
Iteration   5: 62.831 ns/op
# Processing profiler results: LinuxPerfAsmProfiler 


Result "com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe.testProbe20KBloomFilter":
  59.832 ±(99.9%) 6.702 ns/op [Average]
  (min, avg, max) = (58.739, 59.832, 62.831), stdev = 1.740
  CI (99.9%): [53.131, 66.534] (assumes normal distribution)

Secondary result "com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe.testProbe20KBloomFilter:·asm":
PrintAssembly processed: 189574 total address lines.
Perf output processed (skipped 11.252 seconds):
 Column 1: cycles (5462 events)
 Column 2: instructions (5461 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
C2, level 4, com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20KBloomFilter, version 594 (740 bytes) 

                                   [Verified Entry Point]
                                     0x00007fb475488160: mov    %eax,-0x14000(%rsp)
                                     0x00007fb475488167: push   %rbp
                                     0x00007fb475488168: sub    $0x40,%rsp         ;*synchronization entry
                                                                                   ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20KBloomFilter@-1 (line 69)
                                     0x00007fb47548816c: mov    %rsi,(%rsp)
                                     0x00007fb475488170: mov    $0x4e20,%ebp
                  ╭                  0x00007fb475488175: jmp    0x00007fb475488186  ;*invokevirtual testBytes
                  │                                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                  │                                                                ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20KBloomFilter@14 (line 70)
  2.67%    0.75%  │↗  ↗  ↗  ↗ ↗  ↗↗  0x00007fb475488177: mov    0xc(%rsp),%ebp
  1.39%    0.62%  ││  │  │  │ │  ││  0x00007fb47548817b: dec    %ebp               ;*iinc
                  ││  │  │  │ │  ││                                                ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20KBloomFilter@18 (line 69)
  0.59%    0.51%  ││  │  │  │ │  ││  0x00007fb47548817d: cmp    $0xffffffffffffffff,%ebp
  0.27%    0.04%  ││  │  │  │ │  ││  0x00007fb475488180: jle    0x00007fb47548849a  ;*aload_0
                  ││  │  │  │ │  ││                                                ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20KBloomFilter@8 (line 70)
  0.26%    0.04%  ↘│  │  │  │ │  ││  0x00007fb475488186: mov    (%rsp),%r11
  0.02%            │  │  │  │ │  ││  0x00007fb47548818a: mov    0x10(%r11),%r8d    ;*getfield bf
                   │  │  │  │ │  ││                                                ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20KBloomFilter@9 (line 70)
  0.62%    0.42%   │  │  │  │ │  ││  0x00007fb47548818e: movslq %ebp,%r9           ;*i2l  ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20KBloomFilter@13 (line 70)
  0.02%            │  │  │  │ │  ││  0x00007fb475488191: test   %r8d,%r8d
                   │  │  │  │ │  ││  0x00007fb475488194: je     0x00007fb4754884ed  ;*invokevirtual testLong
                   │  │  │  │ │  ││                                                ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20KBloomFilter@14 (line 70)
  0.35%    0.02%   │  │  │  │ │  ││  0x00007fb47548819a: mov    0x60(%r15),%rax
                   │  │  │  │ │  ││  0x00007fb47548819e: mov    %rax,%r10
  0.35%    0.60%   │  │  │  │ │  ││  0x00007fb4754881a1: add    $0x18,%r10
  0.02%            │  │  │  │ │  ││  0x00007fb4754881a5: lea    (%r12,%r8,8),%rcx  ;*getfield bf
                   │  │  │  │ │  ││                                                ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20KBloomFilter@9 (line 70)
  0.46%            │  │  │  │ │  ││  0x00007fb4754881a9: cmp    0x70(%r15),%r10
                   │  │  │  │ │  ││  0x00007fb4754881ad: jae    0x00007fb47548846b
                   │  │  │  │ │  ││  0x00007fb4754881b3: mov    %r10,0x60(%r15)
  0.40%    0.42%   │  │  │  │ │  ││  0x00007fb4754881b7: prefetchnta 0xc0(%r10)
  0.35%    0.07%   │  │  │  │ │  ││  0x00007fb4754881bf: movq   $0x1,(%rax)
  0.42%    0.05%   │  │  │  │ │  ││  0x00007fb4754881c6: prefetchnta 0x100(%r10)
  0.24%    0.05%   │  │  │  │ │  ││  0x00007fb4754881ce: movl   $0x768,0x8(%rax)   ;   {metadata({type array byte})}
  0.70%    0.31%   │  │  │  │ │  ││  0x00007fb4754881d5: prefetchnta 0x140(%r10)
  0.22%    0.11%   │  │  │  │ │  ││  0x00007fb4754881dd: movl   $0x8,0xc(%rax)
  0.40%    0.04%   │  │  │  │ │  ││  0x00007fb4754881e4: prefetchnta 0x180(%r10)
  0.33%    0.04%   │  │  │  │ │  ││  0x00007fb4754881ec: movl   $0x0,0x10(%rax)
  0.57%    0.18%   │  │  │  │ │  ││  0x00007fb4754881f3: movl   $0x0,0x14(%rax)
  0.55%    0.16%   │  │  │  │ │  ││  0x00007fb4754881fa: mov    %r8d,0x8(%rsp)
  0.29%    0.11%   │  │  │  │ │  ││  0x00007fb4754881ff: mov    %rcx,0x18(%rsp)    ;*newarray
                   │  │  │  │ │  ││                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::longToByteArrayLE@2 (line 195)
                   │  │  │  │ │  ││                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@2 (line 176)
                   │  │  │  │ │  ││                                                ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20KBloomFilter@14 (line 70)
  0.05%    0.04%   │  │  │  │ │  ││  0x00007fb475488204: mov    %bpl,0x10(%rax)    ;*bastore
                   │  │  │  │ │  ││                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::longToByteArrayLE@11 (line 195)
                   │  │  │  │ │  ││                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@2 (line 176)
                   │  │  │  │ │  ││                                                ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20KBloomFilter@14 (line 70)
  0.48%    0.26%   │  │  │  │ │  ││  0x00007fb475488208: mov    %ebp,0xc(%rsp)
  0.22%    0.18%   │  │  │  │ │  ││  0x00007fb47548820c: mov    %r9,%r10
  0.26%    0.07%   │  │  │  │ │  ││  0x00007fb47548820f: sar    $0x30,%r10
  0.02%            │  │  │  │ │  ││  0x00007fb475488213: mov    %r9,%r8
  0.37%    0.13%   │  │  │  │ │  ││  0x00007fb475488216: sar    $0x28,%r8
  0.18%    0.09%   │  │  │  │ │  ││  0x00007fb47548821a: mov    %r10d,%r11d
  0.24%    0.15%   │  │  │  │ │  ││  0x00007fb47548821d: mov    %r8d,%r10d
  0.02%            │  │  │  │ │  ││  0x00007fb475488220: mov    %r9,%r8
  0.37%    0.40%   │  │  │  │ │  ││  0x00007fb475488223: sar    $0x20,%r8
  0.16%    0.16%   │  │  │  │ │  ││  0x00007fb475488227: mov    %r9,%rcx
  0.15%    0.20%   │  │  │  │ │  ││  0x00007fb47548822a: mov    %r9,%rdi
                   │  │  │  │ │  ││  0x00007fb47548822d: sar    $0x18,%rcx
  0.29%    0.22%   │  │  │  │ │  ││  0x00007fb475488231: mov    %r8d,%r9d
  0.16%    0.35%   │  │  │  │ │  ││  0x00007fb475488234: mov    %ecx,%r8d
  0.35%    0.24%   │  │  │  │ │  ││  0x00007fb475488237: mov    %rdi,%rcx
                   │  │  │  │ │  ││  0x00007fb47548823a: sar    $0x10,%rcx
  0.40%    0.64%   │  │  │  │ │  ││  0x00007fb47548823e: mov    %rdi,%rdx
  0.35%    0.31%   │  │  │  │ │  ││  0x00007fb475488241: sar    $0x8,%rdx
  0.09%    0.31%   │  │  │  │ │  ││  0x00007fb475488245: mov    %ecx,%ebx
  0.02%            │  │  │  │ │  ││  0x00007fb475488247: mov    %edx,%ecx
  0.46%    0.18%   │  │  │  │ │  ││  0x00007fb475488249: mov    %cl,0x11(%rax)     ;*bastore
                   │  │  │  │ │  ││                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::longToByteArrayLE@20 (line 195)
                   │  │  │  │ │  ││                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@2 (line 176)
                   │  │  │  │ │  ││                                                ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20KBloomFilter@14 (line 70)
  0.20%    0.07%   │  │  │  │ │  ││  0x00007fb47548824c: mov    %bl,0x12(%rax)     ;*bastore
                   │  │  │  │ │  ││                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::longToByteArrayLE@29 (line 195)
                   │  │  │  │ │  ││                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@2 (line 176)
                   │  │  │  │ │  ││                                                ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20KBloomFilter@14 (line 70)
  0.33%    0.18%   │  │  │  │ │  ││  0x00007fb47548824f: mov    %r8b,0x13(%rax)    ;*bastore
                   │  │  │  │ │  ││                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::longToByteArrayLE@38 (line 195)
                   │  │  │  │ │  ││                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@2 (line 176)
                   │  │  │  │ │  ││                                                ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20KBloomFilter@14 (line 70)
  0.05%            │  │  │  │ │  ││  0x00007fb475488253: mov    %r9b,0x14(%rax)    ;*bastore
                   │  │  │  │ │  ││                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::longToByteArrayLE@47 (line 195)
                   │  │  │  │ │  ││                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@2 (line 176)
                   │  │  │  │ │  ││                                                ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20KBloomFilter@14 (line 70)
  0.53%    0.04%   │  │  │  │ │  ││  0x00007fb475488257: mov    %r10b,0x15(%rax)   ;*bastore
                   │  │  │  │ │  ││                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::longToByteArrayLE@56 (line 195)
                   │  │  │  │ │  ││                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@2 (line 176)
                   │  │  │  │ │  ││                                                ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20KBloomFilter@14 (line 70)
  0.26%    0.04%   │  │  │  │ │  ││  0x00007fb47548825b: mov    %r11b,0x16(%rax)   ;*bastore
                   │  │  │  │ │  ││                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::longToByteArrayLE@66 (line 195)
                   │  │  │  │ │  ││                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@2 (line 176)
                   │  │  │  │ │  ││                                                ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20KBloomFilter@14 (line 70)
  0.27%    0.02%   │  │  │  │ │  ││  0x00007fb47548825f: sar    $0x38,%rdi
  0.04%            │  │  │  │ │  ││  0x00007fb475488263: mov    %edi,%r10d
  0.53%    0.02%   │  │  │  │ │  ││  0x00007fb475488266: mov    %r10b,0x17(%rax)
  0.22%    0.07%   │  │  │  │ │  ││  0x00007fb47548826a: mov    %rax,%rsi          ;*synchronization entry
                   │  │  │  │ │  ││                                                ; - com.github.prasanthj.bloomfilter.Murmur3::hash64@-1 (line 118)
                   │  │  │  │ │  ││                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@1 (line 145)
                   │  │  │  │ │  ││                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                   │  │  │  │ │  ││                                                ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20KBloomFilter@14 (line 70)
  0.13%    0.02%   │  │  │  │ │  ││  0x00007fb47548826d: mov    $0x8,%edx
                   │  │  │  │ │  ││  0x00007fb475488272: xor    %ecx,%ecx
  0.33%    0.02%   │  │  │  │ │  ││  0x00007fb475488274: xchg   %ax,%ax
  0.29%    0.09%   │  │  │  │ │  ││  0x00007fb475488277: callq  0x00007fb475046160  ; OopMap{[0]=Oop [8]=NarrowOop [24]=Oop off=316}
                   │  │  │  │ │  ││                                                ;*invokestatic hash64
                   │  │  │  │ │  ││                                                ; - com.github.prasanthj.bloomfilter.Murmur3::hash64@4 (line 118)
                   │  │  │  │ │  ││                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@1 (line 145)
                   │  │  │  │ │  ││                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                   │  │  │  │ │  ││                                                ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20KBloomFilter@14 (line 70)
                   │  │  │  │ │  ││                                                ;   {static_call}
           0.04%   │  │  │  │ │  ││  0x00007fb47548827c: mov    0x8(%rsp),%r10d
  0.13%    0.27%   │  │  │  │ │  ││  0x00007fb475488281: mov    0x20(%r12,%r10,8),%ebx  ;*getfield k
                   │  │  │  │ │  ││                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@22 (line 149)
                   │  │  │  │ │  ││                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                   │  │  │  │ │  ││                                                ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20KBloomFilter@14 (line 70)
  0.73%    1.19%   │  │  │  │ │  ││  0x00007fb475488286: cmp    $0x1,%ebx
                   ╰  │  │  │ │  ││  0x00007fb475488289: jl     0x00007fb475488177  ;*if_icmpgt
                      │  │  │ │  ││                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@25 (line 149)
                      │  │  │ │  ││                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                      │  │  │ │  ││                                                ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20KBloomFilter@14 (line 70)
           0.04%      │  │  │ │  ││  0x00007fb47548828f: mov    0xc(%r12,%r10,8),%r8d  ;*getfield m
                      │  │  │ │  ││                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@52 (line 155)
                      │  │  │ │  ││                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                      │  │  │ │  ││                                                ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20KBloomFilter@14 (line 70)
  0.07%    0.18%      │  │  │ │  ││  0x00007fb475488294: mov    %rax,%r11
           0.04%      │  │  │ │  ││  0x00007fb475488297: shr    $0x20,%r11
  0.59%    1.15%      │  │  │ │  ││  0x00007fb47548829b: mov    %eax,%edi          ;*l2i  ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@6 (line 146)
                      │  │  │ │  ││                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                      │  │  │ │  ││                                                ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20KBloomFilter@14 (line 70)
  0.02%               │  │  │ │  ││  0x00007fb47548829d: mov    %r11d,%r9d         ;*l2i  ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@13 (line 147)
                      │  │  │ │  ││                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                      │  │  │ │  ││                                                ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20KBloomFilter@14 (line 70)
  0.11%    0.20%      │  │  │ │  ││  0x00007fb4754882a0: test   %r8d,%r8d
                      │  │  │ │  ││  0x00007fb4754882a3: je     0x00007fb475488501  ;*iload
                      │  │  │ │  ││                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@28 (line 150)
                      │  │  │ │  ││                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                      │  │  │ │  ││                                                ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20KBloomFilter@14 (line 70)
           0.02%      │  │  │ │  ││  0x00007fb4754882a9: mov    0x24(%r12,%r10,8),%r11d  ;*getfield bitSet
                      │  │  │ │  ││                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@59 (line 156)
                      │  │  │ │  ││                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                      │  │  │ │  ││                                                ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20KBloomFilter@14 (line 70)
  0.46%    1.25%      │  │  │ │  ││  0x00007fb4754882ae: mov    0xc(%r12,%r11,8),%ecx  ;*getfield data
                      │  │  │ │  ││                                                ; - com.github.prasanthj.bloomfilter.BloomFilter$BitSet::get@1 (line 296)
                      │  │  │ │  ││                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@65 (line 156)
                      │  │  │ │  ││                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                      │  │  │ │  ││                                                ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20KBloomFilter@14 (line 70)
                      │  │  │ │  ││                                                ; implicit exception: dispatches to 0x00007fb475488501
                      │  │  │ │  ││  0x00007fb4754882b3: vmovd  %ecx,%xmm1
  0.05%    0.22%      │  │  │ │  ││  0x00007fb4754882b7: mov    0xc(%r12,%rcx,8),%r13d  ;*laload
                      │  │  │ │  ││                                                ; - com.github.prasanthj.bloomfilter.BloomFilter$BitSet::get@9 (line 296)
                      │  │  │ │  ││                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@65 (line 156)
                      │  │  │ │  ││                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                      │  │  │ │  ││                                                ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20KBloomFilter@14 (line 70)
                      │  │  │ │  ││                                                ; implicit exception: dispatches to 0x00007fb475488501
  0.18%    0.64%      │  │  │ │  ││  0x00007fb4754882bc: cmp    $0x7ffffffe,%ebx
                      │  │  │ │  ││  0x00007fb4754882c2: jg     0x00007fb475488539  ;*iload
                      │  │  │ │  ││                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@28 (line 150)
                      │  │  │ │  ││                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                      │  │  │ │  ││                                                ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20KBloomFilter@14 (line 70)
  0.70%    1.17%      │  │  │ │  ││  0x00007fb4754882c8: vmovss 0x8(%rsp),%xmm0
           0.02%      │  │  │ │  ││  0x00007fb4754882ce: mov    %edi,%eax
  0.05%    0.15%      │  │  │ │  ││  0x00007fb4754882d0: add    %r9d,%eax          ;*iadd
                      │  │  │ │  ││                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@35 (line 150)
                      │  │  │ │  ││                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                      │  │  │ │  ││                                                ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20KBloomFilter@14 (line 70)
  0.11%    0.18%      │  │  │ │  ││  0x00007fb4754882d3: mov    %eax,%r10d
  0.59%    1.03%      │  │  │ │  ││  0x00007fb4754882d6: not    %r10d
           0.04%      │  │  │ │  ││  0x00007fb4754882d9: test   %eax,%eax
  0.15%    0.16%      │  │  │ │  ││  0x00007fb4754882db: cmovl  %r10d,%eax
  0.64%    1.34%      │  │  │ │  ││  0x00007fb4754882df: cmp    $0x80000000,%eax
                    ╭ │  │  │ │  ││  0x00007fb4754882e4: jne    0x00007fb4754882ee
                    │ │  │  │ │  ││  0x00007fb4754882e6: xor    %edx,%edx
                    │ │  │  │ │  ││  0x00007fb4754882e8: cmp    $0xffffffffffffffff,%r8d
                    │╭│  │  │ │  ││  0x00007fb4754882ec: je     0x00007fb4754882f2
  0.26%    0.49%    ↘││  │  │ │  ││  0x00007fb4754882ee: cltd   
  0.20%    0.44%     ││  │  │ │  ││  0x00007fb4754882ef: idiv   %r8d               ;*irem
                     ││  │  │ │  ││                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@55 (line 155)
                     ││  │  │ │  ││                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                     ││  │  │ │  ││                                                ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20KBloomFilter@14 (line 70)
 16.07%   19.72%     ↘│  │  │ │  ││  0x00007fb4754882f2: movslq %edx,%rcx          ;*i2l  ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@64 (line 156)
                      │  │  │ │  ││                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                      │  │  │ │  ││                                                ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20KBloomFilter@14 (line 70)
  0.79%    0.18%      │  │  │ │  ││  0x00007fb4754882f5: mov    %rcx,%r10
                      │  │  │ │  ││  0x00007fb4754882f8: shr    $0x6,%r10
  0.79%    0.05%      │  │  │ │  ││  0x00007fb4754882fc: mov    %r10d,%r11d        ;*l2i  ; - com.github.prasanthj.bloomfilter.BloomFilter$BitSet::get@8 (line 296)
                      │  │  │ │  ││                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@65 (line 156)
                      │  │  │ │  ││                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                      │  │  │ │  ││                                                ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20KBloomFilter@14 (line 70)
                      │  │  │ │  ││  0x00007fb4754882ff: cmp    %r13d,%r11d
                      │  │  │ │  ││  0x00007fb475488302: jae    0x00007fb4754884ab  ;*laload
                      │  │  │ │  ││                                                ; - com.github.prasanthj.bloomfilter.BloomFilter$BitSet::get@9 (line 296)
                      │  │  │ │  ││                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@65 (line 156)
                      │  │  │ │  ││                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                      │  │  │ │  ││                                                ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20KBloomFilter@14 (line 70)
  0.71%    0.02%      │  │  │ │  ││  0x00007fb475488308: mov    $0x1,%esi
                      │  │  │ │  ││  0x00007fb47548830d: mov    %edx,%ecx
                      │  │  │ │  ││  0x00007fb47548830f: shl    %cl,%rsi
  0.49%    0.05%      │  │  │ │  ││  0x00007fb475488312: vmovd  %xmm1,%r10d
                      │  │  │ │  ││  0x00007fb475488317: shl    $0x3,%r10
                      │  │  │ │  ││  0x00007fb47548831b: test   %rsi,0x10(%r10,%r11,8)
                      ╰  │  │ │  ││  0x00007fb475488320: je     0x00007fb475488177  ;*ifeq
                         │  │ │  ││                                                ; - com.github.prasanthj.bloomfilter.BloomFilter$BitSet::get@17 (line 296)
                         │  │ │  ││                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@65 (line 156)
                         │  │ │  ││                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                         │  │ │  ││                                                ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20KBloomFilter@14 (line 70)
  3.35%    0.18%         │  │ │  ││  0x00007fb475488326: mov    %ebx,%esi
  0.59%    0.62%         │  │ │  ││  0x00007fb475488328: inc    %esi
  0.31%    0.07%         │  │ │  ││  0x00007fb47548832a: cmp    %ebx,%esi
  0.07%                  │  │ │  ││  0x00007fb47548832c: mov    $0x80000000,%ecx
  0.37%    0.02%         │  │ │  ││  0x00007fb475488331: cmovl  %ecx,%ebx
  0.16%                  │  │ │  ││  0x00007fb475488334: mov    %r9d,%eax
                         │  │ │  ││  0x00007fb475488337: shl    %eax
  0.59%                  │  │ │  ││  0x00007fb475488339: cmp    $0x2,%ebx
                         │  │ │  ││  0x00007fb47548833c: jle    0x00007fb475488571
  0.09%                  │  │ │  ││  0x00007fb475488342: mov    $0x2,%ebp
                         │  │ │  ││  0x00007fb475488347: nopw   0x0(%rax,%rax,1)   ;*imul
                         │  │ │  ││                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@34 (line 150)
                         │  │ │  ││                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                         │  │ │  ││                                                ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20KBloomFilter@14 (line 70)
                         │  │↗│  ││  0x00007fb475488350: add    %edi,%eax          ;*iadd
                         │  │││  ││                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@35 (line 150)
                         │  │││  ││                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                         │  │││  ││                                                ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20KBloomFilter@14 (line 70)
  0.44%    0.02%         │  │││  ││  0x00007fb475488352: mov    %eax,%ecx
  0.16%                  │  │││  ││  0x00007fb475488354: not    %ecx
                         │  │││  ││  0x00007fb475488356: test   %eax,%eax
                         │  │││  ││  0x00007fb475488358: cmovl  %ecx,%eax
  0.73%    0.02%         │  │││  ││  0x00007fb47548835b: cmp    $0x80000000,%eax
                       ╭ │  │││  ││  0x00007fb475488360: jne    0x00007fb47548836a
                       │ │  │││  ││  0x00007fb475488362: xor    %edx,%edx
                       │ │  │││  ││  0x00007fb475488364: cmp    $0xffffffffffffffff,%r8d
                       │╭│  │││  ││  0x00007fb475488368: je     0x00007fb47548836e
  0.11%                ↘││  │││  ││  0x00007fb47548836a: cltd   
  0.05%                 ││  │││  ││  0x00007fb47548836b: idiv   %r8d               ;*irem
                        ││  │││  ││                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@55 (line 155)
                        ││  │││  ││                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                        ││  │││  ││                                                ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20KBloomFilter@14 (line 70)
  3.39%    0.92%        ↘│  │││  ││  0x00007fb47548836e: mov    %edx,%r14d
                         │  │││  ││  0x00007fb475488371: movslq %edx,%rcx          ;*i2l  ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@64 (line 156)
                         │  │││  ││                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                         │  │││  ││                                                ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20KBloomFilter@14 (line 70)
  0.15%                  │  │││  ││  0x00007fb475488374: mov    %rcx,%r11
  0.46%    0.22%         │  │││  ││  0x00007fb475488377: shr    $0x6,%r11
  0.18%                  │  │││  ││  0x00007fb47548837b: mov    %r11d,%r11d        ;*l2i  ; - com.github.prasanthj.bloomfilter.BloomFilter$BitSet::get@8 (line 296)
                         │  │││  ││                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@65 (line 156)
                         │  │││  ││                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                         │  │││  ││                                                ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20KBloomFilter@14 (line 70)
  0.13%                  │  │││  ││  0x00007fb47548837e: cmp    %r13d,%r11d
                         │  │││  ││  0x00007fb475488381: jae    0x00007fb4754884a6  ;*laload
                         │  │││  ││                                                ; - com.github.prasanthj.bloomfilter.BloomFilter$BitSet::get@9 (line 296)
                         │  │││  ││                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@65 (line 156)
                         │  │││  ││                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                         │  │││  ││                                                ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20KBloomFilter@14 (line 70)
  0.11%                  │  │││  ││  0x00007fb475488387: mov    $0x1,%edx
  0.40%    0.51%         │  │││  ││  0x00007fb47548838c: mov    %r14d,%ecx
                         │  │││  ││  0x00007fb47548838f: shl    %cl,%rdx
  0.07%                  │  │││  ││  0x00007fb475488392: test   %rdx,0x10(%r10,%r11,8)
                         ╰  │││  ││  0x00007fb475488397: je     0x00007fb475488177  ;*ifeq
                            │││  ││                                                ; - com.github.prasanthj.bloomfilter.BloomFilter$BitSet::get@17 (line 296)
                            │││  ││                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@65 (line 156)
                            │││  ││                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                            │││  ││                                                ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20KBloomFilter@14 (line 70)
  1.06%    1.03%            │││  ││  0x00007fb47548839d: mov    %ebp,%r14d
  0.26%    0.27%            │││  ││  0x00007fb4754883a0: inc    %r14d              ;*iinc
                            │││  ││                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@73 (line 149)
                            │││  ││                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                            │││  ││                                                ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20KBloomFilter@14 (line 70)
  0.15%    0.05%            │││  ││  0x00007fb4754883a3: mov    %r14d,%eax
  0.33%    0.71%            │││  ││  0x00007fb4754883a6: imul   %r9d,%eax
  0.16%    0.04%            │││  ││  0x00007fb4754883aa: add    %edi,%eax          ;*iadd
                            │││  ││                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@35 (line 150)
                            │││  ││                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                            │││  ││                                                ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20KBloomFilter@14 (line 70)
  0.09%                     │││  ││  0x00007fb4754883ac: mov    %eax,%r11d
                            │││  ││  0x00007fb4754883af: not    %r11d
  0.29%    0.57%            │││  ││  0x00007fb4754883b2: test   %eax,%eax
  0.05%                     │││  ││  0x00007fb4754883b4: cmovl  %r11d,%eax
  0.09%                     │││  ││  0x00007fb4754883b8: cmp    $0x80000000,%eax
                          ╭ │││  ││  0x00007fb4754883bd: jne    0x00007fb4754883c7
                          │ │││  ││  0x00007fb4754883bf: xor    %edx,%edx
                          │ │││  ││  0x00007fb4754883c1: cmp    $0xffffffffffffffff,%r8d
                          │╭│││  ││  0x00007fb4754883c5: je     0x00007fb4754883cb
  0.31%                   ↘││││  ││  0x00007fb4754883c7: cltd   
  0.05%                    ││││  ││  0x00007fb4754883c8: idiv   %r8d               ;*irem
                           ││││  ││                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@55 (line 155)
                           ││││  ││                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                           ││││  ││                                                ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20KBloomFilter@14 (line 70)
  2.05%    0.46%           ↘│││  ││  0x00007fb4754883cb: mov    %edx,%eax
  0.13%    1.03%            │││  ││  0x00007fb4754883cd: movslq %edx,%rcx          ;*i2l  ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@64 (line 156)
                            │││  ││                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                            │││  ││                                                ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20KBloomFilter@14 (line 70)
  0.05%    0.04%            │││  ││  0x00007fb4754883d0: mov    %rcx,%r11
                            │││  ││  0x00007fb4754883d3: shr    $0x6,%r11
  0.07%                     │││  ││  0x00007fb4754883d7: mov    %r11d,%r11d        ;*l2i  ; - com.github.prasanthj.bloomfilter.BloomFilter$BitSet::get@8 (line 296)
                            │││  ││                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@65 (line 156)
                            │││  ││                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                            │││  ││                                                ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20KBloomFilter@14 (line 70)
  0.38%    0.57%            │││  ││  0x00007fb4754883da: cmp    %r13d,%r11d
                            │││  ││  0x00007fb4754883dd: jae    0x00007fb4754884b1  ;*laload
                            │││  ││                                                ; - com.github.prasanthj.bloomfilter.BloomFilter$BitSet::get@9 (line 296)
                            │││  ││                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@65 (line 156)
                            │││  ││                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                            │││  ││                                                ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20KBloomFilter@14 (line 70)
  0.05%    0.04%            │││  ││  0x00007fb4754883e3: mov    $0x1,%edx
                            │││  ││  0x00007fb4754883e8: mov    %eax,%ecx
                            │││  ││  0x00007fb4754883ea: shl    %cl,%rdx
  0.46%    0.81%            │││  ││  0x00007fb4754883ed: test   %rdx,0x10(%r10,%r11,8)
                            ╰││  ││  0x00007fb4754883f2: je     0x00007fb475488177  ;*ifeq
                             ││  ││                                                ; - com.github.prasanthj.bloomfilter.BloomFilter$BitSet::get@17 (line 296)
                             ││  ││                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@65 (line 156)
                             ││  ││                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                             ││  ││                                                ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20KBloomFilter@14 (line 70)
  0.46%    0.29%             ││  ││  0x00007fb4754883f8: add    $0x2,%ebp          ;*iinc
                             ││  ││                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@73 (line 149)
                             ││  ││                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                             ││  ││                                                ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20KBloomFilter@14 (line 70)
  0.42%    0.73%             ││  ││  0x00007fb4754883fb: mov    %ebp,%eax
  0.05%    0.07%             ││  ││  0x00007fb4754883fd: imul   %r9d,%eax          ;*imul
                             ││  ││                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@34 (line 150)
                             ││  ││                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                             ││  ││                                                ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20KBloomFilter@14 (line 70)
  0.05%                      ││  ││  0x00007fb475488401: cmp    %ebx,%ebp
                             ╰│  ││  0x00007fb475488403: jl     0x00007fb475488350  ;*if_icmpgt
                              │  ││                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@25 (line 149)
                              │  ││                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                              │  ││                                                ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20KBloomFilter@14 (line 70)
  0.22%    0.13%              │  ││  0x00007fb475488409: cmp    %esi,%ebp
                              ╰  ││  0x00007fb47548840b: jge    0x00007fb475488177
  0.27%    0.49%                 ││  0x00007fb475488411: xchg   %ax,%ax            ;*imul
                                 ││                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@34 (line 150)
                                 ││                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                                 ││                                                ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20KBloomFilter@14 (line 70)
                                 ││  0x00007fb475488414: add    %edi,%eax          ;*iadd
                                 ││                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@35 (line 150)
                                 ││                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                                 ││                                                ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20KBloomFilter@14 (line 70)
  0.02%                          ││  0x00007fb475488416: mov    %eax,%ecx
  0.16%    0.16%                 ││  0x00007fb475488418: not    %ecx
  0.40%                          ││  0x00007fb47548841a: test   %eax,%eax
  0.07%                          ││  0x00007fb47548841c: cmovl  %ecx,%eax
  0.15%    0.11%                 ││  0x00007fb47548841f: cmp    $0x80000000,%eax
                               ╭ ││  0x00007fb475488424: jne    0x00007fb47548842e
                               │ ││  0x00007fb475488426: xor    %edx,%edx
                               │ ││  0x00007fb475488428: cmp    $0xffffffffffffffff,%r8d
                               │╭││  0x00007fb47548842c: je     0x00007fb475488432
  0.27%                        ↘│││  0x00007fb47548842e: cltd   
  0.02%                         │││  0x00007fb47548842f: idiv   %r8d               ;*irem
                                │││                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@55 (line 155)
                                │││                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                                │││                                                ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20KBloomFilter@14 (line 70)
  1.96%    2.27%                ↘││  0x00007fb475488432: movslq %edx,%rcx          ;*i2l  ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@64 (line 156)
                                 ││                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                                 ││                                                ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20KBloomFilter@14 (line 70)
  0.48%    0.59%                 ││  0x00007fb475488435: mov    %rcx,%r11
                                 ││  0x00007fb475488438: shr    $0x6,%r11
  0.38%    0.40%                 ││  0x00007fb47548843c: mov    %r11d,%r11d        ;*l2i  ; - com.github.prasanthj.bloomfilter.BloomFilter$BitSet::get@8 (line 296)
                                 ││                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@65 (line 156)
                                 ││                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                                 ││                                                ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20KBloomFilter@14 (line 70)
  0.46%    0.40%                 ││  0x00007fb47548843f: cmp    %r13d,%r11d
                                 ││  0x00007fb475488442: jae    0x00007fb4754884b4  ;*laload
                                 ││                                                ; - com.github.prasanthj.bloomfilter.BloomFilter$BitSet::get@9 (line 296)
                                 ││                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@65 (line 156)
                                 ││                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                                 ││                                                ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20KBloomFilter@14 (line 70)
  0.31%    0.38%                 ││  0x00007fb475488444: mov    $0x1,%ebx
                                 ││  0x00007fb475488449: mov    %edx,%ecx
                                 ││  0x00007fb47548844b: shl    %cl,%rbx
  0.48%    0.53%                 ││  0x00007fb47548844e: test   %rbx,0x10(%r10,%r11,8)
                                 ╰│  0x00007fb475488453: je     0x00007fb475488177  ;*ifeq
                                  │                                                ; - com.github.prasanthj.bloomfilter.BloomFilter$BitSet::get@17 (line 296)
                                  │                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@65 (line 156)
                                  │                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                                  │                                                ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20KBloomFilter@14 (line 70)
  1.57%    2.01%                  │  0x00007fb475488459: inc    %ebp               ;*iinc
                                  │                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@73 (line 149)
                                  │                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                                  │                                                ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20KBloomFilter@14 (line 70)
  0.15%                           │  0x00007fb47548845b: cmp    %esi,%ebp
                                  ╰  0x00007fb47548845d: jge    0x00007fb475488177  ;*if_icmpgt
                                                                                   ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@25 (line 149)
                                                                                   ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                                                                                   ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20KBloomFilter@14 (line 70)
                                     0x00007fb475488463: mov    %ebp,%eax
                                     0x00007fb475488465: imul   %r9d,%eax          ;*imul
                                                                                   ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@34 (line 150)
....................................................................................................
 69.53%   56.13%  <total for region 1>

....[Hottest Region 2]..............................................................................
C2, level 4, com.github.prasanthj.bloomfilter.Murmur3::hash64, version 583 (290 bytes) 

                     Decoding compiled method 0x00007fb475490110:
                     Code:
                     [Entry Point]
                     [Verified Entry Point]
                     [Constants]
                       # {method} {0x00007fb46e1fca98} &apos;hash64&apos; &apos;([BII)J&apos; in &apos;com/github/prasanthj/bloomfilter/Murmur3&apos;
                       # parm0:    rsi:rsi   = &apos;[B&apos;
                       # parm1:    rdx       = int
                       # parm2:    rcx       = int
                       #           [sp+0x50]  (sp of caller)
  0.33%    0.02%       0x00007fb4754902a0: mov    %eax,-0x14000(%rsp)
  0.66%    1.12%       0x00007fb4754902a7: push   %rbp
  0.20%    0.42%       0x00007fb4754902a8: sub    $0x40,%rsp         ;*synchronization entry
                                                                     ; - com.github.prasanthj.bloomfilter.Murmur3::hash64@-1 (line 130)
  0.48%    0.81%       0x00007fb4754902ac: mov    %edx,0x8(%rsp)
  0.18%    0.11%       0x00007fb4754902b0: mov    %edx,%ebx
  0.35%    0.46%       0x00007fb4754902b2: sar    $0x3,%ebx          ;*ishr
                                                                     ; - com.github.prasanthj.bloomfilter.Murmur3::hash64@5 (line 131)
                       0x00007fb4754902b5: movslq %ecx,%r14          ;*i2l  ; - com.github.prasanthj.bloomfilter.Murmur3::hash64@1 (line 130)
  0.33%    0.73%       0x00007fb4754902b8: mov    $0x87c37b91114253d5,%rdi
  0.16%    0.11%       0x00007fb4754902c2: test   %ebx,%ebx
                  ╭    0x00007fb4754902c4: jle    0x00007fb4754903ac  ;*if_icmpge
                  │                                                  ; - com.github.prasanthj.bloomfilter.Murmur3::hash64@15 (line 134)
  0.11%    0.46%  │    0x00007fb4754902ca: mov    0xc(%rsi),%r10d    ;*baload
                  │                                                  ; - com.github.prasanthj.bloomfilter.Murmur3::hash64@27 (line 136)
                  │                                                  ; implicit exception: dispatches to 0x00007fb475490711
  0.02%           │    0x00007fb4754902ce: xor    %r9d,%r9d
  0.37%    0.99%  │    0x00007fb4754902d1: xor    %r8d,%r8d
  0.07%    0.04%  │    0x00007fb4754902d4: nopl   0x0(%rax,%rax,1)
  0.24%    0.55%  │    0x00007fb4754902dc: xchg   %ax,%ax            ;*iload
                  │                                                  ; - com.github.prasanthj.bloomfilter.Murmur3::hash64@18 (line 135)
           0.02%  │ ↗  0x00007fb4754902e0: cmp    %r10d,%r9d
                  │ │  0x00007fb4754902e3: jae    0x00007fb47549055e  ;*baload
                  │ │                                                ; - com.github.prasanthj.bloomfilter.Murmur3::hash64@27 (line 136)
  0.31%    0.70%  │ │  0x00007fb4754902e9: movzbq 0x10(%rsi,%r9,1),%rcx  ;*land
                  │ │                                                ; - com.github.prasanthj.bloomfilter.Murmur3::hash64@32 (line 136)
  0.20%    0.07%  │ │  0x00007fb4754902ef: mov    %r9d,%r11d
  0.13%    0.44%  │ │  0x00007fb4754902f2: add    $0x7,%r11d
  0.02%           │ │  0x00007fb4754902f6: cmp    %r10d,%r11d
                  │ │  0x00007fb4754902f9: jae    0x00007fb475490591  ;*baload
                  │ │                                                ; - com.github.prasanthj.bloomfilter.Murmur3::hash64@38 (line 136)
  0.38%    0.84%  │ │  0x00007fb4754902ff: mov    %rcx,(%rsp)
  0.15%    0.20%  │ │  0x00007fb475490303: movslq %r9d,%r11          ;*baload
                  │ │                                                ; - com.github.prasanthj.bloomfilter.Murmur3::hash64@130 (line 136)
  0.22%    0.33%  │ │  0x00007fb475490306: movzbq 0x11(%rsi,%r11,1),%r9
  0.04%           │ │  0x00007fb47549030c: movzbq 0x17(%rsi,%r11,1),%rcx
  0.55%    0.68%  │ │  0x00007fb475490312: movzbq 0x12(%rsi,%r11,1),%rdx
  0.27%    0.09%  │ │  0x00007fb475490318: movzbq 0x13(%rsi,%r11,1),%rax
  0.18%    0.49%  │ │  0x00007fb47549031e: movzbq 0x14(%rsi,%r11,1),%rbp
           0.04%  │ │  0x00007fb475490324: movzbq 0x15(%rsi,%r11,1),%r13
  0.38%    0.66%  │ │  0x00007fb47549032a: movzbq 0x16(%rsi,%r11,1),%r11
  0.20%    0.38%  │ │  0x00007fb475490330: shl    $0x8,%r9
  0.22%    0.26%  │ │  0x00007fb475490334: or     (%rsp),%r9
  0.02%    0.02%  │ │  0x00007fb475490338: shl    $0x30,%r11
  0.37%    0.68%  │ │  0x00007fb47549033c: shl    $0x28,%r13
  0.22%    0.27%  │ │  0x00007fb475490340: shl    $0x20,%rbp
  0.26%    0.33%  │ │  0x00007fb475490344: shl    $0x18,%rax
  0.02%    0.04%  │ │  0x00007fb475490348: shl    $0x10,%rdx
  0.31%    0.48%  │ │  0x00007fb47549034c: or     %rdx,%r9
  0.15%    0.20%  │ │  0x00007fb47549034f: or     %rax,%r9
  0.15%    0.40%  │ │  0x00007fb475490352: or     %rbp,%r9
  0.07%           │ │  0x00007fb475490355: or     %r13,%r9
  0.55%    0.81%  │ │  0x00007fb475490358: or     %r11,%r9
  0.20%    0.26%  │ │  0x00007fb47549035b: shl    $0x38,%rcx
  0.24%    0.24%  │ │  0x00007fb47549035f: or     %rcx,%r9
           0.02%  │ │  0x00007fb475490362: imul   %rdi,%r9           ;*lmul
                  │ │                                                ; - com.github.prasanthj.bloomfilter.Murmur3::hash64@147 (line 146)
  0.44%    0.75%  │ │  0x00007fb475490366: rol    $0x1f,%r9
  0.16%    0.38%  │ │  0x00007fb47549036a: mov    $0x4cf5ad432745937f,%r11
  0.22%    0.46%  │ │  0x00007fb475490374: imul   %r11,%r9
  0.60%    0.81%  │ │  0x00007fb475490378: xor    %r14,%r9           ;*lxor
                  │ │                                                ; - com.github.prasanthj.bloomfilter.Murmur3::hash64@170 (line 149)
  0.48%    0.82%  │ │  0x00007fb47549037b: rol    $0x1b,%r9          ;*lor  ; - java.lang.Long::rotateLeft@7 (line 1500)
                  │ │                                                ; - com.github.prasanthj.bloomfilter.Murmur3::hash64@175 (line 150)
  0.20%    0.22%  │ │  0x00007fb47549037f: mov    %r9,%r14
  0.16%    0.35%  │ │  0x00007fb475490382: shl    $0x2,%r14
  0.18%    0.40%  │ │  0x00007fb475490386: add    %r9,%r14
  0.48%    1.08%  │ │  0x00007fb475490389: add    $0x52dce729,%r14   ;*ladd
                  │ │                                                ; - com.github.prasanthj.bloomfilter.Murmur3::hash64@185 (line 150)
  0.27%    0.35%  │ │  0x00007fb475490390: mov    %r8d,%ecx
  0.26%    0.44%  │ │  0x00007fb475490393: inc    %ecx               ;*iinc
                  │ │                                                ; - com.github.prasanthj.bloomfilter.Murmur3::hash64@187 (line 134)
                  │ │  0x00007fb475490395: cmp    %ebx,%ecx
                  │╭│  0x00007fb475490397: jge    0x00007fb4754903ac  ;*if_icmpge
                  │││                                                ; - com.github.prasanthj.bloomfilter.Murmur3::hash64@15 (line 134)
                  │││  0x00007fb475490399: shl    $0x3,%r8d
                  │││  0x00007fb47549039d: mov    %r8d,%r9d
                  │││  0x00007fb4754903a0: add    $0x8,%r9d          ;*ishl
                  │││                                                ; - com.github.prasanthj.bloomfilter.Murmur3::hash64@21 (line 135)
                  │││  0x00007fb4754903a4: mov    %ecx,%r8d
                  ││╰  0x00007fb4754903a7: jmpq   0x00007fb4754902e0  ;*if_icmpge
                  ││                                                 ; - com.github.prasanthj.bloomfilter.Murmur3::hash64@15 (line 134)
  0.24%    0.53%  ↘↘   0x00007fb4754903ac: mov    0x8(%rsp),%r8d
  0.24%    0.46%       0x00007fb4754903b1: and    $0xfffffffffffffff8,%r8d  ;*ishl
                                                                     ; - com.github.prasanthj.bloomfilter.Murmur3::hash64@199 (line 155)
  0.27%    0.49%       0x00007fb4754903b5: mov    0x8(%rsp),%r10d
                       0x00007fb4754903ba: sub    %r8d,%r10d         ;*isub
                                                                     ; - com.github.prasanthj.bloomfilter.Murmur3::hash64@205 (line 156)
  0.31%    0.79%       0x00007fb4754903bd: movslq %r8d,%r9           ;*baload
                                                                     ; - com.github.prasanthj.bloomfilter.Murmur3::hash64@351 (line 168)
  0.13%    0.24%       0x00007fb4754903c0: xor    %ecx,%ecx
  0.27%    0.20%       0x00007fb4754903c2: cmp    $0x4,%r10d
                       0x00007fb4754903c6: je     0x00007fb47549046d
                       0x00007fb4754903cc: cmp    $0x4,%r10d
                       0x00007fb4754903d0: jle    0x00007fb4754903ed
                       0x00007fb4754903d2: cmp    $0x7,%r10d
                       0x00007fb4754903d6: je     0x00007fb475490410
                       0x00007fb4754903d8: cmp    $0x7,%r10d
                       0x00007fb4754903dc: jg     0x00007fb475490510
                       0x00007fb4754903e2: cmp    $0x6,%r10d
                       0x00007fb4754903e6: je     0x00007fb47549042d
                       0x00007fb4754903e8: xor    %r11d,%r11d
....................................................................................................
 14.23%   23.51%  <total for region 2>

....[Hottest Regions]...............................................................................
 69.53%   56.13%         C2, level 4  com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20KBloomFilter, version 594 (740 bytes) 
 14.23%   23.51%         C2, level 4  com.github.prasanthj.bloomfilter.Murmur3::hash64, version 583 (290 bytes) 
  5.58%    9.69%         C2, level 4  com.github.prasanthj.bloomfilter.Murmur3::hash64, version 583 (77 bytes) 
  3.13%    3.11%   [kernel.kallsyms]  native_write_msr_safe (0 bytes) 
  0.68%    1.03%         C2, level 4  com.github.prasanthj.bloomfilter.Murmur3::hash64, version 583 (30 bytes) 
  0.26%    0.22%           libjvm.so  [unknown] (153 bytes) 
  0.20%    0.02%   [kernel.kallsyms]  system_call (38 bytes) 
  0.18%    0.04%           libjvm.so  [unknown] (98 bytes) 
  0.16%            [kernel.kallsyms]  page_fault (0 bytes) 
  0.15%    0.04%   [kernel.kallsyms]  mutex_lock (0 bytes) 
  0.13%    0.02%   [kernel.kallsyms]  mutex_unlock (0 bytes) 
  0.11%    0.15%   [kernel.kallsyms]  __srcu_read_lock (54 bytes) 
  0.11%    0.04%   [kernel.kallsyms]  change_protection_range (13 bytes) 
  0.11%                    libjvm.so  [unknown] (0 bytes) 
  0.09%    0.05%   [kernel.kallsyms]  __srcu_read_unlock (12 bytes) 
  0.09%    0.05%   [kernel.kallsyms]  avc_has_perm_flags (33 bytes) 
  0.09%    0.05%   [kernel.kallsyms]  _raw_spin_lock_irqsave (25 bytes) 
  0.09%    0.02%           libjvm.so  [unknown] (9 bytes) 
  0.07%    0.09%   [kernel.kallsyms]  do_sync_write (75 bytes) 
  0.07%    0.11%           libjvm.so  [unknown] (44 bytes) 
  4.91%    5.64%  <...other 360 warm regions...>
....................................................................................................
 99.98%  100.00%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 69.53%   56.13%         C2, level 4  com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20KBloomFilter, version 594 
 20.49%   34.22%         C2, level 4  com.github.prasanthj.bloomfilter.Murmur3::hash64, version 583 
  3.13%    3.11%   [kernel.kallsyms]  native_write_msr_safe 
  2.23%    2.60%           libjvm.so  [unknown] 
  0.20%    0.02%   [kernel.kallsyms]  system_call 
  0.16%            [kernel.kallsyms]  page_fault 
  0.15%    0.04%   [kernel.kallsyms]  mutex_lock 
  0.13%    0.02%   [kernel.kallsyms]  mutex_unlock 
  0.13%    0.24%        libc-2.17.so  vfprintf 
  0.11%    0.04%   [kernel.kallsyms]  change_protection_range 
  0.11%    0.15%   [kernel.kallsyms]  __srcu_read_lock 
  0.09%    0.07%   [kernel.kallsyms]  avc_has_perm_flags 
  0.09%    0.05%   [kernel.kallsyms]  __srcu_read_unlock 
  0.09%    0.05%   [kernel.kallsyms]  _raw_spin_lock_irqsave 
  0.07%    0.07%   [kernel.kallsyms]  selinux_file_permission 
  0.07%    0.13%      hsdis-amd64.so  print_insn 
  0.07%    0.13%        libc-2.17.so  _IO_fwrite 
  0.07%    0.09%   [kernel.kallsyms]  do_sync_write 
  0.07%    0.04%   [kernel.kallsyms]  pipe_write 
  0.05%    0.04%  libpthread-2.17.so  __pthread_enable_asynccancel 
  2.91%    1.65%  <...other 107 warm methods...>
....................................................................................................
 99.98%   98.88%  <totals>

....[Distribution by Source]........................................................................
 90.02%   90.35%         C2, level 4
  6.28%    5.51%   [kernel.kallsyms]
  2.25%    2.60%           libjvm.so
  0.64%    0.97%        libc-2.17.so
  0.22%    0.20%  libpthread-2.17.so
  0.18%    0.09%              [ext4]
  0.15%    0.16%      hsdis-amd64.so
  0.13%    0.05%              [jbd2]
  0.05%                  C1, level 3
  0.04%    0.05%         interpreter
  0.02%             Unknown, level 0
....................................................................................................
 99.98%  100.00%  <totals>



# JMH version: 1.19
# VM version: JDK 1.8.0_131, VM 25.131-b12
# VM invoker: /usr/lib/jvm/java-1.8.0-openjdk-1.8.0.131-3.b12.el7_3.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe.testProbe20KBloomFilter
# Parameters: (size = 10000000)

# Run progress: 50.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 139.293 ns/op
# Warmup Iteration   2: 119.805 ns/op
# Warmup Iteration   3: 95.731 ns/op
# Warmup Iteration   4: 97.776 ns/op
# Warmup Iteration   5: 101.780 ns/op
Iteration   1: 96.214 ns/op
Iteration   2: 87.903 ns/op
Iteration   3: 101.314 ns/op
Iteration   4: 112.415 ns/op
Iteration   5: 111.991 ns/op
# Processing profiler results: LinuxPerfAsmProfiler 


Result "com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe.testProbe20KBloomFilter":
  101.967 ±(99.9%) 40.430 ns/op [Average]
  (min, avg, max) = (87.903, 101.967, 112.415), stdev = 10.500
  CI (99.9%): [61.537, 142.398] (assumes normal distribution)

Secondary result "com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe.testProbe20KBloomFilter:·asm":
PrintAssembly processed: 188942 total address lines.
Perf output processed (skipped 12.795 seconds):
 Column 1: cycles (5566 events)
 Column 2: instructions (5549 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
C2, level 4, com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20KBloomFilter, version 595 (737 bytes) 

                                 0x00007fe4ed48f620: mov    %eax,-0x14000(%rsp)
                                 0x00007fe4ed48f627: push   %rbp
                                 0x00007fe4ed48f628: sub    $0x40,%rsp         ;*synchronization entry
                                                                               ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20KBloomFilter@-1 (line 69)
                                 0x00007fe4ed48f62c: mov    %rsi,(%rsp)
                                 0x00007fe4ed48f630: mov    $0x4e20,%ebp
                  ╭              0x00007fe4ed48f635: jmp    0x00007fe4ed48f646  ;*iconst_1
                  │                                                            ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@79 (line 160)
                  │                                                            ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                  │                                                            ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20KBloomFilter@14 (line 70)
  0.02%    0.09%  │↗       ↗  ↗  0x00007fe4ed48f637: mov    0xc(%rsp),%ebp
  0.04%    0.04%  ││       │  │  0x00007fe4ed48f63b: dec    %ebp               ;*iinc
                  ││       │  │                                                ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20KBloomFilter@18 (line 69)
  0.27%    0.23%  ││       │  │  0x00007fe4ed48f63d: cmp    $0xffffffffffffffff,%ebp
  0.18%    0.02%  ││       │  │  0x00007fe4ed48f640: jle    0x00007fe4ed48f959  ;*aload_0
                  ││       │  │                                                ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20KBloomFilter@8 (line 70)
  0.05%    0.05%  ↘│       │  │  0x00007fe4ed48f646: mov    (%rsp),%r8
           0.02%   │       │  │  0x00007fe4ed48f64a: mov    0x10(%r8),%r11d    ;*getfield bf
                   │       │  │                                                ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20KBloomFilter@9 (line 70)
  0.45%    0.25%   │       │  │  0x00007fe4ed48f64e: movslq %ebp,%rcx          ;*i2l  ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20KBloomFilter@13 (line 70)
  0.20%    0.02%   │       │  │  0x00007fe4ed48f651: test   %r11d,%r11d
                   │       │  │  0x00007fe4ed48f654: je     0x00007fe4ed48fa01  ;*invokevirtual testLong
                   │       │  │                                                ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20KBloomFilter@14 (line 70)
  0.02%            │       │  │  0x00007fe4ed48f65a: mov    0x60(%r15),%rsi
                   │       │  │  0x00007fe4ed48f65e: mov    %rsi,%r10
  0.22%    0.27%   │       │  │  0x00007fe4ed48f661: add    $0x18,%r10
  0.14%            │       │  │  0x00007fe4ed48f665: lea    (%r12,%r11,8),%r9  ;*getfield bf
                   │       │  │                                                ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20KBloomFilter@9 (line 70)
  0.04%    0.05%   │       │  │  0x00007fe4ed48f669: cmp    0x70(%r15),%r10
                   │       │  │  0x00007fe4ed48f66d: jae    0x00007fe4ed48f928
  0.02%            │       │  │  0x00007fe4ed48f673: mov    %r10,0x60(%r15)
  0.29%    0.23%   │       │  │  0x00007fe4ed48f677: prefetchnta 0xc0(%r10)
  1.10%    0.29%   │       │  │  0x00007fe4ed48f67f: movq   $0x1,(%rsi)
  0.05%    0.11%   │       │  │  0x00007fe4ed48f686: prefetchnta 0x100(%r10)
  0.90%    0.13%   │       │  │  0x00007fe4ed48f68e: movl   $0x768,0x8(%rsi)   ;   {metadata({type array byte})}
  0.36%    0.27%   │       │  │  0x00007fe4ed48f695: prefetchnta 0x140(%r10)
  1.49%    0.16%   │       │  │  0x00007fe4ed48f69d: movl   $0x8,0xc(%rsi)
  0.04%    0.09%   │       │  │  0x00007fe4ed48f6a4: prefetchnta 0x180(%r10)
  1.71%    0.07%   │       │  │  0x00007fe4ed48f6ac: movl   $0x0,0x10(%rsi)
  0.38%    0.09%   │       │  │  0x00007fe4ed48f6b3: movl   $0x0,0x14(%rsi)
  0.29%    0.09%   │       │  │  0x00007fe4ed48f6ba: mov    %r11d,0x8(%rsp)
  0.04%    0.07%   │       │  │  0x00007fe4ed48f6bf: mov    %r9,0x18(%rsp)     ;*newarray
                   │       │  │                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::longToByteArrayLE@2 (line 195)
                   │       │  │                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@2 (line 176)
                   │       │  │                                                ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20KBloomFilter@14 (line 70)
  0.05%    0.09%   │       │  │  0x00007fe4ed48f6c4: mov    %bpl,0x10(%rsi)    ;*bastore
                   │       │  │                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::longToByteArrayLE@11 (line 195)
                   │       │  │                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@2 (line 176)
                   │       │  │                                                ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20KBloomFilter@14 (line 70)
  0.36%    0.25%   │       │  │  0x00007fe4ed48f6c8: mov    %ebp,0xc(%rsp)
  0.11%    0.31%   │       │  │  0x00007fe4ed48f6cc: mov    %rcx,%r10
  0.02%    0.11%   │       │  │  0x00007fe4ed48f6cf: sar    $0x30,%r10
  0.04%    0.05%   │       │  │  0x00007fe4ed48f6d3: mov    %rcx,%r8
  0.22%    0.13%   │       │  │  0x00007fe4ed48f6d6: sar    $0x28,%r8
  0.18%    0.40%   │       │  │  0x00007fe4ed48f6da: mov    %r10d,%r11d
  0.02%    0.09%   │       │  │  0x00007fe4ed48f6dd: mov    %r8d,%r10d
  0.04%    0.02%   │       │  │  0x00007fe4ed48f6e0: mov    %rcx,%r8
  0.18%    0.14%   │       │  │  0x00007fe4ed48f6e3: sar    $0x20,%r8
  0.05%    0.23%   │       │  │  0x00007fe4ed48f6e7: mov    %rcx,%rdx
  0.04%    0.11%   │       │  │  0x00007fe4ed48f6ea: sar    $0x18,%rcx
  0.05%    0.07%   │       │  │  0x00007fe4ed48f6ee: mov    %r8d,%r9d
  0.32%    0.05%   │       │  │  0x00007fe4ed48f6f1: mov    %ecx,%r8d
  0.16%    0.14%   │       │  │  0x00007fe4ed48f6f4: mov    %rdx,%rcx
  0.05%    0.04%   │       │  │  0x00007fe4ed48f6f7: sar    $0x10,%rcx
  0.05%            │       │  │  0x00007fe4ed48f6fb: mov    %rdx,%rdi
  0.36%    0.07%   │       │  │  0x00007fe4ed48f6fe: sar    $0x8,%rdi
  0.11%            │       │  │  0x00007fe4ed48f702: mov    %ecx,%ebx
  0.07%            │       │  │  0x00007fe4ed48f704: mov    %edi,%ecx
  0.09%            │       │  │  0x00007fe4ed48f706: mov    %cl,0x11(%rsi)     ;*bastore
                   │       │  │                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::longToByteArrayLE@20 (line 195)
                   │       │  │                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@2 (line 176)
                   │       │  │                                                ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20KBloomFilter@14 (line 70)
  0.31%    0.05%   │       │  │  0x00007fe4ed48f709: mov    %bl,0x12(%rsi)     ;*bastore
                   │       │  │                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::longToByteArrayLE@29 (line 195)
                   │       │  │                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@2 (line 176)
                   │       │  │                                                ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20KBloomFilter@14 (line 70)
  0.13%    0.02%   │       │  │  0x00007fe4ed48f70c: mov    %r8b,0x13(%rsi)    ;*bastore
                   │       │  │                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::longToByteArrayLE@38 (line 195)
                   │       │  │                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@2 (line 176)
                   │       │  │                                                ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20KBloomFilter@14 (line 70)
  0.09%    0.13%   │       │  │  0x00007fe4ed48f710: mov    %r9b,0x14(%rsi)    ;*bastore
                   │       │  │                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::longToByteArrayLE@47 (line 195)
                   │       │  │                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@2 (line 176)
                   │       │  │                                                ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20KBloomFilter@14 (line 70)
  0.09%            │       │  │  0x00007fe4ed48f714: mov    %r10b,0x15(%rsi)   ;*bastore
                   │       │  │                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::longToByteArrayLE@56 (line 195)
                   │       │  │                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@2 (line 176)
                   │       │  │                                                ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20KBloomFilter@14 (line 70)
  0.07%    0.05%   │       │  │  0x00007fe4ed48f718: mov    %r11b,0x16(%rsi)   ;*bastore
                   │       │  │                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::longToByteArrayLE@66 (line 195)
                   │       │  │                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@2 (line 176)
                   │       │  │                                                ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20KBloomFilter@14 (line 70)
  0.18%    0.34%   │       │  │  0x00007fe4ed48f71c: sar    $0x38,%rdx
  0.05%    0.14%   │       │  │  0x00007fe4ed48f720: mov    %edx,%r11d
  0.04%    0.07%   │       │  │  0x00007fe4ed48f723: mov    %r11b,0x17(%rsi)   ;*synchronization entry
                   │       │  │                                                ; - com.github.prasanthj.bloomfilter.Murmur3::hash64@-1 (line 118)
                   │       │  │                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@1 (line 145)
                   │       │  │                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                   │       │  │                                                ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20KBloomFilter@14 (line 70)
  0.32%    0.09%   │       │  │  0x00007fe4ed48f727: mov    $0x8,%edx
  0.14%    0.41%   │       │  │  0x00007fe4ed48f72c: xor    %ecx,%ecx
  0.02%    0.13%   │       │  │  0x00007fe4ed48f72e: nop    
  0.04%    0.05%   │       │  │  0x00007fe4ed48f72f: callq  0x00007fe4ed046160  ; OopMap{[0]=Oop [8]=NarrowOop [24]=Oop off=308}
                   │       │  │                                                ;*invokestatic hash64
                   │       │  │                                                ; - com.github.prasanthj.bloomfilter.Murmur3::hash64@4 (line 118)
                   │       │  │                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@1 (line 145)
                   │       │  │                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                   │       │  │                                                ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20KBloomFilter@14 (line 70)
                   │       │  │                                                ;   {static_call}
                   │       │  │  0x00007fe4ed48f734: mov    0x8(%rsp),%r11d
  0.40%    1.39%   │       │  │  0x00007fe4ed48f739: mov    0x20(%r12,%r11,8),%esi  ;*getfield k
                   │       │  │                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@22 (line 149)
                   │       │  │                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                   │       │  │                                                ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20KBloomFilter@14 (line 70)
  0.02%            │       │  │  0x00007fe4ed48f73e: cmp    $0x1,%esi
                   ╰       │  │  0x00007fe4ed48f741: jl     0x00007fe4ed48f637  ;*if_icmpgt
                           │  │                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@25 (line 149)
                           │  │                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                           │  │                                                ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20KBloomFilter@14 (line 70)
                           │  │  0x00007fe4ed48f747: mov    0xc(%r12,%r11,8),%r10d  ;*getfield m
                           │  │                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@52 (line 155)
                           │  │                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                           │  │                                                ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20KBloomFilter@14 (line 70)
  0.40%    1.23%           │  │  0x00007fe4ed48f74c: mov    %rax,%r8
                           │  │  0x00007fe4ed48f74f: shr    $0x20,%r8
           0.02%           │  │  0x00007fe4ed48f753: mov    %eax,%ebx          ;*l2i  ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@6 (line 146)
                           │  │                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                           │  │                                                ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20KBloomFilter@14 (line 70)
                           │  │  0x00007fe4ed48f755: mov    %r8d,%r9d          ;*l2i  ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@13 (line 147)
                           │  │                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                           │  │                                                ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20KBloomFilter@14 (line 70)
  0.54%    1.32%           │  │  0x00007fe4ed48f758: test   %r10d,%r10d
                           │  │  0x00007fe4ed48f75b: je     0x00007fe4ed48fa15  ;*iload
                           │  │                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@28 (line 150)
                           │  │                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                           │  │                                                ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20KBloomFilter@14 (line 70)
                           │  │  0x00007fe4ed48f761: mov    0x24(%r12,%r11,8),%ecx  ;*getfield bitSet
                           │  │                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@59 (line 156)
                           │  │                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                           │  │                                                ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20KBloomFilter@14 (line 70)
                           │  │  0x00007fe4ed48f766: mov    0xc(%r12,%rcx,8),%r14d  ;*getfield data
                           │  │                                                ; - com.github.prasanthj.bloomfilter.BloomFilter$BitSet::get@1 (line 296)
                           │  │                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@65 (line 156)
                           │  │                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                           │  │                                                ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20KBloomFilter@14 (line 70)
                           │  │                                                ; implicit exception: dispatches to 0x00007fe4ed48fa15
                           │  │  0x00007fe4ed48f76b: mov    0xc(%r12,%r14,8),%r8d  ;*laload
                           │  │                                                ; - com.github.prasanthj.bloomfilter.BloomFilter$BitSet::get@9 (line 296)
                           │  │                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@65 (line 156)
                           │  │                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                           │  │                                                ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20KBloomFilter@14 (line 70)
                           │  │                                                ; implicit exception: dispatches to 0x00007fe4ed48fa15
  0.36%    1.19%           │  │  0x00007fe4ed48f770: cmp    $0x7ffffffe,%esi
                           │  │  0x00007fe4ed48f776: jg     0x00007fe4ed48fa55  ;*iload
                           │  │                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@28 (line 150)
                           │  │                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                           │  │                                                ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20KBloomFilter@14 (line 70)
                           │  │  0x00007fe4ed48f77c: vmovss 0x8(%rsp),%xmm1
                           │  │  0x00007fe4ed48f782: mov    %ebx,%eax
                           │  │  0x00007fe4ed48f784: add    %r9d,%eax          ;*iadd
                           │  │                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@35 (line 150)
                           │  │                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                           │  │                                                ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20KBloomFilter@14 (line 70)
  0.32%    1.17%           │  │  0x00007fe4ed48f787: mov    %eax,%ecx
                           │  │  0x00007fe4ed48f789: not    %ecx
                           │  │  0x00007fe4ed48f78b: test   %eax,%eax
                           │  │  0x00007fe4ed48f78d: cmovl  %ecx,%eax
  0.47%    1.14%           │  │  0x00007fe4ed48f790: cmp    $0x80000000,%eax
                    ╭      │  │  0x00007fe4ed48f795: jne    0x00007fe4ed48f79f
                    │      │  │  0x00007fe4ed48f797: xor    %edx,%edx
                    │      │  │  0x00007fe4ed48f799: cmp    $0xffffffffffffffff,%r10d
                    │╭     │  │  0x00007fe4ed48f79d: je     0x00007fe4ed48f7a3
                    ↘│     │  │  0x00007fe4ed48f79f: cltd   
                     │     │  │  0x00007fe4ed48f7a0: idiv   %r10d              ;*irem
                     │     │  │                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@55 (line 155)
                     │     │  │                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                     │     │  │                                                ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20KBloomFilter@14 (line 70)
  3.14%    8.22%     ↘     │  │  0x00007fe4ed48f7a3: mov    %edx,%r11d
                           │  │  0x00007fe4ed48f7a6: movslq %edx,%rcx          ;*i2l  ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@64 (line 156)
                           │  │                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                           │  │                                                ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20KBloomFilter@14 (line 70)
  0.29%    0.67%           │  │  0x00007fe4ed48f7a9: mov    %rcx,%rdi
  0.25%    0.74%           │  │  0x00007fe4ed48f7ac: shr    $0x6,%rdi
  0.20%    0.61%           │  │  0x00007fe4ed48f7b0: mov    %edi,%eax          ;*l2i  ; - com.github.prasanthj.bloomfilter.BloomFilter$BitSet::get@8 (line 296)
                           │  │                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@65 (line 156)
                           │  │                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                           │  │                                                ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20KBloomFilter@14 (line 70)
                           │  │  0x00007fe4ed48f7b2: cmp    %r8d,%eax
                           │  │  0x00007fe4ed48f7b5: jae    0x00007fe4ed48fa95  ;*laload
                           │  │                                                ; - com.github.prasanthj.bloomfilter.BloomFilter$BitSet::get@9 (line 296)
                           │  │                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@65 (line 156)
                           │  │                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                           │  │                                                ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20KBloomFilter@14 (line 70)
  0.32%    0.54%           │  │  0x00007fe4ed48f7bb: mov    $0x1,%edx
  0.16%    0.31%           │  │  0x00007fe4ed48f7c0: mov    %r11d,%ecx
           0.02%           │  │  0x00007fe4ed48f7c3: shl    %cl,%rdx
  0.27%    0.38%           │  │  0x00007fe4ed48f7c6: lea    (%r12,%r14,8),%r13
  0.16%    0.43%           │  │  0x00007fe4ed48f7ca: and    0x10(%r13,%rax,8),%rdx  ;*land
                           │  │                                                ; - com.github.prasanthj.bloomfilter.BloomFilter$BitSet::get@14 (line 296)
                           │  │                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@65 (line 156)
                           │  │                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                           │  │                                                ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20KBloomFilter@14 (line 70)
 22.66%   10.81%           │  │  0x00007fe4ed48f7cf: test   %rdx,%rdx
                           │  │  0x00007fe4ed48f7d2: je     0x00007fe4ed48faaa  ;*ifeq
                           │  │                                                ; - com.github.prasanthj.bloomfilter.BloomFilter$BitSet::get@17 (line 296)
                           │  │                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@65 (line 156)
                           │  │                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                           │  │                                                ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20KBloomFilter@14 (line 70)
  0.54%    0.02%           │  │  0x00007fe4ed48f7d8: mov    %r9d,%eax
           0.02%           │  │  0x00007fe4ed48f7db: shl    %eax
                           │  │  0x00007fe4ed48f7dd: mov    %esi,%ebp
                           │  │  0x00007fe4ed48f7df: inc    %ebp
  0.43%    0.02%           │  │  0x00007fe4ed48f7e1: cmp    %esi,%ebp
                           │  │  0x00007fe4ed48f7e3: mov    $0x80000000,%r11d
                           │  │  0x00007fe4ed48f7e9: cmovl  %r11d,%esi
  0.38%    0.05%           │  │  0x00007fe4ed48f7ed: cmp    $0x2,%esi
                           │  │  0x00007fe4ed48f7f0: jle    0x00007fe4ed48faa0
                           │  │  0x00007fe4ed48f7f6: mov    $0x2,%edi
                           │  │  0x00007fe4ed48f7fb: nopl   0x0(%rax,%rax,1)   ;*imul
                           │  │                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@34 (line 150)
                           │  │                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                           │  │                                                ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20KBloomFilter@14 (line 70)
                          ↗│  │  0x00007fe4ed48f800: add    %ebx,%eax          ;*iadd
                          ││  │                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@35 (line 150)
                          ││  │                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                          ││  │                                                ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20KBloomFilter@14 (line 70)
  0.59%    0.02%          ││  │  0x00007fe4ed48f802: mov    %eax,%r11d
           0.02%          ││  │  0x00007fe4ed48f805: not    %r11d
                          ││  │  0x00007fe4ed48f808: test   %eax,%eax
                          ││  │  0x00007fe4ed48f80a: cmovl  %r11d,%eax
  0.40%                   ││  │  0x00007fe4ed48f80e: cmp    $0x80000000,%eax
                      ╭   ││  │  0x00007fe4ed48f813: jne    0x00007fe4ed48f81d
                      │   ││  │  0x00007fe4ed48f815: xor    %edx,%edx
                      │   ││  │  0x00007fe4ed48f817: cmp    $0xffffffffffffffff,%r10d
                      │╭  ││  │  0x00007fe4ed48f81b: je     0x00007fe4ed48f821
                      ↘│  ││  │  0x00007fe4ed48f81d: cltd   
                       │  ││  │  0x00007fe4ed48f81e: idiv   %r10d              ;*irem
                       │  ││  │                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@55 (line 155)
                       │  ││  │                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                       │  ││  │                                                ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20KBloomFilter@14 (line 70)
  1.42%    0.02%       ↘  ││  │  0x00007fe4ed48f821: mov    %edx,0x8(%rsp)
                          ││  │  0x00007fe4ed48f825: movslq %edx,%rcx          ;*i2l  ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@64 (line 156)
                          ││  │                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                          ││  │                                                ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20KBloomFilter@14 (line 70)
                          ││  │  0x00007fe4ed48f828: mov    %rcx,%r11
  0.49%                   ││  │  0x00007fe4ed48f82b: shr    $0x6,%r11
  0.02%                   ││  │  0x00007fe4ed48f82f: mov    %r11d,%eax         ;*l2i  ; - com.github.prasanthj.bloomfilter.BloomFilter$BitSet::get@8 (line 296)
                          ││  │                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@65 (line 156)
                          ││  │                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                          ││  │                                                ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20KBloomFilter@14 (line 70)
                          ││  │  0x00007fe4ed48f832: cmp    %r8d,%eax
                          ││  │  0x00007fe4ed48f835: jae    0x00007fe4ed48f965  ;*laload
                          ││  │                                                ; - com.github.prasanthj.bloomfilter.BloomFilter$BitSet::get@9 (line 296)
                          ││  │                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@65 (line 156)
                          ││  │                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                          ││  │                                                ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20KBloomFilter@14 (line 70)
                          ││  │  0x00007fe4ed48f83b: mov    $0x1,%edx
  0.40%                   ││  │  0x00007fe4ed48f840: mov    0x8(%rsp),%ecx
                          ││  │  0x00007fe4ed48f844: shl    %cl,%rdx
                          ││  │  0x00007fe4ed48f847: and    0x10(%r13,%rax,8),%rdx  ;*land
                          ││  │                                                ; - com.github.prasanthj.bloomfilter.BloomFilter$BitSet::get@14 (line 296)
                          ││  │                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@65 (line 156)
                          ││  │                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                          ││  │                                                ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20KBloomFilter@14 (line 70)
  5.89%    5.41%          ││  │  0x00007fe4ed48f84c: test   %rdx,%rdx
                          ││  │  0x00007fe4ed48f84f: je     0x00007fe4ed48f9b1  ;*ifeq
                          ││  │                                                ; - com.github.prasanthj.bloomfilter.BloomFilter$BitSet::get@17 (line 296)
                          ││  │                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@65 (line 156)
                          ││  │                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                          ││  │                                                ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20KBloomFilter@14 (line 70)
  0.34%    0.27%          ││  │  0x00007fe4ed48f855: mov    %edi,%r11d
                          ││  │  0x00007fe4ed48f858: inc    %r11d              ;*iinc
                          ││  │                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@73 (line 149)
                          ││  │                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                          ││  │                                                ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20KBloomFilter@14 (line 70)
  0.13%                   ││  │  0x00007fe4ed48f85b: mov    %r11d,%eax
                          ││  │  0x00007fe4ed48f85e: imul   %r9d,%eax
  0.25%    0.18%          ││  │  0x00007fe4ed48f862: add    %ebx,%eax          ;*iadd
                          ││  │                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@35 (line 150)
                          ││  │                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                          ││  │                                                ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20KBloomFilter@14 (line 70)
                          ││  │  0x00007fe4ed48f864: mov    %eax,%ecx
  0.11%                   ││  │  0x00007fe4ed48f866: not    %ecx
                          ││  │  0x00007fe4ed48f868: test   %eax,%eax
  0.40%    0.22%          ││  │  0x00007fe4ed48f86a: cmovl  %ecx,%eax
  0.05%                   ││  │  0x00007fe4ed48f86d: cmp    $0x80000000,%eax
                        ╭ ││  │  0x00007fe4ed48f872: jne    0x00007fe4ed48f87c
                        │ ││  │  0x00007fe4ed48f874: xor    %edx,%edx
                        │ ││  │  0x00007fe4ed48f876: cmp    $0xffffffffffffffff,%r10d
                        │╭││  │  0x00007fe4ed48f87a: je     0x00007fe4ed48f880
                        ↘│││  │  0x00007fe4ed48f87c: cltd   
  0.25%    0.22%         │││  │  0x00007fe4ed48f87d: idiv   %r10d              ;*irem
                         │││  │                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@55 (line 155)
                         │││  │                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                         │││  │                                                ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20KBloomFilter@14 (line 70)
  1.11%    0.61%         ↘││  │  0x00007fe4ed48f880: mov    %edx,0x8(%rsp)
  0.02%    0.07%          ││  │  0x00007fe4ed48f884: movslq %edx,%rcx          ;*i2l  ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@64 (line 156)
                          ││  │                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                          ││  │                                                ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20KBloomFilter@14 (line 70)
  0.25%    0.20%          ││  │  0x00007fe4ed48f887: mov    %rcx,%rdx
  0.14%    0.02%          ││  │  0x00007fe4ed48f88a: shr    $0x6,%rdx
  0.02%    0.16%          ││  │  0x00007fe4ed48f88e: mov    %edx,%eax          ;*l2i  ; - com.github.prasanthj.bloomfilter.BloomFilter$BitSet::get@8 (line 296)
                          ││  │                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@65 (line 156)
                          ││  │                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                          ││  │                                                ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20KBloomFilter@14 (line 70)
  0.02%    0.13%          ││  │  0x00007fe4ed48f890: cmp    %r8d,%eax
                          ││  │  0x00007fe4ed48f893: jae    0x00007fe4ed48f968  ;*laload
                          ││  │                                                ; - com.github.prasanthj.bloomfilter.BloomFilter$BitSet::get@9 (line 296)
                          ││  │                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@65 (line 156)
                          ││  │                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                          ││  │                                                ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20KBloomFilter@14 (line 70)
  0.18%    0.14%          ││  │  0x00007fe4ed48f899: mov    $0x1,%edx
  0.11%    0.05%          ││  │  0x00007fe4ed48f89e: mov    0x8(%rsp),%ecx
  0.13%    0.36%          ││  │  0x00007fe4ed48f8a2: shl    %cl,%rdx
  0.14%    0.16%          ││  │  0x00007fe4ed48f8a5: and    0x10(%r13,%rax,8),%rdx  ;*land
                          ││  │                                                ; - com.github.prasanthj.bloomfilter.BloomFilter$BitSet::get@14 (line 296)
                          ││  │                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@65 (line 156)
                          ││  │                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                          ││  │                                                ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20KBloomFilter@14 (line 70)
  6.49%    4.49%          ││  │  0x00007fe4ed48f8aa: test   %rdx,%rdx
                          ││  │  0x00007fe4ed48f8ad: je     0x00007fe4ed48f9b4  ;*ifeq
                          ││  │                                                ; - com.github.prasanthj.bloomfilter.BloomFilter$BitSet::get@17 (line 296)
                          ││  │                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@65 (line 156)
                          ││  │                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                          ││  │                                                ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20KBloomFilter@14 (line 70)
  0.20%    0.23%          ││  │  0x00007fe4ed48f8b3: add    $0x2,%edi          ;*iinc
                          ││  │                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@73 (line 149)
                          ││  │                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                          ││  │                                                ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20KBloomFilter@14 (line 70)
  0.05%                   ││  │  0x00007fe4ed48f8b6: mov    %edi,%eax
                          ││  │  0x00007fe4ed48f8b8: imul   %r9d,%eax          ;*imul
                          ││  │                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@34 (line 150)
                          ││  │                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                          ││  │                                                ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20KBloomFilter@14 (line 70)
           0.11%          ││  │  0x00007fe4ed48f8bc: cmp    %esi,%edi
                          ╰│  │  0x00007fe4ed48f8be: jl     0x00007fe4ed48f800  ;*if_icmpgt
                           │  │                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@25 (line 149)
                           │  │                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                           │  │                                                ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20KBloomFilter@14 (line 70)
  0.31%    0.18%           │  │  0x00007fe4ed48f8c4: cmp    %ebp,%edi
                           ╰  │  0x00007fe4ed48f8c6: jge    0x00007fe4ed48f637  ;*imul
                              │                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@34 (line 150)
                              │                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                              │                                                ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20KBloomFilter@14 (line 70)
  0.05%    0.02%              │  0x00007fe4ed48f8cc: add    %ebx,%eax          ;*iadd
                              │                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@35 (line 150)
                              │                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                              │                                                ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20KBloomFilter@14 (line 70)
  0.04%                       │  0x00007fe4ed48f8ce: mov    %eax,%ecx
                              │  0x00007fe4ed48f8d0: not    %ecx
  0.41%    0.14%              │  0x00007fe4ed48f8d2: test   %eax,%eax
           0.04%              │  0x00007fe4ed48f8d4: cmovl  %ecx,%eax
                              │  0x00007fe4ed48f8d7: cmp    $0x80000000,%eax
                            ╭ │  0x00007fe4ed48f8dc: jne    0x00007fe4ed48f8e6
                            │ │  0x00007fe4ed48f8de: xor    %edx,%edx
                            │ │  0x00007fe4ed48f8e0: cmp    $0xffffffffffffffff,%r10d
                            │╭│  0x00007fe4ed48f8e4: je     0x00007fe4ed48f8ea
  0.43%    0.20%            ↘││  0x00007fe4ed48f8e6: cltd   
  0.07%                      ││  0x00007fe4ed48f8e7: idiv   %r10d              ;*irem
                             ││                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@55 (line 155)
                             ││                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                             ││                                                ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20KBloomFilter@14 (line 70)
  0.99%    0.41%             ↘│  0x00007fe4ed48f8ea: mov    %edx,%esi
           0.07%              │  0x00007fe4ed48f8ec: movslq %edx,%rcx          ;*i2l  ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@64 (line 156)
                              │                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                              │                                                ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20KBloomFilter@14 (line 70)
  0.31%    0.20%              │  0x00007fe4ed48f8ef: mov    %rcx,%r11
  0.04%    0.04%              │  0x00007fe4ed48f8f2: shr    $0x6,%r11
  0.04%    0.04%              │  0x00007fe4ed48f8f6: mov    %r11d,%eax         ;*l2i  ; - com.github.prasanthj.bloomfilter.BloomFilter$BitSet::get@8 (line 296)
                              │                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@65 (line 156)
                              │                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                              │                                                ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20KBloomFilter@14 (line 70)
           0.11%              │  0x00007fe4ed48f8f9: cmp    %r8d,%eax
                              │  0x00007fe4ed48f8fc: jae    0x00007fe4ed48f96b  ;*laload
                              │                                                ; - com.github.prasanthj.bloomfilter.BloomFilter$BitSet::get@9 (line 296)
                              │                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@65 (line 156)
                              │                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                              │                                                ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20KBloomFilter@14 (line 70)
  0.31%    0.25%              │  0x00007fe4ed48f8fe: mov    $0x1,%edx
  0.05%    0.20%              │  0x00007fe4ed48f903: mov    %esi,%ecx
  0.02%    0.09%              │  0x00007fe4ed48f905: shl    %cl,%rdx
  0.27%    0.27%              │  0x00007fe4ed48f908: and    0x10(%r13,%rax,8),%rdx  ;*land
                              │                                                ; - com.github.prasanthj.bloomfilter.BloomFilter$BitSet::get@14 (line 296)
                              │                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@65 (line 156)
                              │                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                              │                                                ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20KBloomFilter@14 (line 70)
  4.19%    4.52%              │  0x00007fe4ed48f90d: test   %rdx,%rdx
                              │  0x00007fe4ed48f910: je     0x00007fe4ed48f9b7  ;*ifeq
                              │                                                ; - com.github.prasanthj.bloomfilter.BloomFilter$BitSet::get@17 (line 296)
                              │                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@65 (line 156)
                              │                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                              │                                                ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20KBloomFilter@14 (line 70)
  0.38%    0.32%              │  0x00007fe4ed48f916: inc    %edi               ;*iinc
                              │                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@73 (line 149)
                              │                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                              │                                                ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20KBloomFilter@14 (line 70)
  0.05%    0.02%              │  0x00007fe4ed48f918: cmp    %ebp,%edi
                              ╰  0x00007fe4ed48f91a: jge    0x00007fe4ed48f637  ;*if_icmpgt
                                                                               ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@25 (line 149)
                                                                               ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                                                                               ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20KBloomFilter@14 (line 70)
                                 0x00007fe4ed48f920: mov    %edi,%eax
                                 0x00007fe4ed48f922: imul   %r9d,%eax          ;*imul
                                                                               ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@34 (line 150)
....................................................................................................
 71.13%   56.93%  <total for region 1>

....[Hottest Regions]...............................................................................
 71.13%   56.93%         C2, level 4  com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20KBloomFilter, version 595 (737 bytes) 
  8.03%   19.46%         C2, level 4  com.github.prasanthj.bloomfilter.Murmur3::hash64, version 580 (298 bytes) 
  2.73%    7.33%         C2, level 4  com.github.prasanthj.bloomfilter.Murmur3::hash64, version 580 (77 bytes) 
  1.99%    1.98%   [kernel.kallsyms]  native_write_msr_safe (0 bytes) 
  1.53%    1.35%           libjvm.so  JVM_GetCallerClass (9 bytes) 
  1.04%    0.02%   [kernel.kallsyms]  page_fault (40 bytes) 
  0.86%    0.05%   [kernel.kallsyms]  __list_del_entry (21 bytes) 
  0.79%    0.05%   [kernel.kallsyms]  mem_cgroup_page_lruvec (8 bytes) 
  0.74%    0.74%           libjvm.so  JVM_GetCallerClass (26 bytes) 
  0.41%    1.32%         C2, level 4  com.github.prasanthj.bloomfilter.Murmur3::hash64, version 580 (23 bytes) 
  0.34%    0.56%   [kernel.kallsyms]  get_page_from_freelist (229 bytes) 
  0.27%    0.20%           libjvm.so  JVM_GetCallerClass (148 bytes) 
  0.22%    0.05%   [kernel.kallsyms]  change_protection_range (53 bytes) 
  0.18%    0.07%   [kernel.kallsyms]  mutex_unlock (0 bytes) 
  0.16%    0.27%           libjvm.so  JVM_GetCallerClass (80 bytes) 
  0.14%    0.16%   [kernel.kallsyms]  __srcu_read_lock (84 bytes) 
  0.14%    0.27%   [kernel.kallsyms]  get_page_from_freelist (40 bytes) 
  0.14%    0.09%           libjvm.so  JVM_GetCallerClass (25 bytes) 
  0.13%    0.04%   [kernel.kallsyms]  __sb_start_write (27 bytes) 
  0.13%    0.02%   [kernel.kallsyms]  _raw_spin_lock_irqsave (25 bytes) 
  8.89%    9.03%  <...other 481 warm regions...>
....................................................................................................
100.00%  100.00%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 71.13%   56.93%         C2, level 4  com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20KBloomFilter, version 595 
 11.17%   28.11%         C2, level 4  com.github.prasanthj.bloomfilter.Murmur3::hash64, version 580 
  4.11%    4.18%           libjvm.so  JVM_GetCallerClass 
  1.99%    1.98%   [kernel.kallsyms]  native_write_msr_safe 
  1.04%    0.02%   [kernel.kallsyms]  page_fault 
  0.86%    0.05%   [kernel.kallsyms]  __list_del_entry 
  0.79%    0.05%   [kernel.kallsyms]  mem_cgroup_page_lruvec 
  0.68%    1.17%   [kernel.kallsyms]  get_page_from_freelist 
  0.66%    0.47%           libjvm.so  [unknown] 
  0.41%    0.13%   [kernel.kallsyms]  handle_mm_fault 
  0.23%    0.29%   [kernel.kallsyms]  __alloc_pages_nodemask 
  0.22%    0.07%   [kernel.kallsyms]  change_protection_range 
  0.18%    0.13%        libc-2.17.so  __memcpy_ssse3_back 
  0.18%    0.07%   [kernel.kallsyms]  mutex_unlock 
  0.18%    0.04%      hsdis-amd64.so  print_insn 
  0.18%    0.13%   [kernel.kallsyms]  __do_page_fault 
  0.14%    0.16%   [kernel.kallsyms]  __srcu_read_lock 
  0.14%    0.31%        libc-2.17.so  vfprintf 
  0.13%    0.11%   [kernel.kallsyms]  do_numa_page 
  0.13%    0.02%   [kernel.kallsyms]  _raw_spin_lock_irqsave 
  5.43%    4.42%  <...other 145 warm methods...>
....................................................................................................
100.00%   98.83%  <totals>

....[Distribution by Source]........................................................................
 82.30%   85.04%         C2, level 4
 11.12%    8.34%   [kernel.kallsyms]
  4.78%    4.67%           libjvm.so
  0.83%    1.24%        libc-2.17.so
  0.31%    0.11%      hsdis-amd64.so
  0.23%    0.23%              [ext4]
  0.14%    0.09%              [jbd2]
  0.14%                  interpreter
  0.13%    0.25%  libpthread-2.17.so
  0.02%    0.02%         C1, level 3
....................................................................................................
100.00%  100.00%  <totals>



# JMH version: 1.19
# VM version: JDK 1.8.0_131, VM 25.131-b12
# VM invoker: /usr/lib/jvm/java-1.8.0-openjdk-1.8.0.131-3.b12.el7_3.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe.testProbe20MBloomFilter
# Parameters: (size = 10000)

# Run progress: 66.67% complete, ETA 00:00:41
# Fork: 1 of 1
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 104.000 ns/op
# Warmup Iteration   2: 75.674 ns/op
# Warmup Iteration   3: 72.118 ns/op
# Warmup Iteration   4: 63.993 ns/op
# Warmup Iteration   5: 61.811 ns/op
Iteration   1: 62.355 ns/op
Iteration   2: 62.127 ns/op
Iteration   3: 61.532 ns/op
Iteration   4: 62.725 ns/op
Iteration   5: 66.574 ns/op
# Processing profiler results: LinuxPerfAsmProfiler 


Result "com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe.testProbe20MBloomFilter":
  63.063 ±(99.9%) 7.741 ns/op [Average]
  (min, avg, max) = (61.532, 63.063, 66.574), stdev = 2.010
  CI (99.9%): [55.322, 70.804] (assumes normal distribution)

Secondary result "com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe.testProbe20MBloomFilter:·asm":
PrintAssembly processed: 187609 total address lines.
Perf output processed (skipped 13.817 seconds):
 Column 1: cycles (6879 events)
 Column 2: instructions (6877 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
C2, level 4, com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20MBloomFilter, version 608 (437 bytes) 

                          [Verified Entry Point]
                            0x00007f793ce4fa60: mov    %eax,-0x14000(%rsp)
                            0x00007f793ce4fa67: push   %rbp
                            0x00007f793ce4fa68: sub    $0x40,%rsp         ;*synchronization entry
                                                                          ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20MBloomFilter@-1 (line 77)
                            0x00007f793ce4fa6c: mov    %rsi,(%rsp)
                            0x00007f793ce4fa70: mov    $0x1312d00,%ebp
                  ╭         0x00007f793ce4fa75: jmp    0x00007f793ce4fa86  ;*invokevirtual testBytes
                  │                                                       ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                  │                                                       ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20MBloomFilter@13 (line 78)
  5.36%    1.44%  │ ↗  ↗↗   0x00007f793ce4fa77: mov    0xc(%rsp),%ebp
  2.88%    1.43%  │ │  ││   0x00007f793ce4fa7b: dec    %ebp               ;*iinc
                  │ │  ││                                                 ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20MBloomFilter@17 (line 77)
  0.38%    0.01%  │ │  ││   0x00007f793ce4fa7d: cmp    $0xffffffffffffffff,%ebp
  0.28%    0.03%  │ │  ││   0x00007f793ce4fa80: jle    0x00007f793ce4fc5e  ;*aload_0
                  │ │  ││                                                 ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20MBloomFilter@7 (line 78)
  0.63%    0.03%  ↘ │  ││   0x00007f793ce4fa86: mov    (%rsp),%r8
  0.01%             │  ││   0x00007f793ce4fa8a: mov    0x10(%r8),%r11d    ;*getfield bf
                    │  ││                                                 ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20MBloomFilter@8 (line 78)
  0.76%             │  ││   0x00007f793ce4fa8e: movslq %ebp,%r9           ;*i2l  ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20MBloomFilter@12 (line 78)
  0.03%    0.06%    │  ││   0x00007f793ce4fa91: test   %r11d,%r11d
                    │  ││   0x00007f793ce4fa94: je     0x00007f793ce4fcb1  ;*invokevirtual testLong
                    │  ││                                                 ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20MBloomFilter@13 (line 78)
  0.67%    0.07%    │  ││   0x00007f793ce4fa9a: mov    0x60(%r15),%rax
                    │  ││   0x00007f793ce4fa9e: mov    %rax,%r10
  0.01%             │  ││   0x00007f793ce4faa1: add    $0x18,%r10
  0.03%    0.06%    │  ││   0x00007f793ce4faa5: lea    (%r12,%r11,8),%rcx  ;*getfield bf
                    │  ││                                                 ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20MBloomFilter@8 (line 78)
  0.54%    0.01%    │  ││   0x00007f793ce4faa9: cmp    0x70(%r15),%r10
                   ╭│  ││   0x00007f793ce4faad: jae    0x00007f793ce4fc2e
                   ││  ││   0x00007f793ce4fab3: mov    %r10,0x60(%r15)
                   ││  ││   0x00007f793ce4fab7: prefetchnta 0xc0(%r10)
  0.47%    0.13%   ││  ││   0x00007f793ce4fabf: movq   $0x1,(%rax)
  1.02%    0.03%   ││  ││   0x00007f793ce4fac6: prefetchnta 0x100(%r10)
  0.26%    0.04%   ││  ││   0x00007f793ce4face: movl   $0x768,0x8(%rax)   ;   {metadata({type array byte})}
  0.49%    0.04%   ││  ││   0x00007f793ce4fad5: prefetchnta 0x140(%r10)
  0.32%    0.09%   ││  ││   0x00007f793ce4fadd: movl   $0x8,0xc(%rax)
  0.68%            ││  ││   0x00007f793ce4fae4: prefetchnta 0x180(%r10)
  1.02%    0.23%   ││  ││   0x00007f793ce4faec: movl   $0x0,0x10(%rax)
  0.04%            ││  ││   0x00007f793ce4faf3: movl   $0x0,0x14(%rax)
  0.52%    0.09%   ││  ││   0x00007f793ce4fafa: mov    %r11d,0x8(%rsp)
  0.52%    0.16%   ││  ││   0x00007f793ce4faff: mov    %rcx,0x18(%rsp)    ;*newarray
                   ││  ││                                                 ; - com.github.prasanthj.bloomfilter.BloomFilter::longToByteArrayLE@2 (line 195)
                   ││  ││                                                 ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@2 (line 176)
                   ││  ││                                                 ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20MBloomFilter@13 (line 78)
  0.19%    0.13%   ││  ││   0x00007f793ce4fb04: mov    %bpl,0x10(%rax)    ;*bastore
                   ││  ││                                                 ; - com.github.prasanthj.bloomfilter.BloomFilter::longToByteArrayLE@11 (line 195)
                   ││  ││                                                 ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@2 (line 176)
                   ││  ││                                                 ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20MBloomFilter@13 (line 78)
  0.13%    0.04%   ││  ││   0x00007f793ce4fb08: mov    %ebp,0xc(%rsp)
  0.33%    0.32%   ││  ││   0x00007f793ce4fb0c: mov    %r9,%r10
  0.49%    0.04%   ││  ││   0x00007f793ce4fb0f: sar    $0x30,%r10
                   ││  ││   0x00007f793ce4fb13: mov    %r9,%r11
  0.03%    0.01%   ││  ││   0x00007f793ce4fb16: sar    $0x28,%r11
  0.28%    0.48%   ││  ││   0x00007f793ce4fb1a: mov    %r10d,%r10d
  0.45%    0.42%   ││  ││   0x00007f793ce4fb1d: mov    %r11d,%r8d
                   ││  ││   0x00007f793ce4fb20: mov    %r9,%r11
  0.01%    0.07%   ││  ││   0x00007f793ce4fb23: sar    $0x20,%r11
  0.26%    0.32%   ││  ││   0x00007f793ce4fb27: mov    %r9,%rcx
  0.29%    0.35%   ││  ││   0x00007f793ce4fb2a: sar    $0x18,%rcx
                   ││  ││   0x00007f793ce4fb2e: mov    %r11d,%r11d
  0.04%    0.01%   ││  ││   0x00007f793ce4fb31: mov    %ecx,%ecx
  0.32%    0.74%   ││  ││   0x00007f793ce4fb33: mov    %r9,%rbx
  0.39%    0.58%   ││  ││   0x00007f793ce4fb36: sar    $0x10,%r9
  0.03%            ││  ││   0x00007f793ce4fb3a: mov    %rbx,%rdi
  0.06%    0.03%   ││  ││   0x00007f793ce4fb3d: sar    $0x8,%rdi
  0.45%    0.74%   ││  ││   0x00007f793ce4fb41: mov    %r9d,%r9d
  0.32%    0.86%   ││  ││   0x00007f793ce4fb44: mov    %edi,%edi
  0.01%    0.01%   ││  ││   0x00007f793ce4fb46: mov    %dil,0x11(%rax)    ;*bastore
                   ││  ││                                                 ; - com.github.prasanthj.bloomfilter.BloomFilter::longToByteArrayLE@20 (line 195)
                   ││  ││                                                 ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@2 (line 176)
                   ││  ││                                                 ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20MBloomFilter@13 (line 78)
  0.06%    0.04%   ││  ││   0x00007f793ce4fb4a: mov    %r9b,0x12(%rax)    ;*bastore
                   ││  ││                                                 ; - com.github.prasanthj.bloomfilter.BloomFilter::longToByteArrayLE@29 (line 195)
                   ││  ││                                                 ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@2 (line 176)
                   ││  ││                                                 ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20MBloomFilter@13 (line 78)
  0.29%    0.44%   ││  ││   0x00007f793ce4fb4e: mov    %cl,0x13(%rax)     ;*bastore
                   ││  ││                                                 ; - com.github.prasanthj.bloomfilter.BloomFilter::longToByteArrayLE@38 (line 195)
                   ││  ││                                                 ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@2 (line 176)
                   ││  ││                                                 ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20MBloomFilter@13 (line 78)
  0.29%    0.10%   ││  ││   0x00007f793ce4fb51: mov    %r11b,0x14(%rax)   ;*bastore
                   ││  ││                                                 ; - com.github.prasanthj.bloomfilter.BloomFilter::longToByteArrayLE@47 (line 195)
                   ││  ││                                                 ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@2 (line 176)
                   ││  ││                                                 ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20MBloomFilter@13 (line 78)
                   ││  ││   0x00007f793ce4fb55: mov    %r8b,0x15(%rax)    ;*bastore
                   ││  ││                                                 ; - com.github.prasanthj.bloomfilter.BloomFilter::longToByteArrayLE@56 (line 195)
                   ││  ││                                                 ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@2 (line 176)
                   ││  ││                                                 ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20MBloomFilter@13 (line 78)
  0.07%    0.07%   ││  ││   0x00007f793ce4fb59: mov    %r10b,0x16(%rax)   ;*bastore
                   ││  ││                                                 ; - com.github.prasanthj.bloomfilter.BloomFilter::longToByteArrayLE@66 (line 195)
                   ││  ││                                                 ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@2 (line 176)
                   ││  ││                                                 ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20MBloomFilter@13 (line 78)
  0.26%    0.19%   ││  ││   0x00007f793ce4fb5d: sar    $0x38,%rbx
  0.39%            ││  ││   0x00007f793ce4fb61: mov    %ebx,%r11d
  0.07%            ││  ││   0x00007f793ce4fb64: mov    %r11b,0x17(%rax)
  0.10%    0.01%   ││  ││   0x00007f793ce4fb68: mov    %rax,%rsi          ;*synchronization entry
                   ││  ││                                                 ; - com.github.prasanthj.bloomfilter.Murmur3::hash64@-1 (line 118)
                   ││  ││                                                 ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@1 (line 145)
                   ││  ││                                                 ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                   ││  ││                                                 ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20MBloomFilter@13 (line 78)
  0.22%    0.09%   ││  ││   0x00007f793ce4fb6b: mov    $0x8,%edx
  0.26%            ││  ││   0x00007f793ce4fb70: xor    %ecx,%ecx
  0.01%            ││  ││   0x00007f793ce4fb72: nop    
  0.01%            ││  ││   0x00007f793ce4fb73: callq  0x00007f793c9fe160  ; OopMap{[0]=Oop [8]=NarrowOop [24]=Oop off=312}
                   ││  ││                                                 ;*invokestatic hash64
                   ││  ││                                                 ; - com.github.prasanthj.bloomfilter.Murmur3::hash64@4 (line 118)
                   ││  ││                                                 ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@1 (line 145)
                   ││  ││                                                 ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                   ││  ││                                                 ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20MBloomFilter@13 (line 78)
                   ││  ││                                                 ;   {static_call}
  0.32%    0.45%   ││  ││   0x00007f793ce4fb78: mov    0x8(%rsp),%ebp
  0.03%    0.01%   ││  ││   0x00007f793ce4fb7c: mov    0x20(%r12,%rbp,8),%esi  ;*getfield k
                   ││  ││                                                 ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@22 (line 149)
                   ││  ││                                                 ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                   ││  ││                                                 ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20MBloomFilter@13 (line 78)
  0.49%    0.39%   ││  ││   0x00007f793ce4fb81: cmp    $0x1,%esi
                   │╰  ││   0x00007f793ce4fb84: jl     0x00007f793ce4fa77  ;*if_icmpgt
                   │   ││                                                 ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@25 (line 149)
                   │   ││                                                 ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                   │   ││                                                 ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20MBloomFilter@13 (line 78)
  0.39%    0.42%   │   ││   0x00007f793ce4fb8a: mov    0xc(%r12,%rbp,8),%r10d  ;*getfield m
                   │   ││                                                 ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@52 (line 155)
                   │   ││                                                 ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                   │   ││                                                 ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20MBloomFilter@13 (line 78)
           0.03%   │   ││   0x00007f793ce4fb8f: mov    %eax,%r11d         ;*l2i  ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@6 (line 146)
                   │   ││                                                 ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                   │   ││                                                 ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20MBloomFilter@13 (line 78)
                   │   ││   0x00007f793ce4fb92: shr    $0x20,%rax
  0.54%    1.16%   │   ││   0x00007f793ce4fb96: mov    %eax,%ebx          ;*l2i  ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@13 (line 147)
                   │   ││                                                 ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                   │   ││                                                 ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20MBloomFilter@13 (line 78)
  0.42%    0.60%   │   ││   0x00007f793ce4fb98: test   %r10d,%r10d
                   │   ││   0x00007f793ce4fb9b: je     0x00007f793ce4fcc5  ;*iload
                   │   ││                                                 ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@28 (line 150)
                   │   ││                                                 ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                   │   ││                                                 ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20MBloomFilter@13 (line 78)
                   │   ││   0x00007f793ce4fba1: mov    0x24(%r12,%rbp,8),%r9d  ;*getfield bitSet
                   │   ││                                                 ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@59 (line 156)
                   │   ││                                                 ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                   │   ││                                                 ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20MBloomFilter@13 (line 78)
                   │   ││   0x00007f793ce4fba6: mov    0xc(%r12,%r9,8),%r9d  ;*getfield data
                   │   ││                                                 ; - com.github.prasanthj.bloomfilter.BloomFilter$BitSet::get@1 (line 296)
                   │   ││                                                 ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@65 (line 156)
                   │   ││                                                 ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                   │   ││                                                 ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20MBloomFilter@13 (line 78)
                   │   ││                                                 ; implicit exception: dispatches to 0x00007f793ce4fcc5
  0.55%    1.13%   │   ││   0x00007f793ce4fbab: mov    0xc(%r12,%r9,8),%r8d  ;*laload
                   │   ││                                                 ; - com.github.prasanthj.bloomfilter.BloomFilter$BitSet::get@9 (line 296)
                   │   ││                                                 ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@65 (line 156)
                   │   ││                                                 ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                   │   ││                                                 ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20MBloomFilter@13 (line 78)
                   │   ││                                                 ; implicit exception: dispatches to 0x00007f793ce4fcc5
  0.44%    1.63%   │   ││   0x00007f793ce4fbb0: cmp    $0x7ffffffe,%esi
                   │   ││   0x00007f793ce4fbb6: jg     0x00007f793ce4fcf1
           0.03%   │   ││   0x00007f793ce4fbbc: mov    0x8(%rsp),%r14d
                   │   ││   0x00007f793ce4fbc1: lea    (%r12,%r9,8),%rbp
  0.28%    0.84%   │   ││   0x00007f793ce4fbc5: mov    %ebx,%eax
  0.23%    1.18%   │   ││   0x00007f793ce4fbc7: mov    $0x1,%edi
           0.07%   │   ││   0x00007f793ce4fbcc: nopl   0x0(%rax)          ;*iload
                   │   ││                                                 ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@28 (line 150)
                   │   ││                                                 ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                   │   ││                                                 ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20MBloomFilter@13 (line 78)
  0.03%    0.06%   │   ││↗  0x00007f793ce4fbd0: add    %r11d,%eax         ;*iadd
                   │   │││                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@35 (line 150)
                   │   │││                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                   │   │││                                                ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20MBloomFilter@13 (line 78)
  0.84%    0.83%   │   │││  0x00007f793ce4fbd3: mov    %eax,%ecx
  0.41%    0.84%   │   │││  0x00007f793ce4fbd5: not    %ecx
  0.31%            │   │││  0x00007f793ce4fbd7: test   %eax,%eax
  0.01%    0.01%   │   │││  0x00007f793ce4fbd9: cmovl  %ecx,%eax
  1.40%    1.56%   │   │││  0x00007f793ce4fbdc: cmp    $0x80000000,%eax
                   │ ╭ │││  0x00007f793ce4fbe1: jne    0x00007f793ce4fbeb
                   │ │ │││  0x00007f793ce4fbe3: xor    %edx,%edx
                   │ │ │││  0x00007f793ce4fbe5: cmp    $0xffffffffffffffff,%r10d
                   │ │╭│││  0x00007f793ce4fbe9: je     0x00007f793ce4fbef
  0.44%    0.06%   │ ↘││││  0x00007f793ce4fbeb: cltd   
  0.01%    0.04%   │  ││││  0x00007f793ce4fbec: idiv   %r10d              ;*irem
                   │  ││││                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@55 (line 155)
                   │  ││││                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                   │  ││││                                                ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20MBloomFilter@13 (line 78)
 23.61%   24.59%   │  ↘│││  0x00007f793ce4fbef: mov    %edx,%r13d
  0.03%    0.01%   │   │││  0x00007f793ce4fbf2: movslq %edx,%rcx          ;*i2l  ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@64 (line 156)
                   │   │││                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                   │   │││                                                ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20MBloomFilter@13 (line 78)
  1.15%    0.44%   │   │││  0x00007f793ce4fbf5: mov    %rcx,%rdx
  0.16%    0.01%   │   │││  0x00007f793ce4fbf8: shr    $0x6,%rdx
  1.13%    0.29%   │   │││  0x00007f793ce4fbfc: mov    %edx,%eax          ;*l2i  ; - com.github.prasanthj.bloomfilter.BloomFilter$BitSet::get@8 (line 296)
                   │   │││                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@65 (line 156)
                   │   │││                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                   │   │││                                                ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20MBloomFilter@13 (line 78)
  0.03%    0.03%   │   │││  0x00007f793ce4fbfe: cmp    %r8d,%eax
                   │   │││  0x00007f793ce4fc01: jae    0x00007f793ce4fc6a  ;*laload
                   │   │││                                                ; - com.github.prasanthj.bloomfilter.BloomFilter$BitSet::get@9 (line 296)
                   │   │││                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@65 (line 156)
                   │   │││                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                   │   │││                                                ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20MBloomFilter@13 (line 78)
  1.21%    0.22%   │   │││  0x00007f793ce4fc03: mov    $0x1,%edx
  0.22%    0.16%   │   │││  0x00007f793ce4fc08: mov    %r13d,%ecx
                   │   │││  0x00007f793ce4fc0b: shl    %cl,%rdx
  1.10%    0.06%   │   │││  0x00007f793ce4fc0e: test   %rdx,0x10(%rbp,%rax,8)
                   │   ╰││  0x00007f793ce4fc13: je     0x00007f793ce4fa77  ;*ifeq
                   │    ││                                                ; - com.github.prasanthj.bloomfilter.BloomFilter$BitSet::get@17 (line 296)
                   │    ││                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@65 (line 156)
                   │    ││                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                   │    ││                                                ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20MBloomFilter@13 (line 78)
  6.11%    1.69%   │    ││  0x00007f793ce4fc19: mov    %esi,%ecx
  2.17%    1.74%   │    ││  0x00007f793ce4fc1b: inc    %ecx
  0.61%    0.33%   │    ││  0x00007f793ce4fc1d: inc    %edi               ;*iinc
                   │    ││                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@73 (line 149)
                   │    ││                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                   │    ││                                                ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20MBloomFilter@13 (line 78)
  0.04%    0.01%   │    ││  0x00007f793ce4fc1f: cmp    %ecx,%edi
                   │    ╰│  0x00007f793ce4fc21: jge    0x00007f793ce4fa77  ;*if_icmpgt
                   │     │                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@25 (line 149)
                   │     │                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                   │     │                                                ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20MBloomFilter@13 (line 78)
  0.57%    0.04%   │     │  0x00007f793ce4fc27: mov    %edi,%eax
                   │     │  0x00007f793ce4fc29: imul   %ebx,%eax          ;*imul
                   │     │                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@34 (line 150)
                   │     │                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                   │     │                                                ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20MBloomFilter@13 (line 78)
  0.57%            │     ╰  0x00007f793ce4fc2c: jmp    0x00007f793ce4fbd0
                   ↘        0x00007f793ce4fc2e: mov    %rcx,0x18(%rsp)
                            0x00007f793ce4fc33: mov    %r9,0x10(%rsp)
                            0x00007f793ce4fc38: mov    %r11d,0x8(%rsp)
                            0x00007f793ce4fc3d: mov    $0x800000768,%rsi  ;   {metadata({type array byte})}
                            0x00007f793ce4fc47: mov    $0x8,%edx
                            0x00007f793ce4fc4c: xchg   %ax,%ax
                            0x00007f793ce4fc4f: callq  0x00007f793ca245e0  ; OopMap{[0]=Oop [8]=NarrowOop [24]=Oop off=532}
....................................................................................................
 68.91%   51.07%  <total for region 1>

....[Hottest Region 2]..............................................................................
C2, level 4, com.github.prasanthj.bloomfilter.Murmur3::hash64, version 576 (300 bytes) 

                     Decoding compiled method 0x00007f793ce37f50:
                     Code:
                     [Entry Point]
                     [Verified Entry Point]
                     [Constants]
                       # {method} {0x00007f7917e4aa98} &apos;hash64&apos; &apos;([BII)J&apos; in &apos;com/github/prasanthj/bloomfilter/Murmur3&apos;
                       # parm0:    rsi:rsi   = &apos;[B&apos;
                       # parm1:    rdx       = int
                       # parm2:    rcx       = int
                       #           [sp+0x50]  (sp of caller)
  0.55%    0.23%       0x00007f793ce380e0: mov    %eax,-0x14000(%rsp)
  0.16%    0.03%       0x00007f793ce380e7: push   %rbp
  0.29%    0.29%       0x00007f793ce380e8: sub    $0x40,%rsp         ;*synchronization entry
                                                                     ; - com.github.prasanthj.bloomfilter.Murmur3::hash64@-1 (line 130)
  0.51%    1.02%       0x00007f793ce380ec: mov    %edx,0x8(%rsp)
  0.13%    0.42%       0x00007f793ce380f0: mov    %edx,%ebx
  0.03%    0.15%       0x00007f793ce380f2: sar    $0x3,%ebx          ;*ishr
                                                                     ; - com.github.prasanthj.bloomfilter.Murmur3::hash64@5 (line 131)
  0.39%    0.83%       0x00007f793ce380f5: movslq %ecx,%r14          ;*i2l  ; - com.github.prasanthj.bloomfilter.Murmur3::hash64@1 (line 130)
                       0x00007f793ce380f8: mov    $0x87c37b91114253d5,%rdi
  0.15%    0.15%       0x00007f793ce38102: test   %ebx,%ebx
                  ╭    0x00007f793ce38104: jle    0x00007f793ce381ec  ;*if_icmpge
                  │                                                  ; - com.github.prasanthj.bloomfilter.Murmur3::hash64@15 (line 134)
  0.12%    0.07%  │    0x00007f793ce3810a: mov    0xc(%rsi),%r10d    ;*baload
                  │                                                  ; - com.github.prasanthj.bloomfilter.Murmur3::hash64@27 (line 136)
                  │                                                  ; implicit exception: dispatches to 0x00007f793ce38551
  0.41%    1.00%  │    0x00007f793ce3810e: xor    %r9d,%r9d
                  │    0x00007f793ce38111: xor    %r8d,%r8d
  0.16%    0.09%  │    0x00007f793ce38114: nopl   0x0(%rax,%rax,1)
  0.15%    0.07%  │    0x00007f793ce3811c: xchg   %ax,%ax            ;*iload
                  │                                                  ; - com.github.prasanthj.bloomfilter.Murmur3::hash64@18 (line 135)
  0.55%    1.28%  │ ↗  0x00007f793ce38120: cmp    %r10d,%r9d
                  │ │  0x00007f793ce38123: jae    0x00007f793ce3839e  ;*baload
                  │ │                                                ; - com.github.prasanthj.bloomfilter.Murmur3::hash64@27 (line 136)
  0.01%    0.01%  │ │  0x00007f793ce38129: movzbq 0x10(%rsi,%r9,1),%rcx  ;*land
                  │ │                                                ; - com.github.prasanthj.bloomfilter.Murmur3::hash64@32 (line 136)
  0.28%    0.03%  │ │  0x00007f793ce3812f: mov    %r9d,%r11d
  0.12%    0.09%  │ │  0x00007f793ce38132: add    $0x7,%r11d
  0.31%    0.81%  │ │  0x00007f793ce38136: cmp    %r10d,%r11d
                  │ │  0x00007f793ce38139: jae    0x00007f793ce383d1  ;*baload
                  │ │                                                ; - com.github.prasanthj.bloomfilter.Murmur3::hash64@38 (line 136)
  0.01%           │ │  0x00007f793ce3813f: mov    %rcx,(%rsp)
  0.22%    0.22%  │ │  0x00007f793ce38143: movslq %r9d,%r11          ;*baload
                  │ │                                                ; - com.github.prasanthj.bloomfilter.Murmur3::hash64@130 (line 136)
  0.12%    0.23%  │ │  0x00007f793ce38146: movzbq 0x11(%rsi,%r11,1),%r9
  0.33%    0.93%  │ │  0x00007f793ce3814c: movzbq 0x17(%rsi,%r11,1),%rcx
  0.01%           │ │  0x00007f793ce38152: movzbq 0x12(%rsi,%r11,1),%rdx
  0.13%    0.31%  │ │  0x00007f793ce38158: movzbq 0x13(%rsi,%r11,1),%rax
  0.09%    0.13%  │ │  0x00007f793ce3815e: movzbq 0x14(%rsi,%r11,1),%rbp
  0.36%    0.65%  │ │  0x00007f793ce38164: movzbq 0x15(%rsi,%r11,1),%r13
           0.01%  │ │  0x00007f793ce3816a: movzbq 0x16(%rsi,%r11,1),%r11
  0.26%    0.61%  │ │  0x00007f793ce38170: shl    $0x8,%r9
  0.12%    0.29%  │ │  0x00007f793ce38174: or     (%rsp),%r9
  0.41%    0.64%  │ │  0x00007f793ce38178: shl    $0x30,%r11
  0.01%    0.01%  │ │  0x00007f793ce3817c: shl    $0x28,%r13
  0.36%    0.57%  │ │  0x00007f793ce38180: shl    $0x20,%rbp
  0.06%    0.12%  │ │  0x00007f793ce38184: shl    $0x18,%rax
  0.45%    0.84%  │ │  0x00007f793ce38188: shl    $0x10,%rdx
           0.04%  │ │  0x00007f793ce3818c: or     %rdx,%r9
  0.17%    0.61%  │ │  0x00007f793ce3818f: or     %rax,%r9
  0.15%    0.23%  │ │  0x00007f793ce38192: or     %rbp,%r9
  0.49%    0.79%  │ │  0x00007f793ce38195: or     %r13,%r9
  0.03%    0.01%  │ │  0x00007f793ce38198: or     %r11,%r9
  0.22%    0.52%  │ │  0x00007f793ce3819b: shl    $0x38,%rcx
  0.13%    0.22%  │ │  0x00007f793ce3819f: or     %rcx,%r9
  0.29%    0.83%  │ │  0x00007f793ce381a2: imul   %rdi,%r9           ;*lmul
                  │ │                                                ; - com.github.prasanthj.bloomfilter.Murmur3::hash64@147 (line 146)
  0.13%    0.39%  │ │  0x00007f793ce381a6: rol    $0x1f,%r9
  0.19%    0.55%  │ │  0x00007f793ce381aa: mov    $0x4cf5ad432745937f,%r11
  0.09%    0.20%  │ │  0x00007f793ce381b4: imul   %r11,%r9
  1.10%    2.63%  │ │  0x00007f793ce381b8: xor    %r14,%r9           ;*lxor
                  │ │                                                ; - com.github.prasanthj.bloomfilter.Murmur3::hash64@170 (line 149)
  0.29%    0.47%  │ │  0x00007f793ce381bb: rol    $0x1b,%r9          ;*lor  ; - java.lang.Long::rotateLeft@7 (line 1500)
                  │ │                                                ; - com.github.prasanthj.bloomfilter.Murmur3::hash64@175 (line 150)
  0.35%    0.55%  │ │  0x00007f793ce381bf: mov    %r9,%r14
  0.03%    0.12%  │ │  0x00007f793ce381c2: shl    $0x2,%r14
  0.61%    1.83%  │ │  0x00007f793ce381c6: add    %r9,%r14
  0.41%    1.00%  │ │  0x00007f793ce381c9: add    $0x52dce729,%r14   ;*ladd
                  │ │                                                ; - com.github.prasanthj.bloomfilter.Murmur3::hash64@185 (line 150)
  0.41%    0.97%  │ │  0x00007f793ce381d0: mov    %r8d,%ecx
  0.03%    0.10%  │ │  0x00007f793ce381d3: inc    %ecx               ;*iinc
                  │ │                                                ; - com.github.prasanthj.bloomfilter.Murmur3::hash64@187 (line 134)
  0.38%    0.65%  │ │  0x00007f793ce381d5: cmp    %ebx,%ecx
                  │╭│  0x00007f793ce381d7: jge    0x00007f793ce381ec  ;*if_icmpge
                  │││                                                ; - com.github.prasanthj.bloomfilter.Murmur3::hash64@15 (line 134)
                  │││  0x00007f793ce381d9: shl    $0x3,%r8d
                  │││  0x00007f793ce381dd: mov    %r8d,%r9d
                  │││  0x00007f793ce381e0: add    $0x8,%r9d          ;*ishl
                  │││                                                ; - com.github.prasanthj.bloomfilter.Murmur3::hash64@21 (line 135)
                  │││  0x00007f793ce381e4: mov    %ecx,%r8d
                  ││╰  0x00007f793ce381e7: jmpq   0x00007f793ce38120  ;*if_icmpge
                  ││                                                 ; - com.github.prasanthj.bloomfilter.Murmur3::hash64@15 (line 134)
           0.01%  ↘↘   0x00007f793ce381ec: mov    0x8(%rsp),%r8d
  0.33%    0.99%       0x00007f793ce381f1: and    $0xfffffffffffffff8,%r8d  ;*ishl
                                                                     ; - com.github.prasanthj.bloomfilter.Murmur3::hash64@199 (line 155)
  0.04%    0.09%       0x00007f793ce381f5: mov    0x8(%rsp),%r10d
  0.41%    0.45%       0x00007f793ce381fa: sub    %r8d,%r10d         ;*isub
                                                                     ; - com.github.prasanthj.bloomfilter.Murmur3::hash64@205 (line 156)
           0.03%       0x00007f793ce381fd: movslq %r8d,%r9           ;*baload
                                                                     ; - com.github.prasanthj.bloomfilter.Murmur3::hash64@351 (line 168)
  0.33%    1.11%       0x00007f793ce38200: xor    %ecx,%ecx
  0.01%    0.03%       0x00007f793ce38202: cmp    $0x4,%r10d
                       0x00007f793ce38206: je     0x00007f793ce382ad
  0.26%    0.38%       0x00007f793ce3820c: cmp    $0x4,%r10d
                       0x00007f793ce38210: jle    0x00007f793ce3822d
                       0x00007f793ce38212: cmp    $0x7,%r10d
                       0x00007f793ce38216: je     0x00007f793ce38250
                       0x00007f793ce38218: cmp    $0x7,%r10d
                       0x00007f793ce3821c: jg     0x00007f793ce38350
                       0x00007f793ce38222: cmp    $0x6,%r10d
                       0x00007f793ce38226: je     0x00007f793ce3826d
                       0x00007f793ce38228: xor    %r11d,%r11d
                       0x00007f793ce3822b: jmp    0x00007f793ce3828d
                       0x00007f793ce3822d: cmp    $0x2,%r10d
....................................................................................................
 14.14%   27.96%  <total for region 2>

....[Hottest Regions]...............................................................................
 68.91%   51.07%         C2, level 4  com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20MBloomFilter, version 608 (437 bytes) 
 14.14%   27.96%         C2, level 4  com.github.prasanthj.bloomfilter.Murmur3::hash64, version 576 (300 bytes) 
  6.27%    9.99%         C2, level 4  com.github.prasanthj.bloomfilter.Murmur3::hash64, version 576 (77 bytes) 
  3.95%    3.93%   [kernel.kallsyms]  native_write_msr_safe (0 bytes) 
  0.84%    1.60%         C2, level 4  com.github.prasanthj.bloomfilter.Murmur3::hash64, version 576 (20 bytes) 
  0.23%    0.25%           libjvm.so  JVM_NanoTime (9 bytes) 
  0.16%    0.17%           libjvm.so  JVM_NanoTime (9 bytes) 
  0.15%    0.04%   [kernel.kallsyms]  __srcu_read_lock (64 bytes) 
  0.13%    0.07%   [kernel.kallsyms]  mutex_unlock (14 bytes) 
  0.13%    0.03%   [kernel.kallsyms]  mutex_lock (16 bytes) 
  0.12%            [kernel.kallsyms]  page_fault (0 bytes) 
  0.12%    0.15%           libjvm.so  JVM_NanoTime (92 bytes) 
  0.09%    0.01%   [kernel.kallsyms]  do_numa_page (31 bytes) 
  0.09%    0.10%   [kernel.kallsyms]  fget_light (90 bytes) 
  0.09%    0.03%   [kernel.kallsyms]  _raw_spin_lock_irqsave (26 bytes) 
  0.09%    0.19%           libjvm.so  JVM_NanoTime (80 bytes) 
  0.07%    0.01%   [kernel.kallsyms]  change_protection_range (35 bytes) 
  0.07%    0.03%   [kernel.kallsyms]  _raw_spin_lock (37 bytes) 
  0.07%    0.04%        libc-2.17.so  _IO_fwrite (29 bytes) 
  0.06%    0.04%   [kernel.kallsyms]  __sb_start_write (0 bytes) 
  4.23%    4.25%  <...other 378 warm regions...>
....................................................................................................
100.00%   99.97%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 68.91%   51.07%         C2, level 4  com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20MBloomFilter, version 608 
 21.25%   39.55%         C2, level 4  com.github.prasanthj.bloomfilter.Murmur3::hash64, version 576 
  3.95%    3.93%   [kernel.kallsyms]  native_write_msr_safe 
  1.53%    1.74%           libjvm.so  JVM_NanoTime 
  0.35%    0.32%           libjvm.so  [unknown] 
  0.19%    0.06%        libc-2.17.so  vfprintf 
  0.16%    0.07%   [kernel.kallsyms]  __srcu_read_lock 
  0.13%    0.03%   [kernel.kallsyms]  mutex_lock 
  0.13%    0.07%   [kernel.kallsyms]  mutex_unlock 
  0.12%            [kernel.kallsyms]  page_fault 
  0.10%    0.03%   [kernel.kallsyms]  do_numa_page 
  0.09%    0.01%   [kernel.kallsyms]  change_protection_range 
  0.09%    0.10%   [kernel.kallsyms]  fget_light 
  0.09%    0.07%        libc-2.17.so  _IO_fwrite 
  0.09%    0.03%   [kernel.kallsyms]  _raw_spin_lock_irqsave 
  0.09%    0.12%        libc-2.17.so  _IO_default_xsputn 
  0.07%    0.12%   [kernel.kallsyms]  avc_has_perm_flags 
  0.07%    0.03%   [kernel.kallsyms]  _raw_spin_lock 
  0.07%    0.06%   [kernel.kallsyms]  __sb_start_write 
  0.07%    0.09%   [kernel.kallsyms]  pipe_write 
  2.46%    1.43%  <...other 119 warm methods...>
....................................................................................................
100.00%   98.92%  <totals>

....[Distribution by Source]........................................................................
 90.16%   90.64%         C2, level 4
  6.61%    6.19%   [kernel.kallsyms]
  1.89%    2.06%           libjvm.so
  0.77%    0.64%        libc-2.17.so
  0.16%    0.13%      hsdis-amd64.so
  0.12%    0.01%              [jbd2]
  0.10%    0.09%  libpthread-2.17.so
  0.09%    0.04%         interpreter
  0.07%    0.15%              [ext4]
  0.01%               perf-31995.map
  0.01%                      [ixgbe]
....................................................................................................
100.00%   99.97%  <totals>



# JMH version: 1.19
# VM version: JDK 1.8.0_131, VM 25.131-b12
# VM invoker: /usr/lib/jvm/java-1.8.0-openjdk-1.8.0.131-3.b12.el7_3.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe.testProbe20MBloomFilter
# Parameters: (size = 10000000)

# Run progress: 83.33% complete, ETA 00:00:21
# Fork: 1 of 1
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 113.808 ns/op
# Warmup Iteration   2: 99.213 ns/op
# Warmup Iteration   3: 103.230 ns/op
# Warmup Iteration   4: 97.865 ns/op
# Warmup Iteration   5: 93.302 ns/op
Iteration   1: 93.354 ns/op
Iteration   2: 93.722 ns/op
Iteration   3: 110.664 ns/op
Iteration   4: 95.318 ns/op
Iteration   5: 95.270 ns/op
# Processing profiler results: LinuxPerfAsmProfiler 


Result "com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe.testProbe20MBloomFilter":
  97.665 ±(99.9%) 28.187 ns/op [Average]
  (min, avg, max) = (93.354, 97.665, 110.664), stdev = 7.320
  CI (99.9%): [69.478, 125.853] (assumes normal distribution)

Secondary result "com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe.testProbe20MBloomFilter:·asm":
PrintAssembly processed: 190099 total address lines.
Perf output processed (skipped 17.884 seconds):
 Column 1: cycles (10553 events)
 Column 2: instructions (10559 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
C2, level 4, com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20MBloomFilter, version 624 (437 bytes) 

                          [Verified Entry Point]
                            0x00007fcbed49fd20: mov    %eax,-0x14000(%rsp)
                            0x00007fcbed49fd27: push   %rbp
                            0x00007fcbed49fd28: sub    $0x40,%rsp         ;*synchronization entry
                                                                          ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20MBloomFilter@-1 (line 77)
                            0x00007fcbed49fd2c: mov    %rsi,(%rsp)
                            0x00007fcbed49fd30: mov    $0x1312d00,%ebp
                  ╭         0x00007fcbed49fd35: jmp    0x00007fcbed49fd46  ;*invokevirtual testBytes
                  │                                                       ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                  │                                                       ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20MBloomFilter@13 (line 78)
 12.76%    5.66%  │ ↗  ↗↗   0x00007fcbed49fd37: mov    0xc(%rsp),%ebp
  0.74%    0.24%  │ │  ││   0x00007fcbed49fd3b: dec    %ebp               ;*iinc
                  │ │  ││                                                 ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20MBloomFilter@17 (line 77)
  0.08%    0.01%  │ │  ││   0x00007fcbed49fd3d: cmp    $0xffffffffffffffff,%ebp
  0.13%    0.01%  │ │  ││   0x00007fcbed49fd40: jle    0x00007fcbed49ff1e  ;*aload_0
                  │ │  ││                                                 ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20MBloomFilter@7 (line 78)
  0.31%    0.08%  ↘ │  ││   0x00007fcbed49fd46: mov    (%rsp),%r8
                    │  ││   0x00007fcbed49fd4a: mov    0x10(%r8),%r11d    ;*getfield bf
                    │  ││                                                 ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20MBloomFilter@8 (line 78)
  0.17%    0.01%    │  ││   0x00007fcbed49fd4e: movslq %ebp,%r9           ;*i2l  ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20MBloomFilter@12 (line 78)
  0.08%             │  ││   0x00007fcbed49fd51: test   %r11d,%r11d
                    │  ││   0x00007fcbed49fd54: je     0x00007fcbed49ff71  ;*invokevirtual testLong
                    │  ││                                                 ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20MBloomFilter@13 (line 78)
  0.48%    0.08%    │  ││   0x00007fcbed49fd5a: mov    0x60(%r15),%rax
  0.02%    0.03%    │  ││   0x00007fcbed49fd5e: mov    %rax,%r10
           0.04%    │  ││   0x00007fcbed49fd61: add    $0x18,%r10
  0.07%    0.01%    │  ││   0x00007fcbed49fd65: lea    (%r12,%r11,8),%rcx  ;*getfield bf
                    │  ││                                                 ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20MBloomFilter@8 (line 78)
  0.32%    0.08%    │  ││   0x00007fcbed49fd69: cmp    0x70(%r15),%r10
                   ╭│  ││   0x00007fcbed49fd6d: jae    0x00007fcbed49feee
           0.03%   ││  ││   0x00007fcbed49fd73: mov    %r10,0x60(%r15)
  0.04%    0.05%   ││  ││   0x00007fcbed49fd77: prefetchnta 0xc0(%r10)
  0.63%    0.11%   ││  ││   0x00007fcbed49fd7f: movq   $0x1,(%rax)
  0.50%    0.10%   ││  ││   0x00007fcbed49fd86: prefetchnta 0x100(%r10)
  0.53%    0.08%   ││  ││   0x00007fcbed49fd8e: movl   $0x768,0x8(%rax)   ;   {metadata({type array byte})}
  0.17%    0.07%   ││  ││   0x00007fcbed49fd95: prefetchnta 0x140(%r10)
  0.49%    0.07%   ││  ││   0x00007fcbed49fd9d: movl   $0x8,0xc(%rax)
  0.33%    0.09%   ││  ││   0x00007fcbed49fda4: prefetchnta 0x180(%r10)
  0.75%    0.14%   ││  ││   0x00007fcbed49fdac: movl   $0x0,0x10(%rax)
  0.05%    0.10%   ││  ││   0x00007fcbed49fdb3: movl   $0x0,0x14(%rax)
  0.24%    0.29%   ││  ││   0x00007fcbed49fdba: mov    %r11d,0x8(%rsp)
  0.26%    0.13%   ││  ││   0x00007fcbed49fdbf: mov    %rcx,0x18(%rsp)    ;*newarray
                   ││  ││                                                 ; - com.github.prasanthj.bloomfilter.BloomFilter::longToByteArrayLE@2 (line 195)
                   ││  ││                                                 ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@2 (line 176)
                   ││  ││                                                 ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20MBloomFilter@13 (line 78)
  0.05%    0.09%   ││  ││   0x00007fcbed49fdc4: mov    %bpl,0x10(%rax)    ;*bastore
                   ││  ││                                                 ; - com.github.prasanthj.bloomfilter.BloomFilter::longToByteArrayLE@11 (line 195)
                   ││  ││                                                 ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@2 (line 176)
                   ││  ││                                                 ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20MBloomFilter@13 (line 78)
  0.07%    0.14%   ││  ││   0x00007fcbed49fdc8: mov    %ebp,0xc(%rsp)
  0.10%    0.34%   ││  ││   0x00007fcbed49fdcc: mov    %r9,%r10
  0.26%    0.09%   ││  ││   0x00007fcbed49fdcf: sar    $0x30,%r10
  0.03%    0.04%   ││  ││   0x00007fcbed49fdd3: mov    %r9,%r11
  0.07%    0.10%   ││  ││   0x00007fcbed49fdd6: sar    $0x28,%r11
  0.14%    0.23%   ││  ││   0x00007fcbed49fdda: mov    %r10d,%r10d
  0.27%    0.03%   ││  ││   0x00007fcbed49fddd: mov    %r11d,%r8d
  0.02%    0.01%   ││  ││   0x00007fcbed49fde0: mov    %r9,%r11
  0.02%    0.07%   ││  ││   0x00007fcbed49fde3: sar    $0x20,%r11
  0.17%    0.27%   ││  ││   0x00007fcbed49fde7: mov    %r9,%rcx
  0.34%    0.02%   ││  ││   0x00007fcbed49fdea: sar    $0x18,%rcx
  0.02%    0.02%   ││  ││   0x00007fcbed49fdee: mov    %r11d,%r11d
  0.04%    0.02%   ││  ││   0x00007fcbed49fdf1: mov    %ecx,%ecx
  0.14%    0.26%   ││  ││   0x00007fcbed49fdf3: mov    %r9,%rbx
  0.29%    0.05%   ││  ││   0x00007fcbed49fdf6: sar    $0x10,%r9
  0.02%            ││  ││   0x00007fcbed49fdfa: mov    %rbx,%rdi
  0.05%            ││  ││   0x00007fcbed49fdfd: sar    $0x8,%rdi
  0.13%    0.22%   ││  ││   0x00007fcbed49fe01: mov    %r9d,%r9d
  0.31%    0.04%   ││  ││   0x00007fcbed49fe04: mov    %edi,%edi
                   ││  ││   0x00007fcbed49fe06: mov    %dil,0x11(%rax)    ;*bastore
                   ││  ││                                                 ; - com.github.prasanthj.bloomfilter.BloomFilter::longToByteArrayLE@20 (line 195)
                   ││  ││                                                 ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@2 (line 176)
                   ││  ││                                                 ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20MBloomFilter@13 (line 78)
  0.01%    0.10%   ││  ││   0x00007fcbed49fe0a: mov    %r9b,0x12(%rax)    ;*bastore
                   ││  ││                                                 ; - com.github.prasanthj.bloomfilter.BloomFilter::longToByteArrayLE@29 (line 195)
                   ││  ││                                                 ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@2 (line 176)
                   ││  ││                                                 ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20MBloomFilter@13 (line 78)
  0.14%    0.26%   ││  ││   0x00007fcbed49fe0e: mov    %cl,0x13(%rax)     ;*bastore
                   ││  ││                                                 ; - com.github.prasanthj.bloomfilter.BloomFilter::longToByteArrayLE@38 (line 195)
                   ││  ││                                                 ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@2 (line 176)
                   ││  ││                                                 ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20MBloomFilter@13 (line 78)
  0.24%    0.04%   ││  ││   0x00007fcbed49fe11: mov    %r11b,0x14(%rax)   ;*bastore
                   ││  ││                                                 ; - com.github.prasanthj.bloomfilter.BloomFilter::longToByteArrayLE@47 (line 195)
                   ││  ││                                                 ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@2 (line 176)
                   ││  ││                                                 ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20MBloomFilter@13 (line 78)
  0.09%    0.01%   ││  ││   0x00007fcbed49fe15: mov    %r8b,0x15(%rax)    ;*bastore
                   ││  ││                                                 ; - com.github.prasanthj.bloomfilter.BloomFilter::longToByteArrayLE@56 (line 195)
                   ││  ││                                                 ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@2 (line 176)
                   ││  ││                                                 ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20MBloomFilter@13 (line 78)
  0.05%    0.13%   ││  ││   0x00007fcbed49fe19: mov    %r10b,0x16(%rax)   ;*bastore
                   ││  ││                                                 ; - com.github.prasanthj.bloomfilter.BloomFilter::longToByteArrayLE@66 (line 195)
                   ││  ││                                                 ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@2 (line 176)
                   ││  ││                                                 ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20MBloomFilter@13 (line 78)
  0.16%    0.27%   ││  ││   0x00007fcbed49fe1d: sar    $0x38,%rbx
  0.29%    0.01%   ││  ││   0x00007fcbed49fe21: mov    %ebx,%r11d
  0.09%    0.01%   ││  ││   0x00007fcbed49fe24: mov    %r11b,0x17(%rax)
  0.05%    0.06%   ││  ││   0x00007fcbed49fe28: mov    %rax,%rsi          ;*synchronization entry
                   ││  ││                                                 ; - com.github.prasanthj.bloomfilter.Murmur3::hash64@-1 (line 118)
                   ││  ││                                                 ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@1 (line 145)
                   ││  ││                                                 ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                   ││  ││                                                 ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20MBloomFilter@13 (line 78)
  0.13%    0.09%   ││  ││   0x00007fcbed49fe2b: mov    $0x8,%edx
  0.24%            ││  ││   0x00007fcbed49fe30: xor    %ecx,%ecx
  0.01%    0.02%   ││  ││   0x00007fcbed49fe32: nop    
  0.02%    0.06%   ││  ││   0x00007fcbed49fe33: callq  0x00007fcbed046160  ; OopMap{[0]=Oop [8]=NarrowOop [24]=Oop off=312}
                   ││  ││                                                 ;*invokestatic hash64
                   ││  ││                                                 ; - com.github.prasanthj.bloomfilter.Murmur3::hash64@4 (line 118)
                   ││  ││                                                 ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@1 (line 145)
                   ││  ││                                                 ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                   ││  ││                                                 ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20MBloomFilter@13 (line 78)
                   ││  ││                                                 ;   {static_call}
  0.26%    0.90%   ││  ││   0x00007fcbed49fe38: mov    0x8(%rsp),%ebp
  0.04%    0.09%   ││  ││   0x00007fcbed49fe3c: mov    0x20(%r12,%rbp,8),%esi  ;*getfield k
                   ││  ││                                                 ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@22 (line 149)
                   ││  ││                                                 ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                   ││  ││                                                 ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20MBloomFilter@13 (line 78)
  0.20%    0.30%   ││  ││   0x00007fcbed49fe41: cmp    $0x1,%esi
                   │╰  ││   0x00007fcbed49fe44: jl     0x00007fcbed49fd37  ;*if_icmpgt
                   │   ││                                                 ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@25 (line 149)
                   │   ││                                                 ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                   │   ││                                                 ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20MBloomFilter@13 (line 78)
  0.25%    0.69%   │   ││   0x00007fcbed49fe4a: mov    0xc(%r12,%rbp,8),%r10d  ;*getfield m
                   │   ││                                                 ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@52 (line 155)
                   │   ││                                                 ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                   │   ││                                                 ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20MBloomFilter@13 (line 78)
  0.03%    0.03%   │   ││   0x00007fcbed49fe4f: mov    %eax,%r11d         ;*l2i  ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@6 (line 146)
                   │   ││                                                 ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                   │   ││                                                 ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20MBloomFilter@13 (line 78)
           0.04%   │   ││   0x00007fcbed49fe52: shr    $0x20,%rax
  0.19%    0.57%   │   ││   0x00007fcbed49fe56: mov    %eax,%ebx          ;*l2i  ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@13 (line 147)
                   │   ││                                                 ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                   │   ││                                                 ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20MBloomFilter@13 (line 78)
  0.27%    0.87%   │   ││   0x00007fcbed49fe58: test   %r10d,%r10d
                   │   ││   0x00007fcbed49fe5b: je     0x00007fcbed49ff85  ;*iload
                   │   ││                                                 ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@28 (line 150)
                   │   ││                                                 ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                   │   ││                                                 ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20MBloomFilter@13 (line 78)
  0.02%    0.04%   │   ││   0x00007fcbed49fe61: mov    0x24(%r12,%rbp,8),%r9d  ;*getfield bitSet
                   │   ││                                                 ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@59 (line 156)
                   │   ││                                                 ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                   │   ││                                                 ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20MBloomFilter@13 (line 78)
  0.02%    0.08%   │   ││   0x00007fcbed49fe66: mov    0xc(%r12,%r9,8),%r9d  ;*getfield data
                   │   ││                                                 ; - com.github.prasanthj.bloomfilter.BloomFilter$BitSet::get@1 (line 296)
                   │   ││                                                 ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@65 (line 156)
                   │   ││                                                 ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                   │   ││                                                 ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20MBloomFilter@13 (line 78)
                   │   ││                                                 ; implicit exception: dispatches to 0x00007fcbed49ff85
  0.16%    0.50%   │   ││   0x00007fcbed49fe6b: mov    0xc(%r12,%r9,8),%r8d  ;*laload
                   │   ││                                                 ; - com.github.prasanthj.bloomfilter.BloomFilter$BitSet::get@9 (line 296)
                   │   ││                                                 ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@65 (line 156)
                   │   ││                                                 ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                   │   ││                                                 ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20MBloomFilter@13 (line 78)
                   │   ││                                                 ; implicit exception: dispatches to 0x00007fcbed49ff85
  0.31%    0.97%   │   ││   0x00007fcbed49fe70: cmp    $0x7ffffffe,%esi
                   │   ││   0x00007fcbed49fe76: jg     0x00007fcbed49ffb1
  0.01%    0.06%   │   ││   0x00007fcbed49fe7c: mov    0x8(%rsp),%r14d
  0.03%    0.03%   │   ││   0x00007fcbed49fe81: lea    (%r12,%r9,8),%rbp
  0.09%    0.51%   │   ││   0x00007fcbed49fe85: mov    %ebx,%eax
  0.43%    0.85%   │   ││   0x00007fcbed49fe87: mov    $0x1,%edi
  0.01%    0.03%   │   ││   0x00007fcbed49fe8c: nopl   0x0(%rax)          ;*iload
                   │   ││                                                 ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@28 (line 150)
                   │   ││                                                 ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                   │   ││                                                 ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20MBloomFilter@13 (line 78)
  0.18%    0.03%   │   ││↗  0x00007fcbed49fe90: add    %r11d,%eax         ;*iadd
                   │   │││                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@35 (line 150)
                   │   │││                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                   │   │││                                                ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20MBloomFilter@13 (line 78)
  0.84%    0.54%   │   │││  0x00007fcbed49fe93: mov    %eax,%ecx
  0.31%    0.99%   │   │││  0x00007fcbed49fe95: not    %ecx
  0.11%    0.05%   │   │││  0x00007fcbed49fe97: test   %eax,%eax
  0.15%    0.06%   │   │││  0x00007fcbed49fe99: cmovl  %ecx,%eax
  1.16%    1.38%   │   │││  0x00007fcbed49fe9c: cmp    $0x80000000,%eax
                   │ ╭ │││  0x00007fcbed49fea1: jne    0x00007fcbed49feab
                   │ │ │││  0x00007fcbed49fea3: xor    %edx,%edx
                   │ │ │││  0x00007fcbed49fea5: cmp    $0xffffffffffffffff,%r10d
                   │ │╭│││  0x00007fcbed49fea9: je     0x00007fcbed49feaf
  0.25%    0.06%   │ ↘││││  0x00007fcbed49feab: cltd   
  0.14%    0.03%   │  ││││  0x00007fcbed49feac: idiv   %r10d              ;*irem
                   │  ││││                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@55 (line 155)
                   │  ││││                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                   │  ││││                                                ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20MBloomFilter@13 (line 78)
  9.32%   13.26%   │  ↘│││  0x00007fcbed49feaf: mov    %edx,%r13d
  0.04%    0.09%   │   │││  0x00007fcbed49feb2: movslq %edx,%rcx          ;*i2l  ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@64 (line 156)
                   │   │││                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                   │   │││                                                ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20MBloomFilter@13 (line 78)
  0.55%    0.80%   │   │││  0x00007fcbed49feb5: mov    %rcx,%rdx
  0.54%    0.13%   │   │││  0x00007fcbed49feb8: shr    $0x6,%rdx
  0.65%    1.78%   │   │││  0x00007fcbed49febc: mov    %edx,%eax          ;*l2i  ; - com.github.prasanthj.bloomfilter.BloomFilter$BitSet::get@8 (line 296)
                   │   │││                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@65 (line 156)
                   │   │││                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                   │   │││                                                ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20MBloomFilter@13 (line 78)
  0.01%    0.18%   │   │││  0x00007fcbed49febe: cmp    %r8d,%eax
                   │   │││  0x00007fcbed49fec1: jae    0x00007fcbed49ff2a  ;*laload
                   │   │││                                                ; - com.github.prasanthj.bloomfilter.BloomFilter$BitSet::get@9 (line 296)
                   │   │││                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@65 (line 156)
                   │   │││                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                   │   │││                                                ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20MBloomFilter@13 (line 78)
  0.48%    0.67%   │   │││  0x00007fcbed49fec3: mov    $0x1,%edx
  0.54%    0.13%   │   │││  0x00007fcbed49fec8: mov    %r13d,%ecx
  0.27%    0.95%   │   │││  0x00007fcbed49fecb: shl    %cl,%rdx
  0.48%    0.67%   │   │││  0x00007fcbed49fece: test   %rdx,0x10(%rbp,%rax,8)
  0.12%    0.06%   │   ╰││  0x00007fcbed49fed3: je     0x00007fcbed49fd37  ;*ifeq
                   │    ││                                                ; - com.github.prasanthj.bloomfilter.BloomFilter$BitSet::get@17 (line 296)
                   │    ││                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@65 (line 156)
                   │    ││                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                   │    ││                                                ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20MBloomFilter@13 (line 78)
 34.58%   17.65%   │    ││  0x00007fcbed49fed9: mov    %esi,%ecx
  0.77%    0.12%   │    ││  0x00007fcbed49fedb: inc    %ecx
  0.36%    0.26%   │    ││  0x00007fcbed49fedd: inc    %edi               ;*iinc
                   │    ││                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@73 (line 149)
                   │    ││                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                   │    ││                                                ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20MBloomFilter@13 (line 78)
  0.20%    0.02%   │    ││  0x00007fcbed49fedf: cmp    %ecx,%edi
                   │    ╰│  0x00007fcbed49fee1: jge    0x00007fcbed49fd37  ;*if_icmpgt
                   │     │                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@25 (line 149)
                   │     │                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                   │     │                                                ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20MBloomFilter@13 (line 78)
  0.85%    0.27%   │     │  0x00007fcbed49fee7: mov    %edi,%eax
                   │     │  0x00007fcbed49fee9: imul   %ebx,%eax          ;*imul
                   │     │                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testBytes@34 (line 150)
                   │     │                                                ; - com.github.prasanthj.bloomfilter.BloomFilter::testLong@5 (line 176)
                   │     │                                                ; - com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20MBloomFilter@13 (line 78)
  0.13%            │     ╰  0x00007fcbed49feec: jmp    0x00007fcbed49fe90
                   ↘        0x00007fcbed49feee: mov    %rcx,0x18(%rsp)
                            0x00007fcbed49fef3: mov    %r9,0x10(%rsp)
                            0x00007fcbed49fef8: mov    %r11d,0x8(%rsp)
                            0x00007fcbed49fefd: mov    $0x800000768,%rsi  ;   {metadata({type array byte})}
                            0x00007fcbed49ff07: mov    $0x8,%edx
                            0x00007fcbed49ff0c: xchg   %ax,%ax
                            0x00007fcbed49ff0f: callq  0x00007fcbed06c060  ; OopMap{[0]=Oop [8]=NarrowOop [24]=Oop off=532}
....................................................................................................
 78.54%   57.30%  <total for region 1>

....[Hottest Regions]...............................................................................
 78.54%   57.30%         C2, level 4  com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20MBloomFilter, version 624 (437 bytes) 
  8.45%   24.71%         C2, level 4  com.github.prasanthj.bloomfilter.Murmur3::hash64, version 587 (300 bytes) 
  2.86%    7.80%         C2, level 4  com.github.prasanthj.bloomfilter.Murmur3::hash64, version 587 (77 bytes) 
  2.79%    2.65%           libjvm.so  [unknown] (9 bytes) 
  1.62%    1.44%           libjvm.so  [unknown] (50 bytes) 
  1.31%    1.28%   [kernel.kallsyms]  native_write_msr_safe (0 bytes) 
  0.45%    0.97%         C2, level 4  com.github.prasanthj.bloomfilter.Murmur3::hash64, version 587 (30 bytes) 
  0.43%    0.01%   [kernel.kallsyms]  page_fault (0 bytes) 
  0.29%    0.03%   [kernel.kallsyms]  do_numa_page (0 bytes) 
  0.12%    0.14%           libjvm.so  [unknown] (158 bytes) 
  0.09%    0.02%   [kernel.kallsyms]  change_protection_range (0 bytes) 
  0.09%    0.01%   [kernel.kallsyms]  mutex_unlock (6 bytes) 
  0.07%            [kernel.kallsyms]  mutex_lock (0 bytes) 
  0.06%    0.04%   [kernel.kallsyms]  __srcu_read_lock (64 bytes) 
  0.06%            [kernel.kallsyms]  _raw_spin_unlock_irqrestore (33 bytes) 
  0.06%            [kernel.kallsyms]  _raw_spin_lock_irqsave (0 bytes) 
  0.05%                    libjvm.so  [unknown] (0 bytes) 
  0.05%                    libjvm.so  [unknown] (7 bytes) 
  0.05%    0.03%        libc-2.17.so  __memcpy_ssse3_back (24 bytes) 
  0.04%    0.03%   [kernel.kallsyms]  __sb_end_write (14 bytes) 
  2.55%    3.55%  <...other 391 warm regions...>
....................................................................................................
 99.99%  100.00%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 78.54%   57.30%         C2, level 4  com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe::testProbe20MBloomFilter, version 624 
 11.76%   33.48%         C2, level 4  com.github.prasanthj.bloomfilter.Murmur3::hash64, version 587 
  5.28%    5.34%           libjvm.so  [unknown] 
  1.31%    1.28%   [kernel.kallsyms]  native_write_msr_safe 
  0.43%    0.01%   [kernel.kallsyms]  page_fault 
  0.29%    0.05%   [kernel.kallsyms]  do_numa_page 
  0.09%    0.05%        libc-2.17.so  __memcpy_ssse3_back 
  0.09%    0.01%   [kernel.kallsyms]  mutex_unlock 
  0.09%    0.05%   [kernel.kallsyms]  change_protection_range 
  0.08%    0.03%   [kernel.kallsyms]  pipe_write 
  0.07%            [kernel.kallsyms]  mutex_lock 
  0.06%            [kernel.kallsyms]  _raw_spin_unlock_irqrestore 
  0.06%    0.05%   [kernel.kallsyms]  __srcu_read_lock 
  0.06%    0.09%        libc-2.17.so  vfprintf 
  0.06%            [kernel.kallsyms]  _raw_spin_lock_irqsave 
  0.05%    0.02%      hsdis-amd64.so  print_insn 
  0.05%    0.04%   [kernel.kallsyms]  __do_page_fault 
  0.04%            [kernel.kallsyms]  clear_page_c_e 
  0.04%    0.06%   [kernel.kallsyms]  _raw_spin_lock 
  0.04%    0.01%   [kernel.kallsyms]  fsnotify 
  1.54%    1.20%  <...other 107 warm methods...>
....................................................................................................
 99.99%   99.04%  <totals>

....[Distribution by Source]........................................................................
 90.30%   90.79%         C2, level 4
  5.28%    5.34%           libjvm.so
  3.65%    3.03%   [kernel.kallsyms]
  0.37%    0.58%        libc-2.17.so
  0.11%    0.04%      hsdis-amd64.so
  0.09%    0.09%  libpthread-2.17.so
  0.08%    0.01%              [jbd2]
  0.07%    0.09%              [ext4]
  0.03%    0.01%         interpreter
  0.02%               perf-32220.map
....................................................................................................
 99.99%  100.00%  <totals>



# Run complete. Total time: 00:02:17

Benchmark                                                 (size)  Mode  Cnt    Score    Error  Units
BenchmarkBloomFilterProbe.testProbe1BloomFilter            10000  avgt    5  129.795 ± 60.280  ns/op
BenchmarkBloomFilterProbe.testProbe1BloomFilter:·asm       10000  avgt           NaN             ---
BenchmarkBloomFilterProbe.testProbe1BloomFilter         10000000  avgt    5  118.247 ±  9.924  ns/op
BenchmarkBloomFilterProbe.testProbe1BloomFilter:·asm    10000000  avgt           NaN             ---
BenchmarkBloomFilterProbe.testProbe20KBloomFilter          10000  avgt    5   59.832 ±  6.702  ns/op
BenchmarkBloomFilterProbe.testProbe20KBloomFilter:·asm     10000  avgt           NaN             ---
BenchmarkBloomFilterProbe.testProbe20KBloomFilter       10000000  avgt    5  101.967 ± 40.430  ns/op
BenchmarkBloomFilterProbe.testProbe20KBloomFilter:·asm  10000000  avgt           NaN             ---
BenchmarkBloomFilterProbe.testProbe20MBloomFilter          10000  avgt    5   63.063 ±  7.741  ns/op
BenchmarkBloomFilterProbe.testProbe20MBloomFilter:·asm     10000  avgt           NaN             ---
BenchmarkBloomFilterProbe.testProbe20MBloomFilter       10000000  avgt    5   97.665 ± 28.187  ns/op
BenchmarkBloomFilterProbe.testProbe20MBloomFilter:·asm  10000000  avgt           NaN             ---
